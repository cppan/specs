{
    "project": "pvt.cppan.demo.gnu.gpg.assuan.assuan",
    "cppan": "source:\n    git: git:\/\/git.gnupg.org\/libassuan.git\n    tag: libassuan-{v}\n\nversion: 2.5.1\n\ntype: library\n\nexclude_from_build:\n    -   src\/funopen.c\n    -   src\/gpgce.*\n    -   src\/system-posix.c\n    -   src\/system-w32ce.c\n\noptions:\n    any:\n        definitions:\n            private:\n                -   BUILD_REVISION=\"\"\n                -   BUILD_TIMESTAMP=\"\"\n                -   HAVE_CONFIG_H\n\ndependencies:\n    public:\n        pvt.cppan.demo.gnu.gpg.assuan.tools.mkheader:\n            version: \"*\"\n            reference: mkheader\n        pvt.cppan.demo.gnu.gpg.error.gpg_error:\n            version: 1\n\npost_sources: |\n    if (WIN32)\n        replace_in_file_once(${SDIR}\/src\/assuan.h.in \"@include:types@\" \"typedef int pid_t;\")\n    endif()\n    \n    add_custom_command(OUTPUT ${BDIR}\/assuan.h\n        COMMAND ${mkheader} mingw32 ${SDIR}\/src\/assuan.h.in\n           ${PACKAGE_VERSION} ${PACKAGE_VERSION_NUM} > ${BDIR}\/assuan.h\n        DEPENDS ${SDIR}\/src\/assuan.h.in\n    )\n    set(src ${src} ${SDIR}\/src\/assuan.h.in ${BDIR}\/assuan.h)\n    \n    replace_in_file_once(${SDIR}\/src\/assuan-handler.c\n        \"{ } };\"\n        \"};\"\n    )\n    \n    if (WIN32)\n        file_write_once(${BDIR}\/unistd.h \"\")\n    endif()\n    file_write_once(${BDIR_PRIVATE}\/config.h \"\n        #ifdef _WIN32\n            #ifdef _WIN64\n            #define ssize_t long long\n            #else\n            #define ssize_t int\n            #endif\n        #endif\n    \n        #define gpgme_ssize_t ssize_t\n        #define gpgme_off_t off_t\n    \n        #define GPGME_GCC_A_PURE\n    \")\n\ncheck_function_exists:\n    -   flockfile\n    -   fopencookie\n    -   funlockfile\n    -   funopen\n    -   getaddrinfo\n    -   getpeereid\n    -   getpeerucred\n    -   getrlimit\n    -   inet_pton\n    -   setsockopt\n    -   stat\n\ncheck_include_exists:\n    -   file: fcntl.h\n        variable: HAVE_FCNTL_H\n        cpp: false\n    -   file: inttypes.h\n        variable: HAVE_INTTYPES_H\n        cpp: false\n    -   file: locale.h\n        variable: HAVE_LOCALE_H\n        cpp: false\n    -   file: stdint.h\n        variable: HAVE_STDINT_H\n        cpp: false\n    -   file: stdlib.h\n        variable: HAVE_STDLIB_H\n        cpp: false\n    -   file: string.h\n        variable: HAVE_STRING_H\n        cpp: false\n    -   file: sys\/select.h\n        variable: HAVE_SYS_SELECT_H\n        cpp: false\n    -   file: sys\/stat.h\n        variable: HAVE_SYS_STAT_H\n        cpp: false\n    -   file: sys\/time.h\n        variable: HAVE_SYS_TIME_H\n        cpp: false\n    -   file: sys\/types.h\n        variable: HAVE_SYS_TYPES_H\n        cpp: false\n    -   file: sys\/ucred.h\n        variable: HAVE_SYS_UCRED_H\n        cpp: false\n    -   file: sys\/uio.h\n        variable: HAVE_SYS_UIO_H\n        cpp: false\n    -   file: ucred.h\n        variable: HAVE_UCRED_H\n        cpp: false\n    -   file: unistd.h\n        variable: HAVE_UNISTD_H\n        cpp: false\n    -   file: winsock2.h\n        variable: HAVE_WINSOCK2_H\n        cpp: false\n\ncheck_type_size:\n    -   type: signal\n    -   type: uint16_t\n    -   type: uintptr_t\n\ncheck_library_function:\n    -   function: setsockopt\n        library: socket\n\ncheck_struct_member:\n    -   member: cmsg_len\n        struct: struct cmsghdr\n    -   member: pid\n        struct: struct sockpeercred\n\ncheck_c_source_compiles:\n    STDC_HEADERS:\n        text: \"\\n#include <stdlib.h>\\n#include <stdarg.h>\\n#include <string.h>\\n#include <float.h>\\nint main() {return 0;}\\n\"\n        invert: false\n\n",
    "source": {
        "git": {
            "url": "git:\/\/git.gnupg.org\/libassuan.git",
            "tag": "libassuan-{v}"
        }
    },
    "version": "2.5.1",
    "hash": "a03e21a129e6cd8689d71e60a59beeafba61c61cbc7837cc8f1dd985879f13b5",
    "created": "2018-08-03 22:10:09.071951"
}
