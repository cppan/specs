{
    "project": "pvt.cppan.demo.gnu.gcc.config",
    "version": "8.2.0",
    "cppan": "source:\n    remote: ftp:\/\/ftp.gnu.org\/gnu\/gcc\/gcc-{v}\/gcc-{v}.tar.xz\n\nversion: 8.2.0\n\ntype: library\n\nempty: true\n\ncustom: true\n\nstatic_only: true\n\ninclude_directories:\n    public:\n        -   include\n        -   gcc\n\noptions:\n    any:\n        definitions:\n            public:\n                -   HAVE_CONFIG_H\n            win32:\n                public:\n                    -   STDERR_FILENO=STDERR_FILE_NO\n                    -   STDIN_FILENO=STDIN_FILE_NO\n                    -   STDOUT_FILENO=STDOUT_FILE_NO\n                    -   __extension__=\n                    -   pid_t=int\n                    -   ssize_t=int\n\ndependencies:\n    public:\n        pvt.cppan.demo.gnu.gmp.lib:\n            version: \"*\"\n\npost_sources: |\n    file_write_once(${BDIR}\/dummy.c \"void __dummy_ffff(){}\")\n    set(src ${src} ${BDIR}\/dummy.c)\n    \n    file_write_once(${BDIR}\/config.h \"\n        #define WIN32_LEAN_AND_MEAN\n        #include <windows.h>\n        #include <winsock2.h>\n    \n        #define UNSIGNED_64BIT_TYPE unsigned long long\n    \n        #define WINBOOL BOOL\n    \")\n    \n    file_write_once(${BDIR}\/bconfig.h \"\n        #ifndef GCC_BCONFIG_H\n        #define GCC_BCONFIG_H\n        \/\/#include \\\"auto-host.h\\\"\n        #ifdef IN_GCC\n        # include \\\"ansidecl.h\\\"\n        #endif\n        #endif \/* GCC_BCONFIG_H *\/\n    \")\n    \n    file_write_once(${BDIR}\/tm.h \"\n        #ifndef GCC_TM_H\n        #define GCC_TM_H\n        #ifndef LIBC_GLIBC\n        # define LIBC_GLIBC 1\n        #endif\n        #ifndef LIBC_UCLIBC\n        # define LIBC_UCLIBC 2\n        #endif\n        #ifndef LIBC_BIONIC\n        # define LIBC_BIONIC 3\n        #endif\n        #ifndef LIBC_MUSL\n        # define LIBC_MUSL 4\n        #endif\n        #ifndef DEFAULT_LIBC\n        # define DEFAULT_LIBC LIBC_GLIBC\n        #endif\n        #ifndef ANDROID_DEFAULT\n        # define ANDROID_DEFAULT 0\n        #endif\n        #ifdef IN_GCC\n        # include \\\"options.h\\\"\n        # include \\\"insn-constants.h\\\"\n        # include \\\"config\/vxworks-dummy.h\\\"\n        # include \\\"config\/i386\/biarch64.h\\\"\n        # include \\\"config\/i386\/i386.h\\\"\n        # include \\\"config\/i386\/unix.h\\\"\n        # include \\\"config\/i386\/att.h\\\"\n        # include \\\"config\/dbxelf.h\\\"\n        # include \\\"config\/elfos.h\\\"\n        # include \\\"config\/gnu-user.h\\\"\n        # include \\\"config\/glibc-stdint.h\\\"\n        # include \\\"config\/i386\/x86-64.h\\\"\n        # include \\\"config\/i386\/gnu-user-common.h\\\"\n        # include \\\"config\/i386\/gnu-user64.h\\\"\n        # include \\\"config\/linux.h\\\"\n        # include \\\"config\/linux-android.h\\\"\n        # include \\\"config\/i386\/linux-common.h\\\"\n        # include \\\"config\/i386\/linux64.h\\\"\n        # include \\\"config\/initfini-array.h\\\"\n        #endif\n        #if defined IN_GCC && !defined GENERATOR_FILE && !defined USED_FOR_TARGET\n        # include \\\"insn-flags.h\\\"\n        #endif\n        #if defined IN_GCC && !defined GENERATOR_FILE\n        # include \\\"insn-modes.h\\\"\n        #endif\n        # include \\\"defaults.h\\\"\n        #endif \/* GCC_TM_H *\/\n    \")\n    \n    file_write_once(${BDIR}\/options.h \"\n        \/* This file is auto-generated by opth-gen.awk.  *\/\n    \n        #ifndef OPTIONS_H\n        #define OPTIONS_H\n    \n        #include \\\"flag-types.h\\\"\n    \n        #include \\\"config\/i386\/i386-opts.h\\\"\n    \n        #if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)\n        #ifndef GENERATOR_FILE\n        #if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS)\n        struct GTY(()) gcc_options\n        #else\n        struct gcc_options\n        #endif\n        {\n        #endif\n        #ifdef GENERATOR_FILE\n        extern HOST_WIDE_INT ix86_stack_protector_guard_offset;\n        #else\n          HOST_WIDE_INT x_ix86_stack_protector_guard_offset;\n        #define ix86_stack_protector_guard_offset global_options.x_ix86_stack_protector_guard_offset\n        #endif\n        #ifdef GENERATOR_FILE\n        extern addr_space_t ix86_stack_protector_guard_reg;\n        #else\n          addr_space_t x_ix86_stack_protector_guard_reg;\n        #define ix86_stack_protector_guard_reg global_options.x_ix86_stack_protector_guard_reg\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int recip_mask;\n        #else\n          int x_recip_mask;\n        #define recip_mask global_options.x_recip_mask\n        #endif\n        #ifdef GENERATOR_FILE\n        extern HOST_WIDE_INT frame_larger_than_size;\n        #else\n          HOST_WIDE_INT x_frame_larger_than_size;\n        #define frame_larger_than_size global_options.x_frame_larger_than_size\n        #endif\n        #ifdef GENERATOR_FILE\n        extern HOST_WIDE_INT function_entry_patch_area_size;\n        #else\n          HOST_WIDE_INT x_function_entry_patch_area_size;\n        #define function_entry_patch_area_size global_options.x_function_entry_patch_area_size\n        #endif\n        #ifdef GENERATOR_FILE\n        extern HOST_WIDE_INT function_entry_patch_area_start;\n        #else\n          HOST_WIDE_INT x_function_entry_patch_area_start;\n        #define function_entry_patch_area_start global_options.x_function_entry_patch_area_start\n        #endif\n        #ifdef GENERATOR_FILE\n        extern HOST_WIDE_INT ix86_isa_flags;\n        #else\n          HOST_WIDE_INT x_ix86_isa_flags;\n        #define ix86_isa_flags global_options.x_ix86_isa_flags\n        #endif\n        #ifdef GENERATOR_FILE\n        extern HOST_WIDE_INT ix86_isa_flags2;\n        #else\n          HOST_WIDE_INT x_ix86_isa_flags2;\n        #define ix86_isa_flags2 global_options.x_ix86_isa_flags2\n        #endif\n        #ifdef GENERATOR_FILE\n        extern HOST_WIDE_INT ix86_isa_flags2_explicit;\n        #else\n          HOST_WIDE_INT x_ix86_isa_flags2_explicit;\n        #define ix86_isa_flags2_explicit global_options.x_ix86_isa_flags2_explicit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern HOST_WIDE_INT ix86_isa_flags_explicit;\n        #else\n          HOST_WIDE_INT x_ix86_isa_flags_explicit;\n        #define ix86_isa_flags_explicit global_options.x_ix86_isa_flags_explicit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern HOST_WIDE_INT larger_than_size;\n        #else\n          HOST_WIDE_INT x_larger_than_size;\n        #define larger_than_size global_options.x_larger_than_size\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool dump_base_name_prefixed;\n        #else\n          bool x_dump_base_name_prefixed;\n        #define dump_base_name_prefixed global_options.x_dump_base_name_prefixed\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool exit_after_options;\n        #else\n          bool x_exit_after_options;\n        #define exit_after_options global_options.x_exit_after_options\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool flag_disable_hsa;\n        #else\n          bool x_flag_disable_hsa;\n        #define flag_disable_hsa global_options.x_flag_disable_hsa\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool flag_dump_all_passed;\n        #else\n          bool x_flag_dump_all_passed;\n        #define flag_dump_all_passed global_options.x_flag_dump_all_passed\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool flag_opts_finished;\n        #else\n          bool x_flag_opts_finished;\n        #define flag_opts_finished global_options.x_flag_opts_finished\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool flag_stack_usage_info;\n        #else\n          bool x_flag_stack_usage_info;\n        #define flag_stack_usage_info global_options.x_flag_stack_usage_info\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool flag_warn_unused_result;\n        #else\n          bool x_flag_warn_unused_result;\n        #define flag_warn_unused_result global_options.x_flag_warn_unused_result\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool in_lto_p;\n        #else\n          bool x_in_lto_p;\n        #define in_lto_p global_options.x_in_lto_p\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool use_gnu_debug_info_extensions;\n        #else\n          bool x_use_gnu_debug_info_extensions;\n        #define use_gnu_debug_info_extensions global_options.x_use_gnu_debug_info_extensions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool warn_frame_larger_than;\n        #else\n          bool x_warn_frame_larger_than;\n        #define warn_frame_larger_than global_options.x_warn_frame_larger_than\n        #endif\n        #ifdef GENERATOR_FILE\n        extern bool warn_larger_than;\n        #else\n          bool x_warn_larger_than;\n        #define warn_larger_than global_options.x_warn_larger_than\n        #endif\n        #ifdef GENERATOR_FILE\n        extern char *help_enum_printed;\n        #else\n          char * x_help_enum_printed;\n        #define help_enum_printed global_options.x_help_enum_printed\n        #endif\n        #ifdef GENERATOR_FILE\n        extern char *help_printed;\n        #else\n          char * x_help_printed;\n        #define help_printed global_options.x_help_printed\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *main_input_basename;\n        #else\n          const char * x_main_input_basename;\n        #define main_input_basename global_options.x_main_input_basename\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *main_input_filename;\n        #else\n          const char * x_main_input_filename;\n        #define main_input_filename global_options.x_main_input_filename\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum debug_info_levels debug_info_level;\n        #else\n          enum debug_info_levels x_debug_info_level;\n        #define debug_info_level global_options.x_debug_info_level\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum debug_info_type write_symbols;\n        #else\n          enum debug_info_type x_write_symbols;\n        #define write_symbols global_options.x_write_symbols\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum debug_struct_file debug_struct_generic[DINFO_USAGE_NUM_ENUMS];\n        #else\n          enum debug_struct_file x_debug_struct_generic[DINFO_USAGE_NUM_ENUMS];\n        #define debug_struct_generic global_options.x_debug_struct_generic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum debug_struct_file debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];\n        #else\n          enum debug_struct_file x_debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];\n        #define debug_struct_ordinary global_options.x_debug_struct_ordinary\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum dwarf_gnat_encodings gnat_encodings;\n        #else\n          enum dwarf_gnat_encodings x_gnat_encodings;\n        #define gnat_encodings global_options.x_gnat_encodings\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum stack_check_type flag_stack_check;\n        #else\n          enum stack_check_type x_flag_stack_check;\n        #define flag_stack_check global_options.x_flag_stack_check\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int *param_values;\n        #else\n          int * x_param_values;\n        #define param_values global_options.x_param_values\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_complex_method;\n        #else\n          int x_flag_complex_method;\n        #define flag_complex_method global_options.x_flag_complex_method\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_debug_asm;\n        #else\n          int x_flag_debug_asm;\n        #define flag_debug_asm global_options.x_flag_debug_asm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_rtl_in_asm;\n        #else\n          int x_flag_dump_rtl_in_asm;\n        #define flag_dump_rtl_in_asm global_options.x_flag_dump_rtl_in_asm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gen_aux_info;\n        #else\n          int x_flag_gen_aux_info;\n        #define flag_gen_aux_info global_options.x_flag_gen_aux_info\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_generate_lto;\n        #else\n          int x_flag_generate_lto;\n        #define flag_generate_lto global_options.x_flag_generate_lto\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_generate_offload;\n        #else\n          int x_flag_generate_offload;\n        #define flag_generate_offload global_options.x_flag_generate_offload\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_incremental_link;\n        #else\n          int x_flag_incremental_link;\n        #define flag_incremental_link global_options.x_flag_incremental_link\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_print_asm_name;\n        #else\n          int x_flag_print_asm_name;\n        #define flag_print_asm_name global_options.x_flag_print_asm_name\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_shlib;\n        #else\n          int x_flag_shlib;\n        #define flag_shlib global_options.x_flag_shlib\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_target_flags;\n        #else\n          int x_ix86_target_flags;\n        #define ix86_target_flags global_options.x_ix86_target_flags\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int main_input_baselength;\n        #else\n          int x_main_input_baselength;\n        #define main_input_baselength global_options.x_main_input_baselength\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int optimize;\n        #else\n          int x_optimize;\n        #define optimize global_options.x_optimize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int optimize_debug;\n        #else\n          int x_optimize_debug;\n        #define optimize_debug global_options.x_optimize_debug\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int optimize_fast;\n        #else\n          int x_optimize_fast;\n        #define optimize_fast global_options.x_optimize_fast\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int optimize_size;\n        #else\n          int x_optimize_size;\n        #define optimize_size global_options.x_optimize_size\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int recip_mask_explicit;\n        #else\n          int x_recip_mask_explicit;\n        #define recip_mask_explicit global_options.x_recip_mask_explicit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int rtl_dump_and_exit;\n        #else\n          int x_rtl_dump_and_exit;\n        #define rtl_dump_and_exit global_options.x_rtl_dump_and_exit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int target_flags;\n        #else\n          int x_target_flags;\n        #define target_flags global_options.x_target_flags\n        #endif\n        #ifdef GENERATOR_FILE\n        extern unsigned int flag_sanitize;\n        #else\n          unsigned int x_flag_sanitize;\n        #define flag_sanitize global_options.x_flag_sanitize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern unsigned int flag_sanitize_coverage;\n        #else\n          unsigned int x_flag_sanitize_coverage;\n        #define flag_sanitize_coverage global_options.x_flag_sanitize_coverage\n        #endif\n        #ifdef GENERATOR_FILE\n        extern unsigned int flag_sanitize_recover;\n        #else\n          unsigned int x_flag_sanitize_recover;\n        #define flag_sanitize_recover global_options.x_flag_sanitize_recover\n        #endif\n        #ifdef GENERATOR_FILE\n        extern unsigned int help_columns;\n        #else\n          unsigned int x_help_columns;\n        #define help_columns global_options.x_help_columns\n        #endif\n        #ifdef GENERATOR_FILE\n        extern unsigned int initial_max_fld_align;\n        #else\n          unsigned int x_initial_max_fld_align;\n        #define initial_max_fld_align global_options.x_initial_max_fld_align\n        #endif\n        #ifdef GENERATOR_FILE\n        extern void *flag_instrument_functions_exclude_files;\n        #else\n          void * x_flag_instrument_functions_exclude_files;\n        #define flag_instrument_functions_exclude_files global_options.x_flag_instrument_functions_exclude_files\n        #endif\n        #ifdef GENERATOR_FILE\n        extern void *flag_instrument_functions_exclude_functions;\n        #else\n          void * x_flag_instrument_functions_exclude_functions;\n        #define flag_instrument_functions_exclude_functions global_options.x_flag_instrument_functions_exclude_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int help_flag;\n        #else\n          int x_help_flag;\n        #define help_flag global_options.x_help_flag\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int no_sysroot_suffix;\n        #else\n          int x_no_sysroot_suffix;\n        #define no_sysroot_suffix global_options.x_no_sysroot_suffix\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_preprocess_only;\n        #else\n          int x_flag_preprocess_only;\n        #define flag_preprocess_only global_options.x_flag_preprocess_only\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_abi;\n        #else\n          int x_warn_abi;\n        #define warn_abi global_options.x_warn_abi\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_abi_tag;\n        #else\n          int x_warn_abi_tag;\n        #define warn_abi_tag global_options.x_warn_abi_tag\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_address;\n        #else\n          int x_warn_address;\n        #define warn_address global_options.x_warn_address\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_aggregate_return;\n        #else\n          int x_warn_aggregate_return;\n        #define warn_aggregate_return global_options.x_warn_aggregate_return\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_aggressive_loop_optimizations;\n        #else\n          int x_warn_aggressive_loop_optimizations;\n        #define warn_aggressive_loop_optimizations global_options.x_warn_aggressive_loop_optimizations\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_aliasing;\n        #else\n          int x_warn_aliasing;\n        #define warn_aliasing global_options.x_warn_aliasing\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_align_commons;\n        #else\n          int x_warn_align_commons;\n        #define warn_align_commons global_options.x_warn_align_commons\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_aligned_new;\n        #else\n          int x_warn_aligned_new;\n        #define warn_aligned_new global_options.x_warn_aligned_new\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *warn_alloc_size_limit;\n        #else\n          const char *x_warn_alloc_size_limit;\n        #define warn_alloc_size_limit global_options.x_warn_alloc_size_limit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_alloc_zero;\n        #else\n          int x_warn_alloc_zero;\n        #define warn_alloc_zero global_options.x_warn_alloc_zero\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_alloca;\n        #else\n          int x_warn_alloca;\n        #define warn_alloca global_options.x_warn_alloca\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_alloca_limit;\n        #else\n          int x_warn_alloca_limit;\n        #define warn_alloca_limit global_options.x_warn_alloca_limit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_ampersand;\n        #else\n          int x_warn_ampersand;\n        #define warn_ampersand global_options.x_warn_ampersand\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_argument_mismatch;\n        #else\n          int x_warn_argument_mismatch;\n        #define warn_argument_mismatch global_options.x_warn_argument_mismatch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_array_bounds;\n        #else\n          int x_warn_array_bounds;\n        #define warn_array_bounds global_options.x_warn_array_bounds\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_array_temporaries;\n        #else\n          int x_warn_array_temporaries;\n        #define warn_array_temporaries global_options.x_warn_array_temporaries\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_assign_intercept;\n        #else\n          int x_warn_assign_intercept;\n        #define warn_assign_intercept global_options.x_warn_assign_intercept\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_attributes;\n        #else\n          int x_warn_attributes;\n        #define warn_attributes global_options.x_warn_attributes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_bad_function_cast;\n        #else\n          int x_warn_bad_function_cast;\n        #define warn_bad_function_cast global_options.x_warn_bad_function_cast\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_bool_compare;\n        #else\n          int x_warn_bool_compare;\n        #define warn_bool_compare global_options.x_warn_bool_compare\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_bool_op;\n        #else\n          int x_warn_bool_op;\n        #define warn_bool_op global_options.x_warn_bool_op\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_builtin_declaraion_mismatch;\n        #else\n          int x_warn_builtin_declaraion_mismatch;\n        #define warn_builtin_declaraion_mismatch global_options.x_warn_builtin_declaraion_mismatch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_builtin_macro_redefined;\n        #else\n          int x_cpp_warn_builtin_macro_redefined;\n        #define cpp_warn_builtin_macro_redefined global_options.x_cpp_warn_builtin_macro_redefined\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_cxx_compat;\n        #else\n          int x_warn_cxx_compat;\n        #define warn_cxx_compat global_options.x_warn_cxx_compat\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_cxx11_compat;\n        #else\n          int x_warn_cxx11_compat;\n        #define warn_cxx11_compat global_options.x_warn_cxx11_compat\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_cxx14_compat;\n        #else\n          int x_warn_cxx14_compat;\n        #define warn_cxx14_compat global_options.x_warn_cxx14_compat\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_cxx17_compat;\n        #else\n          int x_warn_cxx17_compat;\n        #define warn_cxx17_compat global_options.x_warn_cxx17_compat\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_c_binding_type;\n        #else\n          int x_warn_c_binding_type;\n        #define warn_c_binding_type global_options.x_warn_c_binding_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_c90_c99_compat;\n        #else\n          int x_warn_c90_c99_compat;\n        #define warn_c90_c99_compat global_options.x_warn_c90_c99_compat\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_c99_c11_compat;\n        #else\n          int x_warn_c99_c11_compat;\n        #define warn_c99_c11_compat global_options.x_warn_c99_c11_compat\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_cast_align;\n        #else\n          int x_warn_cast_align;\n        #define warn_cast_align global_options.x_warn_cast_align\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_cast_function_type;\n        #else\n          int x_warn_cast_function_type;\n        #define warn_cast_function_type global_options.x_warn_cast_function_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_cast_qual;\n        #else\n          int x_warn_cast_qual;\n        #define warn_cast_qual global_options.x_warn_cast_qual\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_catch_value;\n        #else\n          int x_warn_catch_value;\n        #define warn_catch_value global_options.x_warn_catch_value\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_char_subscripts;\n        #else\n          int x_warn_char_subscripts;\n        #define warn_char_subscripts global_options.x_warn_char_subscripts\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_character_truncation;\n        #else\n          int x_warn_character_truncation;\n        #define warn_character_truncation global_options.x_warn_character_truncation\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_chkp;\n        #else\n          int x_warn_chkp;\n        #define warn_chkp global_options.x_warn_chkp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_class_memaccess;\n        #else\n          int x_warn_class_memaccess;\n        #define warn_class_memaccess global_options.x_warn_class_memaccess\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_clobbered;\n        #else\n          int x_warn_clobbered;\n        #define warn_clobbered global_options.x_warn_clobbered\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_comment;\n        #else\n          int x_cpp_warn_comment;\n        #define cpp_warn_comment global_options.x_cpp_warn_comment\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_compare_reals;\n        #else\n          int x_warn_compare_reals;\n        #define warn_compare_reals global_options.x_warn_compare_reals\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_conditionally_supported;\n        #else\n          int x_warn_conditionally_supported;\n        #define warn_conditionally_supported global_options.x_warn_conditionally_supported\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_conversion;\n        #else\n          int x_warn_conversion;\n        #define warn_conversion global_options.x_warn_conversion\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_conversion_extra;\n        #else\n          int x_warn_conversion_extra;\n        #define warn_conversion_extra global_options.x_warn_conversion_extra\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_conversion_null;\n        #else\n          int x_warn_conversion_null;\n        #define warn_conversion_null global_options.x_warn_conversion_null\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_coverage_mismatch;\n        #else\n          int x_warn_coverage_mismatch;\n        #define warn_coverage_mismatch global_options.x_warn_coverage_mismatch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_cpp;\n        #else\n          int x_warn_cpp;\n        #define warn_cpp global_options.x_warn_cpp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_ctor_dtor_privacy;\n        #else\n          int x_warn_ctor_dtor_privacy;\n        #define warn_ctor_dtor_privacy global_options.x_warn_ctor_dtor_privacy\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_dangling_else;\n        #else\n          int x_warn_dangling_else;\n        #define warn_dangling_else global_options.x_warn_dangling_else\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_date_time;\n        #else\n          int x_cpp_warn_date_time;\n        #define cpp_warn_date_time global_options.x_cpp_warn_date_time\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_declaration_after_statement;\n        #else\n          int x_warn_declaration_after_statement;\n        #define warn_declaration_after_statement global_options.x_warn_declaration_after_statement\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_delete_incomplete;\n        #else\n          int x_warn_delete_incomplete;\n        #define warn_delete_incomplete global_options.x_warn_delete_incomplete\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_delnonvdtor;\n        #else\n          int x_warn_delnonvdtor;\n        #define warn_delnonvdtor global_options.x_warn_delnonvdtor\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_deprecated;\n        #else\n          int x_warn_deprecated;\n        #define warn_deprecated global_options.x_warn_deprecated\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_deprecated_decl;\n        #else\n          int x_warn_deprecated_decl;\n        #define warn_deprecated_decl global_options.x_warn_deprecated_decl\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_designated_init;\n        #else\n          int x_warn_designated_init;\n        #define warn_designated_init global_options.x_warn_designated_init\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_disabled_optimization;\n        #else\n          int x_warn_disabled_optimization;\n        #define warn_disabled_optimization global_options.x_warn_disabled_optimization\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_discarded_array_qualifiers;\n        #else\n          int x_warn_discarded_array_qualifiers;\n        #define warn_discarded_array_qualifiers global_options.x_warn_discarded_array_qualifiers\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_discarded_qualifiers;\n        #else\n          int x_warn_discarded_qualifiers;\n        #define warn_discarded_qualifiers global_options.x_warn_discarded_qualifiers\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_div_by_zero;\n        #else\n          int x_warn_div_by_zero;\n        #define warn_div_by_zero global_options.x_warn_div_by_zero\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_do_subscript;\n        #else\n          int x_warn_do_subscript;\n        #define warn_do_subscript global_options.x_warn_do_subscript\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_double_promotion;\n        #else\n          int x_warn_double_promotion;\n        #define warn_double_promotion global_options.x_warn_double_promotion\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_duplicate_decl_specifier;\n        #else\n          int x_warn_duplicate_decl_specifier;\n        #define warn_duplicate_decl_specifier global_options.x_warn_duplicate_decl_specifier\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_duplicated_branches;\n        #else\n          int x_warn_duplicated_branches;\n        #define warn_duplicated_branches global_options.x_warn_duplicated_branches\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_duplicated_cond;\n        #else\n          int x_warn_duplicated_cond;\n        #define warn_duplicated_cond global_options.x_warn_duplicated_cond\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_ecpp;\n        #else\n          int x_warn_ecpp;\n        #define warn_ecpp global_options.x_warn_ecpp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_empty_body;\n        #else\n          int x_warn_empty_body;\n        #define warn_empty_body global_options.x_warn_empty_body\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_endif_labels;\n        #else\n          int x_cpp_warn_endif_labels;\n        #define cpp_warn_endif_labels global_options.x_cpp_warn_endif_labels\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_enum_compare;\n        #else\n          int x_warn_enum_compare;\n        #define warn_enum_compare global_options.x_warn_enum_compare\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warnings_are_errors;\n        #else\n          int x_warnings_are_errors;\n        #define warnings_are_errors global_options.x_warnings_are_errors\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_expansion_to_defined;\n        #else\n          int x_cpp_warn_expansion_to_defined;\n        #define cpp_warn_expansion_to_defined global_options.x_cpp_warn_expansion_to_defined\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int extra_warnings;\n        #else\n          int x_extra_warnings;\n        #define extra_warnings global_options.x_extra_warnings\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_extra_semi;\n        #else\n          int x_warn_extra_semi;\n        #define warn_extra_semi global_options.x_warn_extra_semi\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_fatal_errors;\n        #else\n          int x_flag_fatal_errors;\n        #define flag_fatal_errors global_options.x_flag_fatal_errors\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_float_conversion;\n        #else\n          int x_warn_float_conversion;\n        #define warn_float_conversion global_options.x_warn_float_conversion\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_float_equal;\n        #else\n          int x_warn_float_equal;\n        #define warn_float_equal global_options.x_warn_float_equal\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format_contains_nul;\n        #else\n          int x_warn_format_contains_nul;\n        #define warn_format_contains_nul global_options.x_warn_format_contains_nul\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format_extra_args;\n        #else\n          int x_warn_format_extra_args;\n        #define warn_format_extra_args global_options.x_warn_format_extra_args\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format_nonliteral;\n        #else\n          int x_warn_format_nonliteral;\n        #define warn_format_nonliteral global_options.x_warn_format_nonliteral\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format_overflow;\n        #else\n          int x_warn_format_overflow;\n        #define warn_format_overflow global_options.x_warn_format_overflow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format_security;\n        #else\n          int x_warn_format_security;\n        #define warn_format_security global_options.x_warn_format_security\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format_signedness;\n        #else\n          int x_warn_format_signedness;\n        #define warn_format_signedness global_options.x_warn_format_signedness\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format_trunc;\n        #else\n          int x_warn_format_trunc;\n        #define warn_format_trunc global_options.x_warn_format_trunc\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format_y2k;\n        #else\n          int x_warn_format_y2k;\n        #define warn_format_y2k global_options.x_warn_format_y2k\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format_zero_length;\n        #else\n          int x_warn_format_zero_length;\n        #define warn_format_zero_length global_options.x_warn_format_zero_length\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_format;\n        #else\n          int x_warn_format;\n        #define warn_format global_options.x_warn_format\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_frame_address;\n        #else\n          int x_warn_frame_address;\n        #define warn_frame_address global_options.x_warn_frame_address\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_free_nonheap_object;\n        #else\n          int x_warn_free_nonheap_object;\n        #define warn_free_nonheap_object global_options.x_warn_free_nonheap_object\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_warn_frontend_loop_interchange;\n        #else\n          int x_flag_warn_frontend_loop_interchange;\n        #define flag_warn_frontend_loop_interchange global_options.x_flag_warn_frontend_loop_interchange\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_function_elimination;\n        #else\n          int x_warn_function_elimination;\n        #define warn_function_elimination global_options.x_warn_function_elimination\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_hsa;\n        #else\n          int x_warn_hsa;\n        #define warn_hsa global_options.x_warn_hsa\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_if_not_aligned;\n        #else\n          int x_warn_if_not_aligned;\n        #define warn_if_not_aligned global_options.x_warn_if_not_aligned\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_ignored_attributes;\n        #else\n          int x_warn_ignored_attributes;\n        #define warn_ignored_attributes global_options.x_warn_ignored_attributes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_ignored_qualifiers;\n        #else\n          int x_warn_ignored_qualifiers;\n        #define warn_ignored_qualifiers global_options.x_warn_ignored_qualifiers\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_implicit;\n        #else\n          int x_warn_implicit;\n        #define warn_implicit global_options.x_warn_implicit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_implicit_fallthrough;\n        #else\n          int x_warn_implicit_fallthrough;\n        #define warn_implicit_fallthrough global_options.x_warn_implicit_fallthrough\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_implicit_function_declaration;\n        #else\n          int x_warn_implicit_function_declaration;\n        #define warn_implicit_function_declaration global_options.x_warn_implicit_function_declaration\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_implicit_int;\n        #else\n          int x_warn_implicit_int;\n        #define warn_implicit_int global_options.x_warn_implicit_int\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_implicit_interface;\n        #else\n          int x_warn_implicit_interface;\n        #define warn_implicit_interface global_options.x_warn_implicit_interface\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_implicit_procedure;\n        #else\n          int x_warn_implicit_procedure;\n        #define warn_implicit_procedure global_options.x_warn_implicit_procedure\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_incompatible_pointer_types;\n        #else\n          int x_warn_incompatible_pointer_types;\n        #define warn_incompatible_pointer_types global_options.x_warn_incompatible_pointer_types\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_inh_var_ctor;\n        #else\n          int x_warn_inh_var_ctor;\n        #define warn_inh_var_ctor global_options.x_warn_inh_var_ctor\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_init_self;\n        #else\n          int x_warn_init_self;\n        #define warn_init_self global_options.x_warn_init_self\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_inline;\n        #else\n          int x_warn_inline;\n        #define warn_inline global_options.x_warn_inline\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_int_conversion;\n        #else\n          int x_warn_int_conversion;\n        #define warn_int_conversion global_options.x_warn_int_conversion\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_int_in_bool_context;\n        #else\n          int x_warn_int_in_bool_context;\n        #define warn_int_in_bool_context global_options.x_warn_int_in_bool_context\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_int_to_pointer_cast;\n        #else\n          int x_warn_int_to_pointer_cast;\n        #define warn_int_to_pointer_cast global_options.x_warn_int_to_pointer_cast\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_integer_division;\n        #else\n          int x_warn_integer_division;\n        #define warn_integer_division global_options.x_warn_integer_division\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_intrinsic_shadow;\n        #else\n          int x_warn_intrinsic_shadow;\n        #define warn_intrinsic_shadow global_options.x_warn_intrinsic_shadow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_intrinsics_std;\n        #else\n          int x_warn_intrinsics_std;\n        #define warn_intrinsics_std global_options.x_warn_intrinsics_std\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_invalid_memory_model;\n        #else\n          int x_warn_invalid_memory_model;\n        #define warn_invalid_memory_model global_options.x_warn_invalid_memory_model\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_invalid_offsetof;\n        #else\n          int x_warn_invalid_offsetof;\n        #define warn_invalid_offsetof global_options.x_warn_invalid_offsetof\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_invalid_pch;\n        #else\n          int x_cpp_warn_invalid_pch;\n        #define cpp_warn_invalid_pch global_options.x_cpp_warn_invalid_pch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_jump_misses_init;\n        #else\n          int x_warn_jump_misses_init;\n        #define warn_jump_misses_init global_options.x_warn_jump_misses_init\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_line_truncation;\n        #else\n          int x_warn_line_truncation;\n        #define warn_line_truncation global_options.x_warn_line_truncation\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_literal_suffix;\n        #else\n          int x_cpp_warn_literal_suffix;\n        #define cpp_warn_literal_suffix global_options.x_cpp_warn_literal_suffix\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_logical_not_paren;\n        #else\n          int x_warn_logical_not_paren;\n        #define warn_logical_not_paren global_options.x_warn_logical_not_paren\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_logical_op;\n        #else\n          int x_warn_logical_op;\n        #define warn_logical_op global_options.x_warn_logical_op\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_long_long;\n        #else\n          int x_warn_long_long;\n        #define warn_long_long global_options.x_warn_long_long\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_lto_type_mismatch;\n        #else\n          int x_warn_lto_type_mismatch;\n        #define warn_lto_type_mismatch global_options.x_warn_lto_type_mismatch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_main;\n        #else\n          int x_warn_main;\n        #define warn_main global_options.x_warn_main\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_maybe_uninitialized;\n        #else\n          int x_warn_maybe_uninitialized;\n        #define warn_maybe_uninitialized global_options.x_warn_maybe_uninitialized\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_memset_elt_size;\n        #else\n          int x_warn_memset_elt_size;\n        #define warn_memset_elt_size global_options.x_warn_memset_elt_size\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_memset_transposed_args;\n        #else\n          int x_warn_memset_transposed_args;\n        #define warn_memset_transposed_args global_options.x_warn_memset_transposed_args\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_misleading_indentation;\n        #else\n          int x_warn_misleading_indentation;\n        #define warn_misleading_indentation global_options.x_warn_misleading_indentation\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_missing_braces;\n        #else\n          int x_warn_missing_braces;\n        #define warn_missing_braces global_options.x_warn_missing_braces\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_missing_declarations;\n        #else\n          int x_warn_missing_declarations;\n        #define warn_missing_declarations global_options.x_warn_missing_declarations\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_missing_field_initializers;\n        #else\n          int x_warn_missing_field_initializers;\n        #define warn_missing_field_initializers global_options.x_warn_missing_field_initializers\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_missing_include_dirs;\n        #else\n          int x_cpp_warn_missing_include_dirs;\n        #define cpp_warn_missing_include_dirs global_options.x_cpp_warn_missing_include_dirs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_missing_parameter_type;\n        #else\n          int x_warn_missing_parameter_type;\n        #define warn_missing_parameter_type global_options.x_warn_missing_parameter_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_missing_prototypes;\n        #else\n          int x_warn_missing_prototypes;\n        #define warn_missing_prototypes global_options.x_warn_missing_prototypes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_multichar;\n        #else\n          int x_cpp_warn_multichar;\n        #define cpp_warn_multichar global_options.x_cpp_warn_multichar\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_multiple_inheritance;\n        #else\n          int x_warn_multiple_inheritance;\n        #define warn_multiple_inheritance global_options.x_warn_multiple_inheritance\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_multistatement_macros;\n        #else\n          int x_warn_multistatement_macros;\n        #define warn_multistatement_macros global_options.x_warn_multistatement_macros\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_namespaces;\n        #else\n          int x_warn_namespaces;\n        #define warn_namespaces global_options.x_warn_namespaces\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_narrowing;\n        #else\n          int x_warn_narrowing;\n        #define warn_narrowing global_options.x_warn_narrowing\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_nested_externs;\n        #else\n          int x_warn_nested_externs;\n        #define warn_nested_externs global_options.x_warn_nested_externs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_noexcept;\n        #else\n          int x_warn_noexcept;\n        #define warn_noexcept global_options.x_warn_noexcept\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_noexcept_type;\n        #else\n          int x_warn_noexcept_type;\n        #define warn_noexcept_type global_options.x_warn_noexcept_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_nontemplate_friend;\n        #else\n          int x_warn_nontemplate_friend;\n        #define warn_nontemplate_friend global_options.x_warn_nontemplate_friend\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_nonvdtor;\n        #else\n          int x_warn_nonvdtor;\n        #define warn_nonvdtor global_options.x_warn_nonvdtor\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_nonnull;\n        #else\n          int x_warn_nonnull;\n        #define warn_nonnull global_options.x_warn_nonnull\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_nonnull_compare;\n        #else\n          int x_warn_nonnull_compare;\n        #define warn_nonnull_compare global_options.x_warn_nonnull_compare\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_normalize;\n        #else\n          int x_cpp_warn_normalize;\n        #define cpp_warn_normalize global_options.x_cpp_warn_normalize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_null_dereference;\n        #else\n          int x_warn_null_dereference;\n        #define warn_null_dereference global_options.x_warn_null_dereference\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_odr_violations;\n        #else\n          int x_warn_odr_violations;\n        #define warn_odr_violations global_options.x_warn_odr_violations\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_old_style_cast;\n        #else\n          int x_warn_old_style_cast;\n        #define warn_old_style_cast global_options.x_warn_old_style_cast\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_old_style_declaration;\n        #else\n          int x_warn_old_style_declaration;\n        #define warn_old_style_declaration global_options.x_warn_old_style_declaration\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_old_style_definition;\n        #else\n          int x_warn_old_style_definition;\n        #define warn_old_style_definition global_options.x_warn_old_style_definition\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_openmp_simd;\n        #else\n          int x_warn_openmp_simd;\n        #define warn_openmp_simd global_options.x_warn_openmp_simd\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_overflow;\n        #else\n          int x_warn_overflow;\n        #define warn_overflow global_options.x_warn_overflow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_overlength_strings;\n        #else\n          int x_warn_overlength_strings;\n        #define warn_overlength_strings global_options.x_warn_overlength_strings\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_overloaded_virtual;\n        #else\n          int x_warn_overloaded_virtual;\n        #define warn_overloaded_virtual global_options.x_warn_overloaded_virtual\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_override_init;\n        #else\n          int x_warn_override_init;\n        #define warn_override_init global_options.x_warn_override_init\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_override_init_side_effects;\n        #else\n          int x_warn_override_init_side_effects;\n        #define warn_override_init_side_effects global_options.x_warn_override_init_side_effects\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_packed;\n        #else\n          int x_warn_packed;\n        #define warn_packed global_options.x_warn_packed\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_packed_bitfield_compat;\n        #else\n          int x_warn_packed_bitfield_compat;\n        #define warn_packed_bitfield_compat global_options.x_warn_packed_bitfield_compat\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_packed_not_aligned;\n        #else\n          int x_warn_packed_not_aligned;\n        #define warn_packed_not_aligned global_options.x_warn_packed_not_aligned\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_padded;\n        #else\n          int x_warn_padded;\n        #define warn_padded global_options.x_warn_padded\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_parentheses;\n        #else\n          int x_warn_parentheses;\n        #define warn_parentheses global_options.x_warn_parentheses\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int pedantic;\n        #else\n          int x_pedantic;\n        #define pedantic global_options.x_pedantic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_placement_new;\n        #else\n          int x_warn_placement_new;\n        #define warn_placement_new global_options.x_warn_placement_new\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_pmf2ptr;\n        #else\n          int x_warn_pmf2ptr;\n        #define warn_pmf2ptr global_options.x_warn_pmf2ptr\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_pointer_arith;\n        #else\n          int x_warn_pointer_arith;\n        #define warn_pointer_arith global_options.x_warn_pointer_arith\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_pointer_compare;\n        #else\n          int x_warn_pointer_compare;\n        #define warn_pointer_compare global_options.x_warn_pointer_compare\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_pointer_sign;\n        #else\n          int x_warn_pointer_sign;\n        #define warn_pointer_sign global_options.x_warn_pointer_sign\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_pointer_to_int_cast;\n        #else\n          int x_warn_pointer_to_int_cast;\n        #define warn_pointer_to_int_cast global_options.x_warn_pointer_to_int_cast\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_pragmas;\n        #else\n          int x_warn_pragmas;\n        #define warn_pragmas global_options.x_warn_pragmas\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_property_assign_default;\n        #else\n          int x_warn_property_assign_default;\n        #define warn_property_assign_default global_options.x_warn_property_assign_default\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_protocol;\n        #else\n          int x_warn_protocol;\n        #define warn_protocol global_options.x_warn_protocol\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_psabi;\n        #else\n          int x_warn_psabi;\n        #define warn_psabi global_options.x_warn_psabi\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_real_q_constant;\n        #else\n          int x_warn_real_q_constant;\n        #define warn_real_q_constant global_options.x_warn_real_q_constant\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_realloc_lhs;\n        #else\n          int x_warn_realloc_lhs;\n        #define warn_realloc_lhs global_options.x_warn_realloc_lhs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_realloc_lhs_all;\n        #else\n          int x_warn_realloc_lhs_all;\n        #define warn_realloc_lhs_all global_options.x_warn_realloc_lhs_all\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_redundant_decls;\n        #else\n          int x_warn_redundant_decls;\n        #define warn_redundant_decls global_options.x_warn_redundant_decls\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_register;\n        #else\n          int x_warn_register;\n        #define warn_register global_options.x_warn_register\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_reorder;\n        #else\n          int x_warn_reorder;\n        #define warn_reorder global_options.x_warn_reorder\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_restrict;\n        #else\n          int x_warn_restrict;\n        #define warn_restrict global_options.x_warn_restrict\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_return_local_addr;\n        #else\n          int x_warn_return_local_addr;\n        #define warn_return_local_addr global_options.x_warn_return_local_addr\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_return_type;\n        #else\n          int x_warn_return_type;\n        #define warn_return_type global_options.x_warn_return_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_selector;\n        #else\n          int x_warn_selector;\n        #define warn_selector global_options.x_warn_selector\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_sequence_point;\n        #else\n          int x_warn_sequence_point;\n        #define warn_sequence_point global_options.x_warn_sequence_point\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_shadow;\n        #else\n          int x_warn_shadow;\n        #define warn_shadow global_options.x_warn_shadow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_shadow_ivar;\n        #else\n          int x_warn_shadow_ivar;\n        #define warn_shadow_ivar global_options.x_warn_shadow_ivar\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_shadow_compatible_local;\n        #else\n          int x_warn_shadow_compatible_local;\n        #define warn_shadow_compatible_local global_options.x_warn_shadow_compatible_local\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_shadow_local;\n        #else\n          int x_warn_shadow_local;\n        #define warn_shadow_local global_options.x_warn_shadow_local\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_shift_count_negative;\n        #else\n          int x_warn_shift_count_negative;\n        #define warn_shift_count_negative global_options.x_warn_shift_count_negative\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_shift_count_overflow;\n        #else\n          int x_warn_shift_count_overflow;\n        #define warn_shift_count_overflow global_options.x_warn_shift_count_overflow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_shift_negative_value;\n        #else\n          int x_warn_shift_negative_value;\n        #define warn_shift_negative_value global_options.x_warn_shift_negative_value\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_shift_overflow;\n        #else\n          int x_warn_shift_overflow;\n        #define warn_shift_overflow global_options.x_warn_shift_overflow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_sign_compare;\n        #else\n          int x_warn_sign_compare;\n        #define warn_sign_compare global_options.x_warn_sign_compare\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_sign_conversion;\n        #else\n          int x_warn_sign_conversion;\n        #define warn_sign_conversion global_options.x_warn_sign_conversion\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_sign_promo;\n        #else\n          int x_warn_sign_promo;\n        #define warn_sign_promo global_options.x_warn_sign_promo\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_sized_deallocation;\n        #else\n          int x_warn_sized_deallocation;\n        #define warn_sized_deallocation global_options.x_warn_sized_deallocation\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_sizeof_array_argument;\n        #else\n          int x_warn_sizeof_array_argument;\n        #define warn_sizeof_array_argument global_options.x_warn_sizeof_array_argument\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_sizeof_pointer_div;\n        #else\n          int x_warn_sizeof_pointer_div;\n        #define warn_sizeof_pointer_div global_options.x_warn_sizeof_pointer_div\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_sizeof_pointer_memaccess;\n        #else\n          int x_warn_sizeof_pointer_memaccess;\n        #define warn_sizeof_pointer_memaccess global_options.x_warn_sizeof_pointer_memaccess\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_stack_protect;\n        #else\n          int x_warn_stack_protect;\n        #define warn_stack_protect global_options.x_warn_stack_protect\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_stack_usage;\n        #else\n          int x_warn_stack_usage;\n        #define warn_stack_usage global_options.x_warn_stack_usage\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_strict_aliasing;\n        #else\n          int x_warn_strict_aliasing;\n        #define warn_strict_aliasing global_options.x_warn_strict_aliasing\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_strict_null_sentinel;\n        #else\n          int x_warn_strict_null_sentinel;\n        #define warn_strict_null_sentinel global_options.x_warn_strict_null_sentinel\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_strict_overflow;\n        #else\n          int x_warn_strict_overflow;\n        #define warn_strict_overflow global_options.x_warn_strict_overflow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_strict_prototypes;\n        #else\n          int x_warn_strict_prototypes;\n        #define warn_strict_prototypes global_options.x_warn_strict_prototypes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_strict_selector_match;\n        #else\n          int x_warn_strict_selector_match;\n        #define warn_strict_selector_match global_options.x_warn_strict_selector_match\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_stringop_overflow;\n        #else\n          int x_warn_stringop_overflow;\n        #define warn_stringop_overflow global_options.x_warn_stringop_overflow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_stringop_truncation;\n        #else\n          int x_warn_stringop_truncation;\n        #define warn_stringop_truncation global_options.x_warn_stringop_truncation\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_subobject_linkage;\n        #else\n          int x_warn_subobject_linkage;\n        #define warn_subobject_linkage global_options.x_warn_subobject_linkage\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_suggest_attribute_cold;\n        #else\n          int x_warn_suggest_attribute_cold;\n        #define warn_suggest_attribute_cold global_options.x_warn_suggest_attribute_cold\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_suggest_attribute_const;\n        #else\n          int x_warn_suggest_attribute_const;\n        #define warn_suggest_attribute_const global_options.x_warn_suggest_attribute_const\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_suggest_attribute_format;\n        #else\n          int x_warn_suggest_attribute_format;\n        #define warn_suggest_attribute_format global_options.x_warn_suggest_attribute_format\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_suggest_attribute_malloc;\n        #else\n          int x_warn_suggest_attribute_malloc;\n        #define warn_suggest_attribute_malloc global_options.x_warn_suggest_attribute_malloc\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_suggest_attribute_noreturn;\n        #else\n          int x_warn_suggest_attribute_noreturn;\n        #define warn_suggest_attribute_noreturn global_options.x_warn_suggest_attribute_noreturn\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_suggest_attribute_pure;\n        #else\n          int x_warn_suggest_attribute_pure;\n        #define warn_suggest_attribute_pure global_options.x_warn_suggest_attribute_pure\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_suggest_final_methods;\n        #else\n          int x_warn_suggest_final_methods;\n        #define warn_suggest_final_methods global_options.x_warn_suggest_final_methods\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_suggest_final_types;\n        #else\n          int x_warn_suggest_final_types;\n        #define warn_suggest_final_types global_options.x_warn_suggest_final_types\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_override;\n        #else\n          int x_warn_override;\n        #define warn_override global_options.x_warn_override\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_surprising;\n        #else\n          int x_warn_surprising;\n        #define warn_surprising global_options.x_warn_surprising\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_switch;\n        #else\n          int x_warn_switch;\n        #define warn_switch global_options.x_warn_switch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_switch_bool;\n        #else\n          int x_warn_switch_bool;\n        #define warn_switch_bool global_options.x_warn_switch_bool\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_switch_default;\n        #else\n          int x_warn_switch_default;\n        #define warn_switch_default global_options.x_warn_switch_default\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_switch_enum;\n        #else\n          int x_warn_switch_enum;\n        #define warn_switch_enum global_options.x_warn_switch_enum\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_switch_unreachable;\n        #else\n          int x_warn_switch_unreachable;\n        #define warn_switch_unreachable global_options.x_warn_switch_unreachable\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_sync_nand;\n        #else\n          int x_warn_sync_nand;\n        #define warn_sync_nand global_options.x_warn_sync_nand\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_synth;\n        #else\n          int x_warn_synth;\n        #define warn_synth global_options.x_warn_synth\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_system_headers;\n        #else\n          int x_warn_system_headers;\n        #define warn_system_headers global_options.x_warn_system_headers\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_tabs;\n        #else\n          int x_warn_tabs;\n        #define warn_tabs global_options.x_warn_tabs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_target_lifetime;\n        #else\n          int x_warn_target_lifetime;\n        #define warn_target_lifetime global_options.x_warn_target_lifetime\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_tautological_compare;\n        #else\n          int x_warn_tautological_compare;\n        #define warn_tautological_compare global_options.x_warn_tautological_compare\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_templates;\n        #else\n          int x_warn_templates;\n        #define warn_templates global_options.x_warn_templates\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_terminate;\n        #else\n          int x_warn_terminate;\n        #define warn_terminate global_options.x_warn_terminate\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_traditional;\n        #else\n          int x_warn_traditional;\n        #define warn_traditional global_options.x_warn_traditional\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_traditional_conversion;\n        #else\n          int x_warn_traditional_conversion;\n        #define warn_traditional_conversion global_options.x_warn_traditional_conversion\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_trampolines;\n        #else\n          int x_warn_trampolines;\n        #define warn_trampolines global_options.x_warn_trampolines\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_trigraphs;\n        #else\n          int x_cpp_warn_trigraphs;\n        #define cpp_warn_trigraphs global_options.x_cpp_warn_trigraphs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_type_limits;\n        #else\n          int x_warn_type_limits;\n        #define warn_type_limits global_options.x_warn_type_limits\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_undeclared_selector;\n        #else\n          int x_warn_undeclared_selector;\n        #define warn_undeclared_selector global_options.x_warn_undeclared_selector\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_undef;\n        #else\n          int x_cpp_warn_undef;\n        #define cpp_warn_undef global_options.x_cpp_warn_undef\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_undefined_do_loop;\n        #else\n          int x_warn_undefined_do_loop;\n        #define warn_undefined_do_loop global_options.x_warn_undefined_do_loop\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_underflow;\n        #else\n          int x_warn_underflow;\n        #define warn_underflow global_options.x_warn_underflow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_uninitialized;\n        #else\n          int x_warn_uninitialized;\n        #define warn_uninitialized global_options.x_warn_uninitialized\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unknown_pragmas;\n        #else\n          int x_warn_unknown_pragmas;\n        #define warn_unknown_pragmas global_options.x_warn_unknown_pragmas\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unsafe_loop_optimizations;\n        #else\n          int x_warn_unsafe_loop_optimizations;\n        #define warn_unsafe_loop_optimizations global_options.x_warn_unsafe_loop_optimizations\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unsuffixed_float_constants;\n        #else\n          int x_warn_unsuffixed_float_constants;\n        #define warn_unsuffixed_float_constants global_options.x_warn_unsuffixed_float_constants\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused;\n        #else\n          int x_warn_unused;\n        #define warn_unused global_options.x_warn_unused\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_but_set_parameter;\n        #else\n          int x_warn_unused_but_set_parameter;\n        #define warn_unused_but_set_parameter global_options.x_warn_unused_but_set_parameter\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_but_set_variable;\n        #else\n          int x_warn_unused_but_set_variable;\n        #define warn_unused_but_set_variable global_options.x_warn_unused_but_set_variable\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_const_variable;\n        #else\n          int x_warn_unused_const_variable;\n        #define warn_unused_const_variable global_options.x_warn_unused_const_variable\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_dummy_argument;\n        #else\n          int x_warn_unused_dummy_argument;\n        #define warn_unused_dummy_argument global_options.x_warn_unused_dummy_argument\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_function;\n        #else\n          int x_warn_unused_function;\n        #define warn_unused_function global_options.x_warn_unused_function\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_label;\n        #else\n          int x_warn_unused_label;\n        #define warn_unused_label global_options.x_warn_unused_label\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_local_typedefs;\n        #else\n          int x_warn_unused_local_typedefs;\n        #define warn_unused_local_typedefs global_options.x_warn_unused_local_typedefs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_unused_macros;\n        #else\n          int x_cpp_warn_unused_macros;\n        #define cpp_warn_unused_macros global_options.x_cpp_warn_unused_macros\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_parameter;\n        #else\n          int x_warn_unused_parameter;\n        #define warn_unused_parameter global_options.x_warn_unused_parameter\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_result;\n        #else\n          int x_warn_unused_result;\n        #define warn_unused_result global_options.x_warn_unused_result\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_value;\n        #else\n          int x_warn_unused_value;\n        #define warn_unused_value global_options.x_warn_unused_value\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_unused_variable;\n        #else\n          int x_warn_unused_variable;\n        #define warn_unused_variable global_options.x_warn_unused_variable\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_use_without_only;\n        #else\n          int x_warn_use_without_only;\n        #define warn_use_without_only global_options.x_warn_use_without_only\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_useless_cast;\n        #else\n          int x_warn_useless_cast;\n        #define warn_useless_cast global_options.x_warn_useless_cast\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_varargs;\n        #else\n          int x_warn_varargs;\n        #define warn_varargs global_options.x_warn_varargs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int cpp_warn_variadic_macros;\n        #else\n          int x_cpp_warn_variadic_macros;\n        #define cpp_warn_variadic_macros global_options.x_cpp_warn_variadic_macros\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_vector_operation_performance;\n        #else\n          int x_warn_vector_operation_performance;\n        #define warn_vector_operation_performance global_options.x_warn_vector_operation_performance\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_virtual_inheritance;\n        #else\n          int x_warn_virtual_inheritance;\n        #define warn_virtual_inheritance global_options.x_warn_virtual_inheritance\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_virtual_move_assign;\n        #else\n          int x_warn_virtual_move_assign;\n        #define warn_virtual_move_assign global_options.x_warn_virtual_move_assign\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_vla;\n        #else\n          int x_warn_vla;\n        #define warn_vla global_options.x_warn_vla\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_vla_limit;\n        #else\n          int x_warn_vla_limit;\n        #define warn_vla_limit global_options.x_warn_vla_limit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_volatile_register_var;\n        #else\n          int x_warn_volatile_register_var;\n        #define warn_volatile_register_var global_options.x_warn_volatile_register_var\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_write_strings;\n        #else\n          int x_warn_write_strings;\n        #define warn_write_strings global_options.x_warn_write_strings\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_zero_as_null_pointer_constant;\n        #else\n          int x_warn_zero_as_null_pointer_constant;\n        #define warn_zero_as_null_pointer_constant global_options.x_warn_zero_as_null_pointer_constant\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int warn_zerotrip;\n        #else\n          int x_warn_zerotrip;\n        #define warn_zerotrip global_options.x_warn_zerotrip\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *aux_info_file_name;\n        #else\n          const char *x_aux_info_file_name;\n        #define aux_info_file_name global_options.x_aux_info_file_name\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *aux_base_name;\n        #else\n          const char *x_aux_base_name;\n        #define aux_base_name global_options.x_aux_base_name\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *dump_base_name;\n        #else\n          const char *x_dump_base_name;\n        #define dump_base_name global_options.x_dump_base_name\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *dump_dir_name;\n        #else\n          const char *x_dump_dir_name;\n        #define dump_dir_name global_options.x_dump_dir_name\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_pic;\n        #else\n          int x_flag_pic;\n        #define flag_pic global_options.x_flag_pic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_pie;\n        #else\n          int x_flag_pie;\n        #define flag_pie global_options.x_flag_pie\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_abi_compat_version;\n        #else\n          int x_flag_abi_compat_version;\n        #define flag_abi_compat_version global_options.x_flag_abi_compat_version\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_abi_version;\n        #else\n          int x_flag_abi_version;\n        #define flag_abi_version global_options.x_flag_abi_version\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_access_control;\n        #else\n          int x_flag_access_control;\n        #define flag_access_control global_options.x_flag_access_control\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ada_specs_parent;\n        #else\n          const char *x_ada_specs_parent;\n        #define ada_specs_parent global_options.x_ada_specs_parent\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_aggressive_function_elimination;\n        #else\n          int x_flag_aggressive_function_elimination;\n        #define flag_aggressive_function_elimination global_options.x_flag_aggressive_function_elimination\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_aggressive_loop_optimizations;\n        #else\n          int x_flag_aggressive_loop_optimizations;\n        #define flag_aggressive_loop_optimizations global_options.x_flag_aggressive_loop_optimizations\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_align_commons;\n        #else\n          int x_flag_align_commons;\n        #define flag_align_commons global_options.x_flag_align_commons\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int align_functions;\n        #else\n          int x_align_functions;\n        #define align_functions global_options.x_align_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int align_jumps;\n        #else\n          int x_align_jumps;\n        #define align_jumps global_options.x_align_jumps\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int align_labels;\n        #else\n          int x_align_labels;\n        #define align_labels global_options.x_align_labels\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int align_loops;\n        #else\n          int x_align_loops;\n        #define align_loops global_options.x_align_loops\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int aligned_new_threshold;\n        #else\n          int x_aligned_new_threshold;\n        #define aligned_new_threshold global_options.x_aligned_new_threshold\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_all_intrinsics;\n        #else\n          int x_flag_all_intrinsics;\n        #define flag_all_intrinsics global_options.x_flag_all_intrinsics\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_allow_leading_underscore;\n        #else\n          int x_flag_allow_leading_underscore;\n        #define flag_allow_leading_underscore global_options.x_flag_allow_leading_underscore\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_allow_parameterless_variadic_functions;\n        #else\n          int x_flag_allow_parameterless_variadic_functions;\n        #define flag_allow_parameterless_variadic_functions global_options.x_flag_allow_parameterless_variadic_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern void *common_deferred_options;\n        #else\n          void *x_common_deferred_options;\n        #define common_deferred_options global_options.x_common_deferred_options\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_no_asm;\n        #else\n          int x_flag_no_asm;\n        #define flag_no_asm global_options.x_flag_no_asm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_associative_math;\n        #else\n          int x_flag_associative_math;\n        #define flag_associative_math global_options.x_flag_associative_math\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_asynchronous_unwind_tables;\n        #else\n          int x_flag_asynchronous_unwind_tables;\n        #define flag_asynchronous_unwind_tables global_options.x_flag_asynchronous_unwind_tables\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_auto_inc_dec;\n        #else\n          int x_flag_auto_inc_dec;\n        #define flag_auto_inc_dec global_options.x_flag_auto_inc_dec\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_auto_profile;\n        #else\n          int x_flag_auto_profile;\n        #define flag_auto_profile global_options.x_flag_auto_profile\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *auto_profile_file;\n        #else\n          const char *x_auto_profile_file;\n        #define auto_profile_file global_options.x_auto_profile_file\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_automatic;\n        #else\n          int x_flag_automatic;\n        #define flag_automatic global_options.x_flag_automatic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_backslash;\n        #else\n          int x_flag_backslash;\n        #define flag_backslash global_options.x_flag_backslash\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_backtrace;\n        #else\n          int x_flag_backtrace;\n        #define flag_backtrace global_options.x_flag_backtrace\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_blas_matmul_limit;\n        #else\n          int x_flag_blas_matmul_limit;\n        #define flag_blas_matmul_limit global_options.x_flag_blas_matmul_limit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_bounds_check;\n        #else\n          int x_flag_bounds_check;\n        #define flag_bounds_check global_options.x_flag_bounds_check\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_branch_on_count_reg;\n        #else\n          int x_flag_branch_on_count_reg;\n        #define flag_branch_on_count_reg global_options.x_flag_branch_on_count_reg\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_branch_probabilities;\n        #else\n          int x_flag_branch_probabilities;\n        #define flag_branch_probabilities global_options.x_flag_branch_probabilities\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_branch_target_load_optimize;\n        #else\n          int x_flag_branch_target_load_optimize;\n        #define flag_branch_target_load_optimize global_options.x_flag_branch_target_load_optimize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_branch_target_load_optimize2;\n        #else\n          int x_flag_branch_target_load_optimize2;\n        #define flag_branch_target_load_optimize2 global_options.x_flag_branch_target_load_optimize2\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_btr_bb_exclusive;\n        #else\n          int x_flag_btr_bb_exclusive;\n        #define flag_btr_bb_exclusive global_options.x_flag_btr_bb_exclusive\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_building_libgcc;\n        #else\n          int x_flag_building_libgcc;\n        #define flag_building_libgcc global_options.x_flag_building_libgcc\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_no_builtin;\n        #else\n          int x_flag_no_builtin;\n        #define flag_no_builtin global_options.x_flag_no_builtin\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_c_prototypes;\n        #else\n          int x_flag_c_prototypes;\n        #define flag_c_prototypes global_options.x_flag_c_prototypes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_caller_saves;\n        #else\n          int x_flag_caller_saves;\n        #define flag_caller_saves global_options.x_flag_caller_saves\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum cf_protection_level flag_cf_protection;\n        #else\n          enum cf_protection_level x_flag_cf_protection;\n        #define flag_cf_protection global_options.x_flag_cf_protection\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_check_data_deps;\n        #else\n          int x_flag_check_data_deps;\n        #define flag_check_data_deps global_options.x_flag_check_data_deps\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_check_new;\n        #else\n          int x_flag_check_new;\n        #define flag_check_new global_options.x_flag_check_new\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_check_pointer_bounds;\n        #else\n          int x_flag_check_pointer_bounds;\n        #define flag_check_pointer_bounds global_options.x_flag_check_pointer_bounds\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_checking;\n        #else\n          int x_flag_checking;\n        #define flag_checking global_options.x_flag_checking\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_incomplete_type;\n        #else\n          int x_flag_chkp_incomplete_type;\n        #define flag_chkp_incomplete_type global_options.x_flag_chkp_incomplete_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_check_read;\n        #else\n          int x_flag_chkp_check_read;\n        #define flag_chkp_check_read global_options.x_flag_chkp_check_read\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_check_write;\n        #else\n          int x_flag_chkp_check_write;\n        #define flag_chkp_check_write global_options.x_flag_chkp_check_write\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_first_field_has_own_bounds;\n        #else\n          int x_flag_chkp_first_field_has_own_bounds;\n        #define flag_chkp_first_field_has_own_bounds global_options.x_flag_chkp_first_field_has_own_bounds\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_flexible_struct_trailing_arrays;\n        #else\n          int x_flag_chkp_flexible_struct_trailing_arrays;\n        #define flag_chkp_flexible_struct_trailing_arrays global_options.x_flag_chkp_flexible_struct_trailing_arrays\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_instrument_calls;\n        #else\n          int x_flag_chkp_instrument_calls;\n        #define flag_chkp_instrument_calls global_options.x_flag_chkp_instrument_calls\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_instrument_marked_only;\n        #else\n          int x_flag_chkp_instrument_marked_only;\n        #define flag_chkp_instrument_marked_only global_options.x_flag_chkp_instrument_marked_only\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_narrow_bounds;\n        #else\n          int x_flag_chkp_narrow_bounds;\n        #define flag_chkp_narrow_bounds global_options.x_flag_chkp_narrow_bounds\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_narrow_to_innermost_arrray;\n        #else\n          int x_flag_chkp_narrow_to_innermost_arrray;\n        #define flag_chkp_narrow_to_innermost_arrray global_options.x_flag_chkp_narrow_to_innermost_arrray\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_optimize;\n        #else\n          int x_flag_chkp_optimize;\n        #define flag_chkp_optimize global_options.x_flag_chkp_optimize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_store_bounds;\n        #else\n          int x_flag_chkp_store_bounds;\n        #define flag_chkp_store_bounds global_options.x_flag_chkp_store_bounds\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_zero_dynamic_size_as_infinite;\n        #else\n          int x_flag_chkp_zero_dynamic_size_as_infinite;\n        #define flag_chkp_zero_dynamic_size_as_infinite global_options.x_flag_chkp_zero_dynamic_size_as_infinite\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_use_fast_string_functions;\n        #else\n          int x_flag_chkp_use_fast_string_functions;\n        #define flag_chkp_use_fast_string_functions global_options.x_flag_chkp_use_fast_string_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_use_nochk_string_functions;\n        #else\n          int x_flag_chkp_use_nochk_string_functions;\n        #define flag_chkp_use_nochk_string_functions global_options.x_flag_chkp_use_nochk_string_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_use_static_bounds;\n        #else\n          int x_flag_chkp_use_static_bounds;\n        #define flag_chkp_use_static_bounds global_options.x_flag_chkp_use_static_bounds\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_use_static_const_bounds;\n        #else\n          int x_flag_chkp_use_static_const_bounds;\n        #define flag_chkp_use_static_const_bounds global_options.x_flag_chkp_use_static_const_bounds\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_use_wrappers;\n        #else\n          int x_flag_chkp_use_wrappers;\n        #define flag_chkp_use_wrappers global_options.x_flag_chkp_use_wrappers\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_chkp_zero_input_bounds_for_main;\n        #else\n          int x_flag_chkp_zero_input_bounds_for_main;\n        #define flag_chkp_zero_input_bounds_for_main global_options.x_flag_chkp_zero_input_bounds_for_main\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_cilkplus;\n        #else\n          int x_flag_cilkplus;\n        #define flag_cilkplus global_options.x_flag_cilkplus\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum gfc_fcoarray flag_coarray;\n        #else\n          enum gfc_fcoarray x_flag_coarray;\n        #define flag_coarray global_options.x_flag_coarray\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_code_hoisting;\n        #else\n          int x_flag_code_hoisting;\n        #define flag_code_hoisting global_options.x_flag_code_hoisting\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_combine_stack_adjustments;\n        #else\n          int x_flag_combine_stack_adjustments;\n        #define flag_combine_stack_adjustments global_options.x_flag_combine_stack_adjustments\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_no_common;\n        #else\n          int x_flag_no_common;\n        #define flag_no_common global_options.x_flag_no_common\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_compare_debug;\n        #else\n          int x_flag_compare_debug;\n        #define flag_compare_debug global_options.x_flag_compare_debug\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *flag_compare_debug_opt;\n        #else\n          const char *x_flag_compare_debug_opt;\n        #define flag_compare_debug_opt global_options.x_flag_compare_debug_opt\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_compare_elim_after_reload;\n        #else\n          int x_flag_compare_elim_after_reload;\n        #define flag_compare_elim_after_reload global_options.x_flag_compare_elim_after_reload\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_concepts;\n        #else\n          int x_flag_concepts;\n        #define flag_concepts global_options.x_flag_concepts\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_conserve_space;\n        #else\n          int x_flag_conserve_space;\n        #define flag_conserve_space global_options.x_flag_conserve_space\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_conserve_stack;\n        #else\n          int x_flag_conserve_stack;\n        #define flag_conserve_stack global_options.x_flag_conserve_stack\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int max_constexpr_depth;\n        #else\n          int x_max_constexpr_depth;\n        #define max_constexpr_depth global_options.x_max_constexpr_depth\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int constexpr_loop_limit;\n        #else\n          int x_constexpr_loop_limit;\n        #define constexpr_loop_limit global_options.x_constexpr_loop_limit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum gfc_convert flag_convert;\n        #else\n          enum gfc_convert x_flag_convert;\n        #define flag_convert global_options.x_flag_convert\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_cprop_registers;\n        #else\n          int x_flag_cprop_registers;\n        #define flag_cprop_registers global_options.x_flag_cprop_registers\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_cray_pointer;\n        #else\n          int x_flag_cray_pointer;\n        #define flag_cray_pointer global_options.x_flag_cray_pointer\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_crossjumping;\n        #else\n          int x_flag_crossjumping;\n        #define flag_crossjumping global_options.x_flag_crossjumping\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_cse_follow_jumps;\n        #else\n          int x_flag_cse_follow_jumps;\n        #define flag_cse_follow_jumps global_options.x_flag_cse_follow_jumps\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_cx_fortran_rules;\n        #else\n          int x_flag_cx_fortran_rules;\n        #define flag_cx_fortran_rules global_options.x_flag_cx_fortran_rules\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_cx_limited_range;\n        #else\n          int x_flag_cx_limited_range;\n        #define flag_cx_limited_range global_options.x_flag_cx_limited_range\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_data_sections;\n        #else\n          int x_flag_data_sections;\n        #define flag_data_sections global_options.x_flag_data_sections\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dce;\n        #else\n          int x_flag_dce;\n        #define flag_dce global_options.x_flag_dce\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_debug_types_section;\n        #else\n          int x_flag_debug_types_section;\n        #define flag_debug_types_section global_options.x_flag_debug_types_section\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dec;\n        #else\n          int x_flag_dec;\n        #define flag_dec global_options.x_flag_dec\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dec_intrinsic_ints;\n        #else\n          int x_flag_dec_intrinsic_ints;\n        #define flag_dec_intrinsic_ints global_options.x_flag_dec_intrinsic_ints\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dec_math;\n        #else\n          int x_flag_dec_math;\n        #define flag_dec_math global_options.x_flag_dec_math\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dec_static;\n        #else\n          int x_flag_dec_static;\n        #define flag_dec_static global_options.x_flag_dec_static\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dec_structure;\n        #else\n          int x_flag_dec_structure;\n        #define flag_dec_structure global_options.x_flag_dec_structure\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_declone_ctor_dtor;\n        #else\n          int x_flag_declone_ctor_dtor;\n        #define flag_declone_ctor_dtor global_options.x_flag_declone_ctor_dtor\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_deduce_init_list;\n        #else\n          int x_flag_deduce_init_list;\n        #define flag_deduce_init_list global_options.x_flag_deduce_init_list\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_default_double;\n        #else\n          int x_flag_default_double;\n        #define flag_default_double global_options.x_flag_default_double\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_default_integer;\n        #else\n          int x_flag_default_integer;\n        #define flag_default_integer global_options.x_flag_default_integer\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_default_real_10;\n        #else\n          int x_flag_default_real_10;\n        #define flag_default_real_10 global_options.x_flag_default_real_10\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_default_real_16;\n        #else\n          int x_flag_default_real_16;\n        #define flag_default_real_16 global_options.x_flag_default_real_16\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_default_real_8;\n        #else\n          int x_flag_default_real_8;\n        #define flag_default_real_8 global_options.x_flag_default_real_8\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_defer_pop;\n        #else\n          int x_flag_defer_pop;\n        #define flag_defer_pop global_options.x_flag_defer_pop\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_delayed_branch;\n        #else\n          int x_flag_delayed_branch;\n        #define flag_delayed_branch global_options.x_flag_delayed_branch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_delete_dead_exceptions;\n        #else\n          int x_flag_delete_dead_exceptions;\n        #define flag_delete_dead_exceptions global_options.x_flag_delete_dead_exceptions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_delete_null_pointer_checks;\n        #else\n          int x_flag_delete_null_pointer_checks;\n        #define flag_delete_null_pointer_checks global_options.x_flag_delete_null_pointer_checks\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_devirtualize;\n        #else\n          int x_flag_devirtualize;\n        #define flag_devirtualize global_options.x_flag_devirtualize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ltrans_devirtualize;\n        #else\n          int x_flag_ltrans_devirtualize;\n        #define flag_ltrans_devirtualize global_options.x_flag_ltrans_devirtualize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_devirtualize_speculatively;\n        #else\n          int x_flag_devirtualize_speculatively;\n        #define flag_devirtualize_speculatively global_options.x_flag_devirtualize_speculatively\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_diagnostics_show_color;\n        #else\n          int x_flag_diagnostics_show_color;\n        #define flag_diagnostics_show_color global_options.x_flag_diagnostics_show_color\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_diagnostics_generate_patch;\n        #else\n          int x_flag_diagnostics_generate_patch;\n        #define flag_diagnostics_generate_patch global_options.x_flag_diagnostics_generate_patch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_diagnostics_parseable_fixits;\n        #else\n          int x_flag_diagnostics_parseable_fixits;\n        #define flag_diagnostics_parseable_fixits global_options.x_flag_diagnostics_parseable_fixits\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_diagnostics_show_caret;\n        #else\n          int x_flag_diagnostics_show_caret;\n        #define flag_diagnostics_show_caret global_options.x_flag_diagnostics_show_caret\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_diagnostics_show_option;\n        #else\n          int x_flag_diagnostics_show_option;\n        #define flag_diagnostics_show_option global_options.x_flag_diagnostics_show_option\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_diagnostics_show_template_tree;\n        #else\n          int x_flag_diagnostics_show_template_tree;\n        #define flag_diagnostics_show_template_tree global_options.x_flag_diagnostics_show_template_tree\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dollar_ok;\n        #else\n          int x_flag_dollar_ok;\n        #define flag_dollar_ok global_options.x_flag_dollar_ok\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dse;\n        #else\n          int x_flag_dse;\n        #define flag_dse global_options.x_flag_dse\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_ada_spec;\n        #else\n          int x_flag_dump_ada_spec;\n        #define flag_dump_ada_spec global_options.x_flag_dump_ada_spec\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_ada_spec_slim;\n        #else\n          int x_flag_dump_ada_spec_slim;\n        #define flag_dump_ada_spec_slim global_options.x_flag_dump_ada_spec_slim\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *flag_dump_final_insns;\n        #else\n          const char *x_flag_dump_final_insns;\n        #define flag_dump_final_insns global_options.x_flag_dump_final_insns\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_fortran_optimized;\n        #else\n          int x_flag_dump_fortran_optimized;\n        #define flag_dump_fortran_optimized global_options.x_flag_dump_fortran_optimized\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_fortran_original;\n        #else\n          int x_flag_dump_fortran_original;\n        #define flag_dump_fortran_original global_options.x_flag_dump_fortran_original\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *flag_dump_go_spec;\n        #else\n          const char *x_flag_dump_go_spec;\n        #define flag_dump_go_spec global_options.x_flag_dump_go_spec\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_locations;\n        #else\n          int x_flag_dump_locations;\n        #define flag_dump_locations global_options.x_flag_dump_locations\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_noaddr;\n        #else\n          int x_flag_dump_noaddr;\n        #define flag_dump_noaddr global_options.x_flag_dump_noaddr\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_passes;\n        #else\n          int x_flag_dump_passes;\n        #define flag_dump_passes global_options.x_flag_dump_passes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_unnumbered;\n        #else\n          int x_flag_dump_unnumbered;\n        #define flag_dump_unnumbered global_options.x_flag_dump_unnumbered\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dump_unnumbered_links;\n        #else\n          int x_flag_dump_unnumbered_links;\n        #define flag_dump_unnumbered_links global_options.x_flag_dump_unnumbered_links\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dwarf2_cfi_asm;\n        #else\n          int x_flag_dwarf2_cfi_asm;\n        #define flag_dwarf2_cfi_asm global_options.x_flag_dwarf2_cfi_asm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_early_inlining;\n        #else\n          int x_flag_early_inlining;\n        #define flag_early_inlining global_options.x_flag_early_inlining\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_elide_constructors;\n        #else\n          int x_flag_elide_constructors;\n        #define flag_elide_constructors global_options.x_flag_elide_constructors\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_elide_type;\n        #else\n          int x_flag_elide_type;\n        #define flag_elide_type global_options.x_flag_elide_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_debug_only_used_symbols;\n        #else\n          int x_flag_debug_only_used_symbols;\n        #define flag_debug_only_used_symbols global_options.x_flag_debug_only_used_symbols\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_eliminate_unused_debug_types;\n        #else\n          int x_flag_eliminate_unused_debug_types;\n        #define flag_eliminate_unused_debug_types global_options.x_flag_eliminate_unused_debug_types\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_emit_class_debug_always;\n        #else\n          int x_flag_emit_class_debug_always;\n        #define flag_emit_class_debug_always global_options.x_flag_emit_class_debug_always\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_enforce_eh_specs;\n        #else\n          int x_flag_enforce_eh_specs;\n        #define flag_enforce_eh_specs global_options.x_flag_enforce_eh_specs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_exceptions;\n        #else\n          int x_flag_exceptions;\n        #define flag_exceptions global_options.x_flag_exceptions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum excess_precision flag_excess_precision_cmdline;\n        #else\n          enum excess_precision x_flag_excess_precision_cmdline;\n        #define flag_excess_precision_cmdline global_options.x_flag_excess_precision_cmdline\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_expensive_optimizations;\n        #else\n          int x_flag_expensive_optimizations;\n        #define flag_expensive_optimizations global_options.x_flag_expensive_optimizations\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ext_numeric_literals;\n        #else\n          int x_flag_ext_numeric_literals;\n        #define flag_ext_numeric_literals global_options.x_flag_ext_numeric_literals\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_extern_tls_init;\n        #else\n          int x_flag_extern_tls_init;\n        #define flag_extern_tls_init global_options.x_flag_extern_tls_init\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_external_blas;\n        #else\n          int x_flag_external_blas;\n        #define flag_external_blas global_options.x_flag_external_blas\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_f2c;\n        #else\n          int x_flag_f2c;\n        #define flag_f2c global_options.x_flag_f2c\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_fat_lto_objects;\n        #else\n          int x_flag_fat_lto_objects;\n        #define flag_fat_lto_objects global_options.x_flag_fat_lto_objects\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_finite_math_only;\n        #else\n          int x_flag_finite_math_only;\n        #define flag_finite_math_only global_options.x_flag_finite_math_only\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_fixed_line_length;\n        #else\n          int x_flag_fixed_line_length;\n        #define flag_fixed_line_length global_options.x_flag_fixed_line_length\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_float_store;\n        #else\n          int x_flag_float_store;\n        #define flag_float_store global_options.x_flag_float_store\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_new_for_scope;\n        #else\n          int x_flag_new_for_scope;\n        #define flag_new_for_scope global_options.x_flag_new_for_scope\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_forward_propagate;\n        #else\n          int x_flag_forward_propagate;\n        #define flag_forward_propagate global_options.x_flag_forward_propagate\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum fp_contract_mode flag_fp_contract_mode;\n        #else\n          enum fp_contract_mode x_flag_fp_contract_mode;\n        #define flag_fp_contract_mode global_options.x_flag_fp_contract_mode\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_fp_int_builtin_inexact;\n        #else\n          int x_flag_fp_int_builtin_inexact;\n        #define flag_fp_int_builtin_inexact global_options.x_flag_fp_int_builtin_inexact\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_free_line_length;\n        #else\n          int x_flag_free_line_length;\n        #define flag_free_line_length global_options.x_flag_free_line_length\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_friend_injection;\n        #else\n          int x_flag_friend_injection;\n        #define flag_friend_injection global_options.x_flag_friend_injection\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_frontend_loop_interchange;\n        #else\n          int x_flag_frontend_loop_interchange;\n        #define flag_frontend_loop_interchange global_options.x_flag_frontend_loop_interchange\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_frontend_optimize;\n        #else\n          int x_flag_frontend_optimize;\n        #define flag_frontend_optimize global_options.x_flag_frontend_optimize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_no_function_cse;\n        #else\n          int x_flag_no_function_cse;\n        #define flag_no_function_cse global_options.x_flag_no_function_cse\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_function_sections;\n        #else\n          int x_flag_function_sections;\n        #define flag_function_sections global_options.x_flag_function_sections\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gcse;\n        #else\n          int x_flag_gcse;\n        #define flag_gcse global_options.x_flag_gcse\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gcse_after_reload;\n        #else\n          int x_flag_gcse_after_reload;\n        #define flag_gcse_after_reload global_options.x_flag_gcse_after_reload\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gcse_las;\n        #else\n          int x_flag_gcse_las;\n        #define flag_gcse_las global_options.x_flag_gcse_las\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gcse_lm;\n        #else\n          int x_flag_gcse_lm;\n        #define flag_gcse_lm global_options.x_flag_gcse_lm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gcse_sm;\n        #else\n          int x_flag_gcse_sm;\n        #define flag_gcse_sm global_options.x_flag_gcse_sm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gimple;\n        #else\n          int x_flag_gimple;\n        #define flag_gimple global_options.x_flag_gimple\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_no_gnu_keywords;\n        #else\n          int x_flag_no_gnu_keywords;\n        #define flag_no_gnu_keywords global_options.x_flag_no_gnu_keywords\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_next_runtime;\n        #else\n          int x_flag_next_runtime;\n        #define flag_next_runtime global_options.x_flag_next_runtime\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tm;\n        #else\n          int x_flag_tm;\n        #define flag_tm global_options.x_flag_tm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gnu_unique;\n        #else\n          int x_flag_gnu_unique;\n        #define flag_gnu_unique global_options.x_flag_gnu_unique\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gnu89_inline;\n        #else\n          int x_flag_gnu89_inline;\n        #define flag_gnu89_inline global_options.x_flag_gnu89_inline\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int go_check_divide_overflow;\n        #else\n          int x_go_check_divide_overflow;\n        #define go_check_divide_overflow global_options.x_go_check_divide_overflow\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int go_check_divide_zero;\n        #else\n          int x_go_check_divide_zero;\n        #define go_check_divide_zero global_options.x_go_check_divide_zero\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int go_compiling_runtime;\n        #else\n          int x_go_compiling_runtime;\n        #define go_compiling_runtime global_options.x_go_compiling_runtime\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int go_debug_escape_level;\n        #else\n          int x_go_debug_escape_level;\n        #define go_debug_escape_level global_options.x_go_debug_escape_level\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_graphite;\n        #else\n          int x_flag_graphite;\n        #define flag_graphite global_options.x_flag_graphite\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_graphite_identity;\n        #else\n          int x_flag_graphite_identity;\n        #define flag_graphite_identity global_options.x_flag_graphite_identity\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_guess_branch_prob;\n        #else\n          int x_flag_guess_branch_prob;\n        #define flag_guess_branch_prob global_options.x_flag_guess_branch_prob\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_hoist_adjacent_loads;\n        #else\n          int x_flag_hoist_adjacent_loads;\n        #define flag_hoist_adjacent_loads global_options.x_flag_hoist_adjacent_loads\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_no_ident;\n        #else\n          int x_flag_no_ident;\n        #define flag_no_ident global_options.x_flag_no_ident\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_if_conversion;\n        #else\n          int x_flag_if_conversion;\n        #define flag_if_conversion global_options.x_flag_if_conversion\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_if_conversion2;\n        #else\n          int x_flag_if_conversion2;\n        #define flag_if_conversion2 global_options.x_flag_if_conversion2\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_implement_inlines;\n        #else\n          int x_flag_implement_inlines;\n        #define flag_implement_inlines global_options.x_flag_implement_inlines\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_implicit_inline_templates;\n        #else\n          int x_flag_implicit_inline_templates;\n        #define flag_implicit_inline_templates global_options.x_flag_implicit_inline_templates\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_implicit_none;\n        #else\n          int x_flag_implicit_none;\n        #define flag_implicit_none global_options.x_flag_implicit_none\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_implicit_templates;\n        #else\n          int x_flag_implicit_templates;\n        #define flag_implicit_templates global_options.x_flag_implicit_templates\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_indirect_inlining;\n        #else\n          int x_flag_indirect_inlining;\n        #define flag_indirect_inlining global_options.x_flag_indirect_inlining\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_inhibit_size_directive;\n        #else\n          int x_flag_inhibit_size_directive;\n        #define flag_inhibit_size_directive global_options.x_flag_inhibit_size_directive\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_init_derived;\n        #else\n          int x_flag_init_derived;\n        #define flag_init_derived global_options.x_flag_init_derived\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum gfc_init_local_real flag_init_real;\n        #else\n          enum gfc_init_local_real x_flag_init_real;\n        #define flag_init_real global_options.x_flag_init_real\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_no_inline;\n        #else\n          int x_flag_no_inline;\n        #define flag_no_inline global_options.x_flag_no_inline\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_inline_atomics;\n        #else\n          int x_flag_inline_atomics;\n        #define flag_inline_atomics global_options.x_flag_inline_atomics\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_inline_functions;\n        #else\n          int x_flag_inline_functions;\n        #define flag_inline_functions global_options.x_flag_inline_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_inline_functions_called_once;\n        #else\n          int x_flag_inline_functions_called_once;\n        #define flag_inline_functions_called_once global_options.x_flag_inline_functions_called_once\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_inline_matmul_limit;\n        #else\n          int x_flag_inline_matmul_limit;\n        #define flag_inline_matmul_limit global_options.x_flag_inline_matmul_limit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_inline_small_functions;\n        #else\n          int x_flag_inline_small_functions;\n        #define flag_inline_small_functions global_options.x_flag_inline_small_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_instrument_function_entry_exit;\n        #else\n          int x_flag_instrument_function_entry_exit;\n        #define flag_instrument_function_entry_exit global_options.x_flag_instrument_function_entry_exit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_integer4_kind;\n        #else\n          int x_flag_integer4_kind;\n        #define flag_integer4_kind global_options.x_flag_integer4_kind\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_bit_cp;\n        #else\n          int x_flag_ipa_bit_cp;\n        #define flag_ipa_bit_cp global_options.x_flag_ipa_bit_cp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_cp;\n        #else\n          int x_flag_ipa_cp;\n        #define flag_ipa_cp global_options.x_flag_ipa_cp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_cp_clone;\n        #else\n          int x_flag_ipa_cp_clone;\n        #define flag_ipa_cp_clone global_options.x_flag_ipa_cp_clone\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_icf;\n        #else\n          int x_flag_ipa_icf;\n        #define flag_ipa_icf global_options.x_flag_ipa_icf\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_icf_functions;\n        #else\n          int x_flag_ipa_icf_functions;\n        #define flag_ipa_icf_functions global_options.x_flag_ipa_icf_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_icf_variables;\n        #else\n          int x_flag_ipa_icf_variables;\n        #define flag_ipa_icf_variables global_options.x_flag_ipa_icf_variables\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_profile;\n        #else\n          int x_flag_ipa_profile;\n        #define flag_ipa_profile global_options.x_flag_ipa_profile\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_pta;\n        #else\n          int x_flag_ipa_pta;\n        #define flag_ipa_pta global_options.x_flag_ipa_pta\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_pure_const;\n        #else\n          int x_flag_ipa_pure_const;\n        #define flag_ipa_pure_const global_options.x_flag_ipa_pure_const\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_ra;\n        #else\n          int x_flag_ipa_ra;\n        #define flag_ipa_ra global_options.x_flag_ipa_ra\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_reference;\n        #else\n          int x_flag_ipa_reference;\n        #define flag_ipa_reference global_options.x_flag_ipa_reference\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_sra;\n        #else\n          int x_flag_ipa_sra;\n        #define flag_ipa_sra global_options.x_flag_ipa_sra\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ipa_vrp;\n        #else\n          int x_flag_ipa_vrp;\n        #define flag_ipa_vrp global_options.x_flag_ipa_vrp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum ira_algorithm flag_ira_algorithm;\n        #else\n          enum ira_algorithm x_flag_ira_algorithm;\n        #define flag_ira_algorithm global_options.x_flag_ira_algorithm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ira_hoist_pressure;\n        #else\n          int x_flag_ira_hoist_pressure;\n        #define flag_ira_hoist_pressure global_options.x_flag_ira_hoist_pressure\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ira_loop_pressure;\n        #else\n          int x_flag_ira_loop_pressure;\n        #define flag_ira_loop_pressure global_options.x_flag_ira_loop_pressure\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum ira_region flag_ira_region;\n        #else\n          enum ira_region x_flag_ira_region;\n        #define flag_ira_region global_options.x_flag_ira_region\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ira_share_save_slots;\n        #else\n          int x_flag_ira_share_save_slots;\n        #define flag_ira_share_save_slots global_options.x_flag_ira_share_save_slots\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ira_share_spill_slots;\n        #else\n          int x_flag_ira_share_spill_slots;\n        #define flag_ira_share_spill_slots global_options.x_flag_ira_share_spill_slots\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ira_verbose;\n        #else\n          int x_flag_ira_verbose;\n        #define flag_ira_verbose global_options.x_flag_ira_verbose\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_isolate_erroneous_paths_attribute;\n        #else\n          int x_flag_isolate_erroneous_paths_attribute;\n        #define flag_isolate_erroneous_paths_attribute global_options.x_flag_isolate_erroneous_paths_attribute\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_isolate_erroneous_paths_dereference;\n        #else\n          int x_flag_isolate_erroneous_paths_dereference;\n        #define flag_isolate_erroneous_paths_dereference global_options.x_flag_isolate_erroneous_paths_dereference\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum ivar_visibility default_ivar_visibility;\n        #else\n          enum ivar_visibility x_default_ivar_visibility;\n        #define default_ivar_visibility global_options.x_default_ivar_visibility\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ivopts;\n        #else\n          int x_flag_ivopts;\n        #define flag_ivopts global_options.x_flag_ivopts\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_jump_tables;\n        #else\n          int x_flag_jump_tables;\n        #define flag_jump_tables global_options.x_flag_jump_tables\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_keep_gc_roots_live;\n        #else\n          int x_flag_keep_gc_roots_live;\n        #define flag_keep_gc_roots_live global_options.x_flag_keep_gc_roots_live\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_keep_inline_dllexport;\n        #else\n          int x_flag_keep_inline_dllexport;\n        #define flag_keep_inline_dllexport global_options.x_flag_keep_inline_dllexport\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_keep_inline_functions;\n        #else\n          int x_flag_keep_inline_functions;\n        #define flag_keep_inline_functions global_options.x_flag_keep_inline_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_keep_static_consts;\n        #else\n          int x_flag_keep_static_consts;\n        #define flag_keep_static_consts global_options.x_flag_keep_static_consts\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_keep_static_functions;\n        #else\n          int x_flag_keep_static_functions;\n        #define flag_keep_static_functions global_options.x_flag_keep_static_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_lax_vector_conversions;\n        #else\n          int x_flag_lax_vector_conversions;\n        #define flag_lax_vector_conversions global_options.x_flag_lax_vector_conversions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_leading_underscore;\n        #else\n          int x_flag_leading_underscore;\n        #define flag_leading_underscore global_options.x_flag_leading_underscore\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_lifetime_dse;\n        #else\n          int x_flag_lifetime_dse;\n        #define flag_lifetime_dse global_options.x_flag_lifetime_dse\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_limit_function_alignment;\n        #else\n          int x_flag_limit_function_alignment;\n        #define flag_limit_function_alignment global_options.x_flag_limit_function_alignment\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum lto_linker_output flag_lto_linker_output;\n        #else\n          enum lto_linker_output x_flag_lto_linker_output;\n        #define flag_lto_linker_output global_options.x_flag_lto_linker_output\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_live_range_shrinkage;\n        #else\n          int x_flag_live_range_shrinkage;\n        #define flag_live_range_shrinkage global_options.x_flag_live_range_shrinkage\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_local_ivars;\n        #else\n          int x_flag_local_ivars;\n        #define flag_local_ivars global_options.x_flag_local_ivars\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_loop_interchange;\n        #else\n          int x_flag_loop_interchange;\n        #define flag_loop_interchange global_options.x_flag_loop_interchange\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_loop_nest_optimize;\n        #else\n          int x_flag_loop_nest_optimize;\n        #define flag_loop_nest_optimize global_options.x_flag_loop_nest_optimize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_loop_parallelize_all;\n        #else\n          int x_flag_loop_parallelize_all;\n        #define flag_loop_parallelize_all global_options.x_flag_loop_parallelize_all\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_unroll_jam;\n        #else\n          int x_flag_unroll_jam;\n        #define flag_unroll_jam global_options.x_flag_unroll_jam\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_lra_remat;\n        #else\n          int x_flag_lra_remat;\n        #define flag_lra_remat global_options.x_flag_lra_remat\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_lto_compression_level;\n        #else\n          int x_flag_lto_compression_level;\n        #define flag_lto_compression_level global_options.x_flag_lto_compression_level\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_lto_odr_type_mering;\n        #else\n          int x_flag_lto_odr_type_mering;\n        #define flag_lto_odr_type_mering global_options.x_flag_lto_odr_type_mering\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum lto_partition_model flag_lto_partition;\n        #else\n          enum lto_partition_model x_flag_lto_partition;\n        #define flag_lto_partition global_options.x_flag_lto_partition\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_lto_report;\n        #else\n          int x_flag_lto_report;\n        #define flag_lto_report global_options.x_flag_lto_report\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_lto_report_wpa;\n        #else\n          int x_flag_lto_report_wpa;\n        #define flag_lto_report_wpa global_options.x_flag_lto_report_wpa\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *flag_lto;\n        #else\n          const char *x_flag_lto;\n        #define flag_lto global_options.x_flag_lto\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ltrans;\n        #else\n          int x_flag_ltrans;\n        #define flag_ltrans global_options.x_flag_ltrans\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ltrans_output_list;\n        #else\n          const char *x_ltrans_output_list;\n        #define ltrans_output_list global_options.x_ltrans_output_list\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_errno_math;\n        #else\n          int x_flag_errno_math;\n        #define flag_errno_math global_options.x_flag_errno_math\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_max_array_constructor;\n        #else\n          int x_flag_max_array_constructor;\n        #define flag_max_array_constructor global_options.x_flag_max_array_constructor\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_max_errors;\n        #else\n          int x_flag_max_errors;\n        #define flag_max_errors global_options.x_flag_max_errors\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_max_stack_var_size;\n        #else\n          int x_flag_max_stack_var_size;\n        #define flag_max_stack_var_size global_options.x_flag_max_stack_var_size\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_max_subrecord_length;\n        #else\n          int x_flag_max_subrecord_length;\n        #define flag_max_subrecord_length global_options.x_flag_max_subrecord_length\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int mem_report;\n        #else\n          int x_mem_report;\n        #define mem_report global_options.x_mem_report\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int mem_report_wpa;\n        #else\n          int x_mem_report_wpa;\n        #define mem_report_wpa global_options.x_mem_report_wpa\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_merge_constants;\n        #else\n          int x_flag_merge_constants;\n        #define flag_merge_constants global_options.x_flag_merge_constants\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_merge_debug_strings;\n        #else\n          int x_flag_merge_debug_strings;\n        #define flag_merge_debug_strings global_options.x_flag_merge_debug_strings\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_module_private;\n        #else\n          int x_flag_module_private;\n        #define flag_module_private global_options.x_flag_module_private\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_modulo_sched;\n        #else\n          int x_flag_modulo_sched;\n        #define flag_modulo_sched global_options.x_flag_modulo_sched\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_modulo_sched_allow_regmoves;\n        #else\n          int x_flag_modulo_sched_allow_regmoves;\n        #define flag_modulo_sched_allow_regmoves global_options.x_flag_modulo_sched_allow_regmoves\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_move_loop_invariants;\n        #else\n          int x_flag_move_loop_invariants;\n        #define flag_move_loop_invariants global_options.x_flag_move_loop_invariants\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ms_extensions;\n        #else\n          int x_flag_ms_extensions;\n        #define flag_ms_extensions global_options.x_flag_ms_extensions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_new_inheriting_ctors;\n        #else\n          int x_flag_new_inheriting_ctors;\n        #define flag_new_inheriting_ctors global_options.x_flag_new_inheriting_ctors\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_new_ttp;\n        #else\n          int x_flag_new_ttp;\n        #define flag_new_ttp global_options.x_flag_new_ttp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_nil_receivers;\n        #else\n          int x_flag_nil_receivers;\n        #define flag_nil_receivers global_options.x_flag_nil_receivers\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_non_call_exceptions;\n        #else\n          int x_flag_non_call_exceptions;\n        #define flag_non_call_exceptions global_options.x_flag_non_call_exceptions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_no_nonansi_builtin;\n        #else\n          int x_flag_no_nonansi_builtin;\n        #define flag_no_nonansi_builtin global_options.x_flag_no_nonansi_builtin\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_nothrow_opt;\n        #else\n          int x_flag_nothrow_opt;\n        #define flag_nothrow_opt global_options.x_flag_nothrow_opt\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_objc_abi;\n        #else\n          int x_flag_objc_abi;\n        #define flag_objc_abi global_options.x_flag_objc_abi\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_objc_call_cxx_cdtors;\n        #else\n          int x_flag_objc_call_cxx_cdtors;\n        #define flag_objc_call_cxx_cdtors global_options.x_flag_objc_call_cxx_cdtors\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_objc_direct_dispatch;\n        #else\n          int x_flag_objc_direct_dispatch;\n        #define flag_objc_direct_dispatch global_options.x_flag_objc_direct_dispatch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_objc_exceptions;\n        #else\n          int x_flag_objc_exceptions;\n        #define flag_objc_exceptions global_options.x_flag_objc_exceptions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_objc_gc;\n        #else\n          int x_flag_objc_gc;\n        #define flag_objc_gc global_options.x_flag_objc_gc\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_objc_nilcheck;\n        #else\n          int x_flag_objc_nilcheck;\n        #define flag_objc_nilcheck global_options.x_flag_objc_nilcheck\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_objc_sjlj_exceptions;\n        #else\n          int x_flag_objc_sjlj_exceptions;\n        #define flag_objc_sjlj_exceptions global_options.x_flag_objc_sjlj_exceptions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_objc1_only;\n        #else\n          int x_flag_objc1_only;\n        #define flag_objc1_only global_options.x_flag_objc1_only\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum offload_abi flag_offload_abi;\n        #else\n          enum offload_abi x_flag_offload_abi;\n        #define flag_offload_abi global_options.x_flag_offload_abi\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_omit_frame_pointer;\n        #else\n          int x_flag_omit_frame_pointer;\n        #define flag_omit_frame_pointer global_options.x_flag_omit_frame_pointer\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_openacc;\n        #else\n          int x_flag_openacc;\n        #define flag_openacc global_options.x_flag_openacc\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *flag_openacc_dims;\n        #else\n          const char *x_flag_openacc_dims;\n        #define flag_openacc_dims global_options.x_flag_openacc_dims\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_openmp;\n        #else\n          int x_flag_openmp;\n        #define flag_openmp global_options.x_flag_openmp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_openmp_simd;\n        #else\n          int x_flag_openmp_simd;\n        #define flag_openmp_simd global_options.x_flag_openmp_simd\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_opt_info;\n        #else\n          int x_flag_opt_info;\n        #define flag_opt_info global_options.x_flag_opt_info\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_optimize_sibling_calls;\n        #else\n          int x_flag_optimize_sibling_calls;\n        #define flag_optimize_sibling_calls global_options.x_flag_optimize_sibling_calls\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_optimize_strlen;\n        #else\n          int x_flag_optimize_strlen;\n        #define flag_optimize_strlen global_options.x_flag_optimize_strlen\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_pack_derived;\n        #else\n          int x_flag_pack_derived;\n        #define flag_pack_derived global_options.x_flag_pack_derived\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_pack_struct;\n        #else\n          int x_flag_pack_struct;\n        #define flag_pack_struct global_options.x_flag_pack_struct\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_partial_inlining;\n        #else\n          int x_flag_partial_inlining;\n        #define flag_partial_inlining global_options.x_flag_partial_inlining\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_pcc_struct_return;\n        #else\n          int x_flag_pcc_struct_return;\n        #define flag_pcc_struct_return global_options.x_flag_pcc_struct_return\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_peel_loops;\n        #else\n          int x_flag_peel_loops;\n        #define flag_peel_loops global_options.x_flag_peel_loops\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_no_peephole;\n        #else\n          int x_flag_no_peephole;\n        #define flag_no_peephole global_options.x_flag_no_peephole\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_peephole2;\n        #else\n          int x_flag_peephole2;\n        #define flag_peephole2 global_options.x_flag_peephole2\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_permissive;\n        #else\n          int x_flag_permissive;\n        #define flag_permissive global_options.x_flag_permissive\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum permitted_flt_eval_methods flag_permitted_flt_eval_methods;\n        #else\n          enum permitted_flt_eval_methods x_flag_permitted_flt_eval_methods;\n        #define flag_permitted_flt_eval_methods global_options.x_flag_permitted_flt_eval_methods\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_plan9_extensions;\n        #else\n          int x_flag_plan9_extensions;\n        #define flag_plan9_extensions global_options.x_flag_plan9_extensions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_plt;\n        #else\n          int x_flag_plt;\n        #define flag_plt global_options.x_flag_plt\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int post_ipa_mem_report;\n        #else\n          int x_post_ipa_mem_report;\n        #define post_ipa_mem_report global_options.x_post_ipa_mem_report\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int pre_ipa_mem_report;\n        #else\n          int x_pre_ipa_mem_report;\n        #define pre_ipa_mem_report global_options.x_pre_ipa_mem_report\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_predictive_commoning;\n        #else\n          int x_flag_predictive_commoning;\n        #define flag_predictive_commoning global_options.x_flag_predictive_commoning\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_prefetch_loop_arrays;\n        #else\n          int x_flag_prefetch_loop_arrays;\n        #define flag_prefetch_loop_arrays global_options.x_flag_prefetch_loop_arrays\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_pretty_templates;\n        #else\n          int x_flag_pretty_templates;\n        #define flag_pretty_templates global_options.x_flag_pretty_templates\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_printf_return_value;\n        #else\n          int x_flag_printf_return_value;\n        #define flag_printf_return_value global_options.x_flag_printf_return_value\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int profile_flag;\n        #else\n          int x_profile_flag;\n        #define profile_flag global_options.x_profile_flag\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int profile_abs_path_flag;\n        #else\n          int x_profile_abs_path_flag;\n        #define profile_abs_path_flag global_options.x_profile_abs_path_flag\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int profile_arc_flag;\n        #else\n          int x_profile_arc_flag;\n        #define profile_arc_flag global_options.x_profile_arc_flag\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_profile_correction;\n        #else\n          int x_flag_profile_correction;\n        #define flag_profile_correction global_options.x_flag_profile_correction\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *profile_data_prefix;\n        #else\n          const char *x_profile_data_prefix;\n        #define profile_data_prefix global_options.x_profile_data_prefix\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_profile_reorder_functions;\n        #else\n          int x_flag_profile_reorder_functions;\n        #define flag_profile_reorder_functions global_options.x_flag_profile_reorder_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int profile_report;\n        #else\n          int x_profile_report;\n        #define profile_report global_options.x_profile_report\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum profile_update flag_profile_update;\n        #else\n          enum profile_update x_flag_profile_update;\n        #define flag_profile_update global_options.x_flag_profile_update\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_profile_use;\n        #else\n          int x_flag_profile_use;\n        #define flag_profile_use global_options.x_flag_profile_use\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_profile_values;\n        #else\n          int x_flag_profile_values;\n        #define flag_profile_values global_options.x_flag_profile_values\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_protect_parens;\n        #else\n          int x_flag_protect_parens;\n        #define flag_protect_parens global_options.x_flag_protect_parens\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_range_check;\n        #else\n          int x_flag_range_check;\n        #define flag_range_check global_options.x_flag_range_check\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_real4_kind;\n        #else\n          int x_flag_real4_kind;\n        #define flag_real4_kind global_options.x_flag_real4_kind\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_real8_kind;\n        #else\n          int x_flag_real8_kind;\n        #define flag_real8_kind global_options.x_flag_real8_kind\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_realloc_lhs;\n        #else\n          int x_flag_realloc_lhs;\n        #define flag_realloc_lhs global_options.x_flag_realloc_lhs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_reciprocal_math;\n        #else\n          int x_flag_reciprocal_math;\n        #define flag_reciprocal_math global_options.x_flag_reciprocal_math\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_record_gcc_switches;\n        #else\n          int x_flag_record_gcc_switches;\n        #define flag_record_gcc_switches global_options.x_flag_record_gcc_switches\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_record_marker;\n        #else\n          int x_flag_record_marker;\n        #define flag_record_marker global_options.x_flag_record_marker\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_recursive;\n        #else\n          int x_flag_recursive;\n        #define flag_recursive global_options.x_flag_recursive\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ree;\n        #else\n          int x_flag_ree;\n        #define flag_ree global_options.x_flag_ree\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_rename_registers;\n        #else\n          int x_flag_rename_registers;\n        #define flag_rename_registers global_options.x_flag_rename_registers\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_reorder_blocks;\n        #else\n          int x_flag_reorder_blocks;\n        #define flag_reorder_blocks global_options.x_flag_reorder_blocks\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum reorder_blocks_algorithm flag_reorder_blocks_algorithm;\n        #else\n          enum reorder_blocks_algorithm x_flag_reorder_blocks_algorithm;\n        #define flag_reorder_blocks_algorithm global_options.x_flag_reorder_blocks_algorithm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_reorder_blocks_and_partition;\n        #else\n          int x_flag_reorder_blocks_and_partition;\n        #define flag_reorder_blocks_and_partition global_options.x_flag_reorder_blocks_and_partition\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_reorder_functions;\n        #else\n          int x_flag_reorder_functions;\n        #define flag_reorder_functions global_options.x_flag_reorder_functions\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_repack_arrays;\n        #else\n          int x_flag_repack_arrays;\n        #define flag_repack_arrays global_options.x_flag_repack_arrays\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_replace_objc_classes;\n        #else\n          int x_flag_replace_objc_classes;\n        #define flag_replace_objc_classes global_options.x_flag_replace_objc_classes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_report_bug;\n        #else\n          int x_flag_report_bug;\n        #define flag_report_bug global_options.x_flag_report_bug\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int go_require_return_statement;\n        #else\n          int x_go_require_return_statement;\n        #define go_require_return_statement global_options.x_go_require_return_statement\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_rerun_cse_after_loop;\n        #else\n          int x_flag_rerun_cse_after_loop;\n        #define flag_rerun_cse_after_loop global_options.x_flag_rerun_cse_after_loop\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_resched_modulo_sched;\n        #else\n          int x_flag_resched_modulo_sched;\n        #define flag_resched_modulo_sched global_options.x_flag_resched_modulo_sched\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_rounding_math;\n        #else\n          int x_flag_rounding_math;\n        #define flag_rounding_math global_options.x_flag_rounding_math\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_rtti;\n        #else\n          int x_flag_rtti;\n        #define flag_rtti global_options.x_flag_rtti\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sanitize_address_use_after_scope;\n        #else\n          int x_flag_sanitize_address_use_after_scope;\n        #define flag_sanitize_address_use_after_scope global_options.x_flag_sanitize_address_use_after_scope\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sanitize_undefined_trap_on_error;\n        #else\n          int x_flag_sanitize_undefined_trap_on_error;\n        #define flag_sanitize_undefined_trap_on_error global_options.x_flag_sanitize_undefined_trap_on_error\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched_critical_path_heuristic;\n        #else\n          int x_flag_sched_critical_path_heuristic;\n        #define flag_sched_critical_path_heuristic global_options.x_flag_sched_critical_path_heuristic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched_dep_count_heuristic;\n        #else\n          int x_flag_sched_dep_count_heuristic;\n        #define flag_sched_dep_count_heuristic global_options.x_flag_sched_dep_count_heuristic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched_group_heuristic;\n        #else\n          int x_flag_sched_group_heuristic;\n        #define flag_sched_group_heuristic global_options.x_flag_sched_group_heuristic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_schedule_interblock;\n        #else\n          int x_flag_schedule_interblock;\n        #define flag_schedule_interblock global_options.x_flag_schedule_interblock\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched_last_insn_heuristic;\n        #else\n          int x_flag_sched_last_insn_heuristic;\n        #define flag_sched_last_insn_heuristic global_options.x_flag_sched_last_insn_heuristic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched_pressure;\n        #else\n          int x_flag_sched_pressure;\n        #define flag_sched_pressure global_options.x_flag_sched_pressure\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched_rank_heuristic;\n        #else\n          int x_flag_sched_rank_heuristic;\n        #define flag_sched_rank_heuristic global_options.x_flag_sched_rank_heuristic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_schedule_speculative;\n        #else\n          int x_flag_schedule_speculative;\n        #define flag_schedule_speculative global_options.x_flag_schedule_speculative\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched_spec_insn_heuristic;\n        #else\n          int x_flag_sched_spec_insn_heuristic;\n        #define flag_sched_spec_insn_heuristic global_options.x_flag_sched_spec_insn_heuristic\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_schedule_speculative_load;\n        #else\n          int x_flag_schedule_speculative_load;\n        #define flag_schedule_speculative_load global_options.x_flag_schedule_speculative_load\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_schedule_speculative_load_dangerous;\n        #else\n          int x_flag_schedule_speculative_load_dangerous;\n        #define flag_schedule_speculative_load_dangerous global_options.x_flag_schedule_speculative_load_dangerous\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched_stalled_insns;\n        #else\n          int x_flag_sched_stalled_insns;\n        #define flag_sched_stalled_insns global_options.x_flag_sched_stalled_insns\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched_stalled_insns_dep;\n        #else\n          int x_flag_sched_stalled_insns_dep;\n        #define flag_sched_stalled_insns_dep global_options.x_flag_sched_stalled_insns_dep\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int sched_verbose_param;\n        #else\n          int x_sched_verbose_param;\n        #define sched_verbose_param global_options.x_sched_verbose_param\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sched2_use_superblocks;\n        #else\n          int x_flag_sched2_use_superblocks;\n        #define flag_sched2_use_superblocks global_options.x_flag_sched2_use_superblocks\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_schedule_fusion;\n        #else\n          int x_flag_schedule_fusion;\n        #define flag_schedule_fusion global_options.x_flag_schedule_fusion\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_schedule_insns;\n        #else\n          int x_flag_schedule_insns;\n        #define flag_schedule_insns global_options.x_flag_schedule_insns\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_schedule_insns_after_reload;\n        #else\n          int x_flag_schedule_insns_after_reload;\n        #define flag_schedule_insns_after_reload global_options.x_flag_schedule_insns_after_reload\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_second_underscore;\n        #else\n          int x_flag_second_underscore;\n        #define flag_second_underscore global_options.x_flag_second_underscore\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_section_anchors;\n        #else\n          int x_flag_section_anchors;\n        #define flag_section_anchors global_options.x_flag_section_anchors\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sel_sched_pipelining;\n        #else\n          int x_flag_sel_sched_pipelining;\n        #define flag_sel_sched_pipelining global_options.x_flag_sel_sched_pipelining\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sel_sched_pipelining_outer_loops;\n        #else\n          int x_flag_sel_sched_pipelining_outer_loops;\n        #define flag_sel_sched_pipelining_outer_loops global_options.x_flag_sel_sched_pipelining_outer_loops\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sel_sched_reschedule_pipelined;\n        #else\n          int x_flag_sel_sched_reschedule_pipelined;\n        #define flag_sel_sched_reschedule_pipelined global_options.x_flag_sel_sched_reschedule_pipelined\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_selective_scheduling;\n        #else\n          int x_flag_selective_scheduling;\n        #define flag_selective_scheduling global_options.x_flag_selective_scheduling\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_selective_scheduling2;\n        #else\n          int x_flag_selective_scheduling2;\n        #define flag_selective_scheduling2 global_options.x_flag_selective_scheduling2\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *flag_self_test;\n        #else\n          const char *x_flag_self_test;\n        #define flag_self_test global_options.x_flag_self_test\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_semantic_interposition;\n        #else\n          int x_flag_semantic_interposition;\n        #define flag_semantic_interposition global_options.x_flag_semantic_interposition\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_short_enums;\n        #else\n          int x_flag_short_enums;\n        #define flag_short_enums global_options.x_flag_short_enums\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_short_wchar;\n        #else\n          int x_flag_short_wchar;\n        #define flag_short_wchar global_options.x_flag_short_wchar\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_show_column;\n        #else\n          int x_flag_show_column;\n        #define flag_show_column global_options.x_flag_show_column\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_shrink_wrap;\n        #else\n          int x_flag_shrink_wrap;\n        #define flag_shrink_wrap global_options.x_flag_shrink_wrap\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_shrink_wrap_separate;\n        #else\n          int x_flag_shrink_wrap_separate;\n        #define flag_shrink_wrap_separate global_options.x_flag_shrink_wrap_separate\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sign_zero;\n        #else\n          int x_flag_sign_zero;\n        #define flag_sign_zero global_options.x_flag_sign_zero\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_signaling_nans;\n        #else\n          int x_flag_signaling_nans;\n        #define flag_signaling_nans global_options.x_flag_signaling_nans\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_signed_bitfields;\n        #else\n          int x_flag_signed_bitfields;\n        #define flag_signed_bitfields global_options.x_flag_signed_bitfields\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_signed_char;\n        #else\n          int x_flag_signed_char;\n        #define flag_signed_char global_options.x_flag_signed_char\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_signed_zeros;\n        #else\n          int x_flag_signed_zeros;\n        #define flag_signed_zeros global_options.x_flag_signed_zeros\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum vect_cost_model flag_simd_cost_model;\n        #else\n          enum vect_cost_model x_flag_simd_cost_model;\n        #define flag_simd_cost_model global_options.x_flag_simd_cost_model\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_single_precision_constant;\n        #else\n          int x_flag_single_precision_constant;\n        #define flag_single_precision_constant global_options.x_flag_single_precision_constant\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sized_deallocation;\n        #else\n          int x_flag_sized_deallocation;\n        #define flag_sized_deallocation global_options.x_flag_sized_deallocation\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_split_ivs_in_unroller;\n        #else\n          int x_flag_split_ivs_in_unroller;\n        #define flag_split_ivs_in_unroller global_options.x_flag_split_ivs_in_unroller\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_split_loops;\n        #else\n          int x_flag_split_loops;\n        #define flag_split_loops global_options.x_flag_split_loops\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_split_paths;\n        #else\n          int x_flag_split_paths;\n        #define flag_split_paths global_options.x_flag_split_paths\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_split_stack;\n        #else\n          int x_flag_split_stack;\n        #define flag_split_stack global_options.x_flag_split_stack\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_split_wide_types;\n        #else\n          int x_flag_split_wide_types;\n        #define flag_split_wide_types global_options.x_flag_split_wide_types\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ssa_backprop;\n        #else\n          int x_flag_ssa_backprop;\n        #define flag_ssa_backprop global_options.x_flag_ssa_backprop\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_ssa_phiopt;\n        #else\n          int x_flag_ssa_phiopt;\n        #define flag_ssa_phiopt global_options.x_flag_ssa_phiopt\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum scalar_storage_order_kind default_sso;\n        #else\n          enum scalar_storage_order_kind x_default_sso;\n        #define default_sso global_options.x_default_sso\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_stack_arrays;\n        #else\n          int x_flag_stack_arrays;\n        #define flag_stack_arrays global_options.x_flag_stack_arrays\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_stack_clash_protection;\n        #else\n          int x_flag_stack_clash_protection;\n        #define flag_stack_clash_protection global_options.x_flag_stack_clash_protection\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_stack_protect;\n        #else\n          int x_flag_stack_protect;\n        #define flag_stack_protect global_options.x_flag_stack_protect\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum stack_reuse_level flag_stack_reuse;\n        #else\n          enum stack_reuse_level x_flag_stack_reuse;\n        #define flag_stack_reuse global_options.x_flag_stack_reuse\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_stack_usage;\n        #else\n          int x_flag_stack_usage;\n        #define flag_stack_usage global_options.x_flag_stack_usage\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_detailed_statistics;\n        #else\n          int x_flag_detailed_statistics;\n        #define flag_detailed_statistics global_options.x_flag_detailed_statistics\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_stdarg_opt;\n        #else\n          int x_flag_stdarg_opt;\n        #define flag_stdarg_opt global_options.x_flag_stdarg_opt\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_store_merging;\n        #else\n          int x_flag_store_merging;\n        #define flag_store_merging global_options.x_flag_store_merging\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_strict_aliasing;\n        #else\n          int x_flag_strict_aliasing;\n        #define flag_strict_aliasing global_options.x_flag_strict_aliasing\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_strict_enums;\n        #else\n          int x_flag_strict_enums;\n        #define flag_strict_enums global_options.x_flag_strict_enums\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_strict_volatile_bitfields;\n        #else\n          int x_flag_strict_volatile_bitfields;\n        #define flag_strict_volatile_bitfields global_options.x_flag_strict_volatile_bitfields\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_strong_eval_order;\n        #else\n          int x_flag_strong_eval_order;\n        #define flag_strong_eval_order global_options.x_flag_strong_eval_order\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_sync_libcalls;\n        #else\n          int x_flag_sync_libcalls;\n        #define flag_sync_libcalls global_options.x_flag_sync_libcalls\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_syntax_only;\n        #else\n          int x_flag_syntax_only;\n        #define flag_syntax_only global_options.x_flag_syntax_only\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int template_backtrace_limit;\n        #else\n          int x_template_backtrace_limit;\n        #define template_backtrace_limit global_options.x_template_backtrace_limit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_test_coverage;\n        #else\n          int x_flag_test_coverage;\n        #define flag_test_coverage global_options.x_flag_test_coverage\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_test_forall_temp;\n        #else\n          int x_flag_test_forall_temp;\n        #define flag_test_forall_temp global_options.x_flag_test_forall_temp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_thread_jumps;\n        #else\n          int x_flag_thread_jumps;\n        #define flag_thread_jumps global_options.x_flag_thread_jumps\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_threadsafe_statics;\n        #else\n          int x_flag_threadsafe_statics;\n        #define flag_threadsafe_statics global_options.x_flag_threadsafe_statics\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int time_report;\n        #else\n          int x_time_report;\n        #define time_report global_options.x_time_report\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int time_report_details;\n        #else\n          int x_time_report_details;\n        #define time_report_details global_options.x_time_report_details\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum tls_model flag_tls_default;\n        #else\n          enum tls_model x_flag_tls_default;\n        #define flag_tls_default global_options.x_flag_tls_default\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_toplevel_reorder;\n        #else\n          int x_flag_toplevel_reorder;\n        #define flag_toplevel_reorder global_options.x_flag_toplevel_reorder\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tracer;\n        #else\n          int x_flag_tracer;\n        #define flag_tracer global_options.x_flag_tracer\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_trampolines;\n        #else\n          int x_flag_trampolines;\n        #define flag_trampolines global_options.x_flag_trampolines\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_trapping_math;\n        #else\n          int x_flag_trapping_math;\n        #define flag_trapping_math global_options.x_flag_trapping_math\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_trapv;\n        #else\n          int x_flag_trapv;\n        #define flag_trapv global_options.x_flag_trapv\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_bit_ccp;\n        #else\n          int x_flag_tree_bit_ccp;\n        #define flag_tree_bit_ccp global_options.x_flag_tree_bit_ccp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_builtin_call_dce;\n        #else\n          int x_flag_tree_builtin_call_dce;\n        #define flag_tree_builtin_call_dce global_options.x_flag_tree_builtin_call_dce\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_ccp;\n        #else\n          int x_flag_tree_ccp;\n        #define flag_tree_ccp global_options.x_flag_tree_ccp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_ch;\n        #else\n          int x_flag_tree_ch;\n        #define flag_tree_ch global_options.x_flag_tree_ch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_coalesce_vars;\n        #else\n          int x_flag_tree_coalesce_vars;\n        #define flag_tree_coalesce_vars global_options.x_flag_tree_coalesce_vars\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_copy_prop;\n        #else\n          int x_flag_tree_copy_prop;\n        #define flag_tree_copy_prop global_options.x_flag_tree_copy_prop\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_cselim;\n        #else\n          int x_flag_tree_cselim;\n        #define flag_tree_cselim global_options.x_flag_tree_cselim\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_dce;\n        #else\n          int x_flag_tree_dce;\n        #define flag_tree_dce global_options.x_flag_tree_dce\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_dom;\n        #else\n          int x_flag_tree_dom;\n        #define flag_tree_dom global_options.x_flag_tree_dom\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_dse;\n        #else\n          int x_flag_tree_dse;\n        #define flag_tree_dse global_options.x_flag_tree_dse\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_forwprop;\n        #else\n          int x_flag_tree_forwprop;\n        #define flag_tree_forwprop global_options.x_flag_tree_forwprop\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_fre;\n        #else\n          int x_flag_tree_fre;\n        #define flag_tree_fre global_options.x_flag_tree_fre\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_loop_distribute_patterns;\n        #else\n          int x_flag_tree_loop_distribute_patterns;\n        #define flag_tree_loop_distribute_patterns global_options.x_flag_tree_loop_distribute_patterns\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_loop_distribution;\n        #else\n          int x_flag_tree_loop_distribution;\n        #define flag_tree_loop_distribution global_options.x_flag_tree_loop_distribution\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_loop_if_convert;\n        #else\n          int x_flag_tree_loop_if_convert;\n        #define flag_tree_loop_if_convert global_options.x_flag_tree_loop_if_convert\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_loop_im;\n        #else\n          int x_flag_tree_loop_im;\n        #define flag_tree_loop_im global_options.x_flag_tree_loop_im\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_loop_ivcanon;\n        #else\n          int x_flag_tree_loop_ivcanon;\n        #define flag_tree_loop_ivcanon global_options.x_flag_tree_loop_ivcanon\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_loop_optimize;\n        #else\n          int x_flag_tree_loop_optimize;\n        #define flag_tree_loop_optimize global_options.x_flag_tree_loop_optimize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_loop_vectorize;\n        #else\n          int x_flag_tree_loop_vectorize;\n        #define flag_tree_loop_vectorize global_options.x_flag_tree_loop_vectorize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_live_range_split;\n        #else\n          int x_flag_tree_live_range_split;\n        #define flag_tree_live_range_split global_options.x_flag_tree_live_range_split\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_parallelize_loops;\n        #else\n          int x_flag_tree_parallelize_loops;\n        #define flag_tree_parallelize_loops global_options.x_flag_tree_parallelize_loops\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_partial_pre;\n        #else\n          int x_flag_tree_partial_pre;\n        #define flag_tree_partial_pre global_options.x_flag_tree_partial_pre\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_phiprop;\n        #else\n          int x_flag_tree_phiprop;\n        #define flag_tree_phiprop global_options.x_flag_tree_phiprop\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_pre;\n        #else\n          int x_flag_tree_pre;\n        #define flag_tree_pre global_options.x_flag_tree_pre\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_pta;\n        #else\n          int x_flag_tree_pta;\n        #define flag_tree_pta global_options.x_flag_tree_pta\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_reassoc;\n        #else\n          int x_flag_tree_reassoc;\n        #define flag_tree_reassoc global_options.x_flag_tree_reassoc\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_scev_cprop;\n        #else\n          int x_flag_tree_scev_cprop;\n        #define flag_tree_scev_cprop global_options.x_flag_tree_scev_cprop\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_sink;\n        #else\n          int x_flag_tree_sink;\n        #define flag_tree_sink global_options.x_flag_tree_sink\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_slp_vectorize;\n        #else\n          int x_flag_tree_slp_vectorize;\n        #define flag_tree_slp_vectorize global_options.x_flag_tree_slp_vectorize\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_slsr;\n        #else\n          int x_flag_tree_slsr;\n        #define flag_tree_slsr global_options.x_flag_tree_slsr\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_sra;\n        #else\n          int x_flag_tree_sra;\n        #define flag_tree_sra global_options.x_flag_tree_sra\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_switch_conversion;\n        #else\n          int x_flag_tree_switch_conversion;\n        #define flag_tree_switch_conversion global_options.x_flag_tree_switch_conversion\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_tail_merge;\n        #else\n          int x_flag_tree_tail_merge;\n        #define flag_tree_tail_merge global_options.x_flag_tree_tail_merge\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_ter;\n        #else\n          int x_flag_tree_ter;\n        #define flag_tree_ter global_options.x_flag_tree_ter\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_tree_vrp;\n        #else\n          int x_flag_tree_vrp;\n        #define flag_tree_vrp global_options.x_flag_tree_vrp\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_unconstrained_commons;\n        #else\n          int x_flag_unconstrained_commons;\n        #define flag_unconstrained_commons global_options.x_flag_unconstrained_commons\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_underscoring;\n        #else\n          int x_flag_underscoring;\n        #define flag_underscoring global_options.x_flag_underscoring\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_unit_at_a_time;\n        #else\n          int x_flag_unit_at_a_time;\n        #define flag_unit_at_a_time global_options.x_flag_unit_at_a_time\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_unroll_all_loops;\n        #else\n          int x_flag_unroll_all_loops;\n        #define flag_unroll_all_loops global_options.x_flag_unroll_all_loops\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_unroll_loops;\n        #else\n          int x_flag_unroll_loops;\n        #define flag_unroll_loops global_options.x_flag_unroll_loops\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_unsafe_math_optimizations;\n        #else\n          int x_flag_unsafe_math_optimizations;\n        #define flag_unsafe_math_optimizations global_options.x_flag_unsafe_math_optimizations\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_unswitch_loops;\n        #else\n          int x_flag_unswitch_loops;\n        #define flag_unswitch_loops global_options.x_flag_unswitch_loops\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_unwind_tables;\n        #else\n          int x_flag_unwind_tables;\n        #define flag_unwind_tables global_options.x_flag_unwind_tables\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_use_cxa_atexit;\n        #else\n          int x_flag_use_cxa_atexit;\n        #define flag_use_cxa_atexit global_options.x_flag_use_cxa_atexit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_use_cxa_get_exception_ptr;\n        #else\n          int x_flag_use_cxa_get_exception_ptr;\n        #define flag_use_cxa_get_exception_ptr global_options.x_flag_use_cxa_get_exception_ptr\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_use_linker_plugin;\n        #else\n          int x_flag_use_linker_plugin;\n        #define flag_use_linker_plugin global_options.x_flag_use_linker_plugin\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_var_tracking;\n        #else\n          int x_flag_var_tracking;\n        #define flag_var_tracking global_options.x_flag_var_tracking\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_var_tracking_assignments;\n        #else\n          int x_flag_var_tracking_assignments;\n        #define flag_var_tracking_assignments global_options.x_flag_var_tracking_assignments\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_var_tracking_assignments_toggle;\n        #else\n          int x_flag_var_tracking_assignments_toggle;\n        #define flag_var_tracking_assignments_toggle global_options.x_flag_var_tracking_assignments_toggle\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_var_tracking_uninit;\n        #else\n          int x_flag_var_tracking_uninit;\n        #define flag_var_tracking_uninit global_options.x_flag_var_tracking_uninit\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_variable_expansion_in_unroller;\n        #else\n          int x_flag_variable_expansion_in_unroller;\n        #define flag_variable_expansion_in_unroller global_options.x_flag_variable_expansion_in_unroller\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum vect_cost_model flag_vect_cost_model;\n        #else\n          enum vect_cost_model x_flag_vect_cost_model;\n        #define flag_vect_cost_model global_options.x_flag_vect_cost_model\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_verbose_asm;\n        #else\n          int x_flag_verbose_asm;\n        #define flag_verbose_asm global_options.x_flag_verbose_asm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_visibility_ms_compat;\n        #else\n          int x_flag_visibility_ms_compat;\n        #define flag_visibility_ms_compat global_options.x_flag_visibility_ms_compat\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum symbol_visibility default_visibility;\n        #else\n          enum symbol_visibility x_default_visibility;\n        #define default_visibility global_options.x_default_visibility\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_value_profile_transformations;\n        #else\n          int x_flag_value_profile_transformations;\n        #define flag_value_profile_transformations global_options.x_flag_value_profile_transformations\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum vtv_priority flag_vtable_verify;\n        #else\n          enum vtv_priority x_flag_vtable_verify;\n        #define flag_vtable_verify global_options.x_flag_vtable_verify\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_vtv_counts;\n        #else\n          int x_flag_vtv_counts;\n        #define flag_vtv_counts global_options.x_flag_vtv_counts\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_vtv_debug;\n        #else\n          int x_flag_vtv_debug;\n        #define flag_vtv_debug global_options.x_flag_vtv_debug\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_weak;\n        #else\n          int x_flag_weak;\n        #define flag_weak global_options.x_flag_weak\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_web;\n        #else\n          int x_flag_web;\n        #define flag_web global_options.x_flag_web\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_whole_program;\n        #else\n          int x_flag_whole_program;\n        #define flag_whole_program global_options.x_flag_whole_program\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_working_directory;\n        #else\n          int x_flag_working_directory;\n        #define flag_working_directory global_options.x_flag_working_directory\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *flag_wpa;\n        #else\n          const char *x_flag_wpa;\n        #define flag_wpa global_options.x_flag_wpa\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_wrapv;\n        #else\n          int x_flag_wrapv;\n        #define flag_wrapv global_options.x_flag_wrapv\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_zero_initialized_in_bss;\n        #else\n          int x_flag_zero_initialized_in_bss;\n        #define flag_zero_initialized_in_bss global_options.x_flag_zero_initialized_in_bss\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_zero_link;\n        #else\n          int x_flag_zero_link;\n        #define flag_zero_link global_options.x_flag_zero_link\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int debug_column_info;\n        #else\n          int x_debug_column_info;\n        #define debug_column_info global_options.x_debug_column_info\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int dwarf_version;\n        #else\n          int x_dwarf_version;\n        #define dwarf_version global_options.x_dwarf_version\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gen_declaration;\n        #else\n          int x_flag_gen_declaration;\n        #define flag_gen_declaration global_options.x_flag_gen_declaration\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int debug_generate_pub_sections;\n        #else\n          int x_debug_generate_pub_sections;\n        #define debug_generate_pub_sections global_options.x_debug_generate_pub_sections\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int dwarf_record_gcc_switches;\n        #else\n          int x_dwarf_record_gcc_switches;\n        #define dwarf_record_gcc_switches global_options.x_dwarf_record_gcc_switches\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int dwarf_split_debug_info;\n        #else\n          int x_dwarf_split_debug_info;\n        #define dwarf_split_debug_info global_options.x_dwarf_split_debug_info\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int debug_nonbind_markers_p;\n        #else\n          int x_debug_nonbind_markers_p;\n        #define debug_nonbind_markers_p global_options.x_debug_nonbind_markers_p\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int dwarf_strict;\n        #else\n          int x_dwarf_strict;\n        #define dwarf_strict global_options.x_dwarf_strict\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_gtoggle;\n        #else\n          int x_flag_gtoggle;\n        #define flag_gtoggle global_options.x_flag_gtoggle\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *imultiarch;\n        #else\n          const char *x_imultiarch;\n        #define imultiarch global_options.x_imultiarch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *plugindir_string;\n        #else\n          const char *x_plugindir_string;\n        #define plugindir_string global_options.x_plugindir_string\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum calling_abi ix86_abi;\n        #else\n          enum calling_abi x_ix86_abi;\n        #define ix86_abi global_options.x_ix86_abi\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum pmode ix86_pmode;\n        #else\n          enum pmode x_ix86_pmode;\n        #define ix86_pmode global_options.x_ix86_pmode\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum ix86_align_data ix86_align_data_type;\n        #else\n          enum ix86_align_data x_ix86_align_data_type;\n        #define ix86_align_data_type global_options.x_ix86_align_data_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_android;\n        #else\n          int x_flag_android;\n        #define flag_android global_options.x_flag_android\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ix86_arch_string;\n        #else\n          const char *x_ix86_arch_string;\n        #define ix86_arch_string global_options.x_ix86_arch_string\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum asm_dialect ix86_asm_dialect;\n        #else\n          enum asm_dialect x_ix86_asm_dialect;\n        #define ix86_asm_dialect global_options.x_ix86_asm_dialect\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int linux_libc;\n        #else\n          int x_linux_libc;\n        #define linux_libc global_options.x_linux_libc\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_branch_cost;\n        #else\n          int x_ix86_branch_cost;\n        #define ix86_branch_cost global_options.x_ix86_branch_cost\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_cet;\n        #else\n          int x_flag_cet;\n        #define flag_cet global_options.x_flag_cet\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_cet_switch;\n        #else\n          int x_flag_cet_switch;\n        #define flag_cet_switch global_options.x_flag_cet_switch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum cmodel ix86_cmodel;\n        #else\n          enum cmodel x_ix86_cmodel;\n        #define ix86_cmodel global_options.x_ix86_cmodel\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_dispatch_scheduler;\n        #else\n          int x_flag_dispatch_scheduler;\n        #define flag_dispatch_scheduler global_options.x_flag_dispatch_scheduler\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_dump_tunes;\n        #else\n          int x_ix86_dump_tunes;\n        #define ix86_dump_tunes global_options.x_ix86_dump_tunes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_fentry;\n        #else\n          int x_flag_fentry;\n        #define flag_fentry global_options.x_flag_fentry\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_force_drap;\n        #else\n          int x_ix86_force_drap;\n        #define ix86_force_drap global_options.x_ix86_force_drap\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_force_indirect_call;\n        #else\n          int x_flag_force_indirect_call;\n        #define flag_force_indirect_call global_options.x_flag_force_indirect_call\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum fpmath_unit ix86_fpmath;\n        #else\n          enum fpmath_unit x_ix86_fpmath;\n        #define ix86_fpmath global_options.x_ix86_fpmath\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_incoming_stack_boundary_arg;\n        #else\n          int x_ix86_incoming_stack_boundary_arg;\n        #define ix86_incoming_stack_boundary_arg global_options.x_ix86_incoming_stack_boundary_arg\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_section_threshold;\n        #else\n          int x_ix86_section_threshold;\n        #define ix86_section_threshold global_options.x_ix86_section_threshold\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ix86_tune_memcpy_strategy;\n        #else\n          const char *x_ix86_tune_memcpy_strategy;\n        #define ix86_tune_memcpy_strategy global_options.x_ix86_tune_memcpy_strategy\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ix86_tune_memset_strategy;\n        #else\n          const char *x_ix86_tune_memset_strategy;\n        #define ix86_tune_memset_strategy global_options.x_ix86_tune_memset_strategy\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_mitigate_rop;\n        #else\n          int x_flag_mitigate_rop;\n        #define flag_mitigate_rop global_options.x_flag_mitigate_rop\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_tune_no_default;\n        #else\n          int x_ix86_tune_no_default;\n        #define ix86_tune_no_default global_options.x_ix86_tune_no_default\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_nop_mcount;\n        #else\n          int x_flag_nop_mcount;\n        #define flag_nop_mcount global_options.x_flag_nop_mcount\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum prefer_vector_width prefer_vector_width_type;\n        #else\n          enum prefer_vector_width x_prefer_vector_width_type;\n        #define prefer_vector_width_type global_options.x_prefer_vector_width_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_preferred_stack_boundary_arg;\n        #else\n          int x_ix86_preferred_stack_boundary_arg;\n        #define ix86_preferred_stack_boundary_arg global_options.x_ix86_preferred_stack_boundary_arg\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ix86_recip_name;\n        #else\n          const char *x_ix86_recip_name;\n        #define ix86_recip_name global_options.x_ix86_recip_name\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_record_mcount;\n        #else\n          int x_flag_record_mcount;\n        #define flag_record_mcount global_options.x_flag_record_mcount\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_regparm;\n        #else\n          int x_ix86_regparm;\n        #define ix86_regparm global_options.x_ix86_regparm\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_skip_rax_setup;\n        #else\n          int x_flag_skip_rax_setup;\n        #define flag_skip_rax_setup global_options.x_flag_skip_rax_setup\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_sse2avx;\n        #else\n          int x_ix86_sse2avx;\n        #define ix86_sse2avx global_options.x_ix86_sse2avx\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ix86_stack_protector_guard_offset_str;\n        #else\n          const char *x_ix86_stack_protector_guard_offset_str;\n        #define ix86_stack_protector_guard_offset_str global_options.x_ix86_stack_protector_guard_offset_str\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ix86_stack_protector_guard_reg_str;\n        #else\n          const char *x_ix86_stack_protector_guard_reg_str;\n        #define ix86_stack_protector_guard_reg_str global_options.x_ix86_stack_protector_guard_reg_str\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ix86_stack_protector_guard_symbol_str;\n        #else\n          const char *x_ix86_stack_protector_guard_symbol_str;\n        #define ix86_stack_protector_guard_symbol_str global_options.x_ix86_stack_protector_guard_symbol_str\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum stack_protector_guard ix86_stack_protector_guard;\n        #else\n          enum stack_protector_guard x_ix86_stack_protector_guard;\n        #define ix86_stack_protector_guard global_options.x_ix86_stack_protector_guard\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int ix86_force_align_arg_pointer;\n        #else\n          int x_ix86_force_align_arg_pointer;\n        #define ix86_force_align_arg_pointer global_options.x_ix86_force_align_arg_pointer\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum stringop_alg ix86_stringop_alg;\n        #else\n          enum stringop_alg x_ix86_stringop_alg;\n        #define ix86_stringop_alg global_options.x_ix86_stringop_alg\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum tls_dialect ix86_tls_dialect;\n        #else\n          enum tls_dialect x_ix86_tls_dialect;\n        #define ix86_tls_dialect global_options.x_ix86_tls_dialect\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ix86_tune_ctrl_string;\n        #else\n          const char *x_ix86_tune_ctrl_string;\n        #define ix86_tune_ctrl_string global_options.x_ix86_tune_ctrl_string\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *ix86_tune_string;\n        #else\n          const char *x_ix86_tune_string;\n        #define ix86_tune_string global_options.x_ix86_tune_string\n        #endif\n        #ifdef GENERATOR_FILE\n        extern enum ix86_veclibabi ix86_veclibabi_type;\n        #else\n          enum ix86_veclibabi x_ix86_veclibabi_type;\n        #define ix86_veclibabi_type global_options.x_ix86_veclibabi_type\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *asm_file_name;\n        #else\n          const char *x_asm_file_name;\n        #define asm_file_name global_options.x_asm_file_name\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int pass_exit_codes;\n        #else\n          int x_pass_exit_codes;\n        #define pass_exit_codes global_options.x_pass_exit_codes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_pedantic_errors;\n        #else\n          int x_flag_pedantic_errors;\n        #define flag_pedantic_errors global_options.x_flag_pedantic_errors\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int use_pipes;\n        #else\n          int x_use_pipes;\n        #define use_pipes global_options.x_use_pipes\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *print_file_name;\n        #else\n          const char *x_print_file_name;\n        #define print_file_name global_options.x_print_file_name\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int print_multi_directory;\n        #else\n          int x_print_multi_directory;\n        #define print_multi_directory global_options.x_print_multi_directory\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int print_multi_lib;\n        #else\n          int x_print_multi_lib;\n        #define print_multi_lib global_options.x_print_multi_lib\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int print_multi_os_directory;\n        #else\n          int x_print_multi_os_directory;\n        #define print_multi_os_directory global_options.x_print_multi_os_directory\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int print_multiarch;\n        #else\n          int x_print_multiarch;\n        #define print_multiarch global_options.x_print_multiarch\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *print_prog_name;\n        #else\n          const char *x_print_prog_name;\n        #define print_prog_name global_options.x_print_prog_name\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int print_search_dirs;\n        #else\n          int x_print_search_dirs;\n        #define print_search_dirs global_options.x_print_search_dirs\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int print_sysroot;\n        #else\n          int x_print_sysroot;\n        #define print_sysroot global_options.x_print_sysroot\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int print_sysroot_headers_suffix;\n        #else\n          int x_print_sysroot_headers_suffix;\n        #define print_sysroot_headers_suffix global_options.x_print_sysroot_headers_suffix\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int quiet_flag;\n        #else\n          int x_quiet_flag;\n        #define quiet_flag global_options.x_quiet_flag\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int report_times;\n        #else\n          int x_report_times;\n        #define report_times global_options.x_report_times\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int flag_undef;\n        #else\n          int x_flag_undef;\n        #define flag_undef global_options.x_flag_undef\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int verbose_flag;\n        #else\n          int x_verbose_flag;\n        #define verbose_flag global_options.x_verbose_flag\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int version_flag;\n        #else\n          int x_version_flag;\n        #define version_flag global_options.x_version_flag\n        #endif\n        #ifdef GENERATOR_FILE\n        extern int inhibit_warnings;\n        #else\n          int x_inhibit_warnings;\n        #define inhibit_warnings global_options.x_inhibit_warnings\n        #endif\n        #ifdef GENERATOR_FILE\n        extern const char *wrapper_string;\n        #else\n          const char *x_wrapper_string;\n        #define wrapper_string global_options.x_wrapper_string\n        #endif\n        #ifndef GENERATOR_FILE\n          int x_VAR_malign_functions_;\n        #define x_VAR_malign_functions_ do_not_use\n        #endif\n        #ifndef GENERATOR_FILE\n          int x_VAR_malign_jumps_;\n        #define x_VAR_malign_jumps_ do_not_use\n        #endif\n        #ifndef GENERATOR_FILE\n          int x_VAR_malign_loops_;\n        #define x_VAR_malign_loops_ do_not_use\n        #endif\n        #ifndef GENERATOR_FILE\n          int x_VAR_mpc32;\n        #define x_VAR_mpc32 do_not_use\n        #endif\n        #ifndef GENERATOR_FILE\n          int x_VAR_mpc64;\n        #define x_VAR_mpc64 do_not_use\n        #endif\n        #ifndef GENERATOR_FILE\n          int x_VAR_mpc80;\n        #define x_VAR_mpc80 do_not_use\n        #endif\n        #ifndef GENERATOR_FILE\n          int x_VAR_mpcommit;\n        #define x_VAR_mpcommit do_not_use\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_associative_math;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_cx_limited_range;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_excess_precision_cmdline;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_finite_math_only;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_errno_math;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_reciprocal_math;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_rounding_math;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_signaling_nans;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_signed_zeros;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_trapping_math;\n        #endif\n        #ifndef GENERATOR_FILE\n          bool frontend_set_flag_unsafe_math_optimizations;\n        #endif\n        #ifndef GENERATOR_FILE\n        };\n        extern struct gcc_options global_options;\n        extern const struct gcc_options global_options_init;\n        extern struct gcc_options global_options_set;\n        #define target_flags_explicit global_options_set.x_target_flags\n        #endif\n        #endif\n    \n        #if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)\n    \n        \/* Structure to save\/restore optimization and target specific options.  *\/\n        struct GTY(()) cl_optimization\n        {\n          int x_align_functions;\n          int x_align_jumps;\n          int x_align_labels;\n          int x_align_loops;\n          int x_flag_sched_stalled_insns;\n          int x_flag_sched_stalled_insns_dep;\n          int x_flag_tree_parallelize_loops;\n          enum fp_contract_mode x_flag_fp_contract_mode;\n          enum ira_algorithm x_flag_ira_algorithm;\n          enum ira_region x_flag_ira_region;\n          enum reorder_blocks_algorithm x_flag_reorder_blocks_algorithm;\n          enum vect_cost_model x_flag_simd_cost_model;\n          enum stack_reuse_level x_flag_stack_reuse;\n          enum vect_cost_model x_flag_vect_cost_model;\n          unsigned char x_optimize;\n          unsigned char x_optimize_size;\n          unsigned char x_optimize_debug;\n          signed char x_flag_aggressive_loop_optimizations;\n          signed char x_flag_associative_math;\n          signed char x_flag_asynchronous_unwind_tables;\n          signed char x_flag_auto_inc_dec;\n          signed char x_flag_branch_on_count_reg;\n          signed char x_flag_branch_probabilities;\n          signed char x_flag_branch_target_load_optimize;\n          signed char x_flag_branch_target_load_optimize2;\n          signed char x_flag_btr_bb_exclusive;\n          signed char x_flag_caller_saves;\n          signed char x_flag_code_hoisting;\n          signed char x_flag_combine_stack_adjustments;\n          signed char x_flag_compare_elim_after_reload;\n          signed char x_flag_conserve_stack;\n          signed char x_flag_cprop_registers;\n          signed char x_flag_crossjumping;\n          signed char x_flag_cse_follow_jumps;\n          signed char x_flag_cx_fortran_rules;\n          signed char x_flag_cx_limited_range;\n          signed char x_flag_dce;\n          signed char x_flag_defer_pop;\n          signed char x_flag_delayed_branch;\n          signed char x_flag_delete_dead_exceptions;\n          signed char x_flag_delete_null_pointer_checks;\n          signed char x_flag_devirtualize;\n          signed char x_flag_devirtualize_speculatively;\n          signed char x_flag_dse;\n          signed char x_flag_early_inlining;\n          signed char x_flag_exceptions;\n          signed char x_flag_expensive_optimizations;\n          signed char x_flag_finite_math_only;\n          signed char x_flag_float_store;\n          signed char x_flag_forward_propagate;\n          signed char x_flag_fp_int_builtin_inexact;\n          signed char x_flag_no_function_cse;\n          signed char x_flag_gcse;\n          signed char x_flag_gcse_after_reload;\n          signed char x_flag_gcse_las;\n          signed char x_flag_gcse_lm;\n          signed char x_flag_gcse_sm;\n          signed char x_flag_graphite;\n          signed char x_flag_graphite_identity;\n          signed char x_flag_guess_branch_prob;\n          signed char x_flag_hoist_adjacent_loads;\n          signed char x_flag_if_conversion;\n          signed char x_flag_if_conversion2;\n          signed char x_flag_indirect_inlining;\n          signed char x_flag_no_inline;\n          signed char x_flag_inline_atomics;\n          signed char x_flag_inline_functions;\n          signed char x_flag_inline_functions_called_once;\n          signed char x_flag_inline_small_functions;\n          signed char x_flag_ipa_bit_cp;\n          signed char x_flag_ipa_cp;\n          signed char x_flag_ipa_cp_clone;\n          signed char x_flag_ipa_icf;\n          signed char x_flag_ipa_icf_functions;\n          signed char x_flag_ipa_icf_variables;\n          signed char x_flag_ipa_profile;\n          signed char x_flag_ipa_pta;\n          signed char x_flag_ipa_pure_const;\n          signed char x_flag_ipa_ra;\n          signed char x_flag_ipa_reference;\n          signed char x_flag_ipa_sra;\n          signed char x_flag_ipa_vrp;\n          signed char x_flag_ira_hoist_pressure;\n          signed char x_flag_ira_loop_pressure;\n          signed char x_flag_ira_share_save_slots;\n          signed char x_flag_ira_share_spill_slots;\n          signed char x_flag_isolate_erroneous_paths_attribute;\n          signed char x_flag_isolate_erroneous_paths_dereference;\n          signed char x_flag_ivopts;\n          signed char x_flag_jump_tables;\n          signed char x_flag_keep_gc_roots_live;\n          signed char x_flag_lifetime_dse;\n          signed char x_flag_limit_function_alignment;\n          signed char x_flag_live_range_shrinkage;\n          signed char x_flag_loop_interchange;\n          signed char x_flag_loop_nest_optimize;\n          signed char x_flag_loop_parallelize_all;\n          signed char x_flag_unroll_jam;\n          signed char x_flag_lra_remat;\n          signed char x_flag_errno_math;\n          signed char x_flag_modulo_sched;\n          signed char x_flag_modulo_sched_allow_regmoves;\n          signed char x_flag_move_loop_invariants;\n          signed char x_flag_non_call_exceptions;\n          signed char x_flag_nothrow_opt;\n          signed char x_flag_omit_frame_pointer;\n          signed char x_flag_opt_info;\n          signed char x_flag_optimize_sibling_calls;\n          signed char x_flag_optimize_strlen;\n          signed char x_flag_pack_struct;\n          signed char x_flag_partial_inlining;\n          signed char x_flag_peel_loops;\n          signed char x_flag_no_peephole;\n          signed char x_flag_peephole2;\n          signed char x_flag_plt;\n          signed char x_flag_predictive_commoning;\n          signed char x_flag_prefetch_loop_arrays;\n          signed char x_flag_printf_return_value;\n          signed char x_flag_reciprocal_math;\n          signed char x_flag_pcc_struct_return;\n          signed char x_flag_rename_registers;\n          signed char x_flag_reorder_blocks;\n          signed char x_flag_reorder_blocks_and_partition;\n          signed char x_flag_reorder_functions;\n          signed char x_flag_rerun_cse_after_loop;\n          signed char x_flag_resched_modulo_sched;\n          signed char x_flag_rounding_math;\n          signed char x_flag_rtti;\n          signed char x_flag_sched_critical_path_heuristic;\n          signed char x_flag_sched_dep_count_heuristic;\n          signed char x_flag_sched_group_heuristic;\n          signed char x_flag_schedule_interblock;\n          signed char x_flag_sched_last_insn_heuristic;\n          signed char x_flag_sched_pressure;\n          signed char x_flag_sched_rank_heuristic;\n          signed char x_flag_schedule_speculative;\n          signed char x_flag_sched_spec_insn_heuristic;\n          signed char x_flag_schedule_speculative_load;\n          signed char x_flag_schedule_speculative_load_dangerous;\n          signed char x_flag_sched2_use_superblocks;\n          signed char x_flag_schedule_fusion;\n          signed char x_flag_schedule_insns;\n          signed char x_flag_schedule_insns_after_reload;\n          signed char x_flag_section_anchors;\n          signed char x_flag_sel_sched_pipelining;\n          signed char x_flag_sel_sched_pipelining_outer_loops;\n          signed char x_flag_sel_sched_reschedule_pipelined;\n          signed char x_flag_selective_scheduling;\n          signed char x_flag_selective_scheduling2;\n          signed char x_flag_short_enums;\n          signed char x_flag_short_wchar;\n          signed char x_flag_shrink_wrap;\n          signed char x_flag_shrink_wrap_separate;\n          signed char x_flag_signaling_nans;\n          signed char x_flag_signed_zeros;\n          signed char x_flag_single_precision_constant;\n          signed char x_flag_split_ivs_in_unroller;\n          signed char x_flag_split_loops;\n          signed char x_flag_split_paths;\n          signed char x_flag_split_wide_types;\n          signed char x_flag_ssa_backprop;\n          signed char x_flag_ssa_phiopt;\n          signed char x_flag_stack_clash_protection;\n          signed char x_flag_stack_protect;\n          signed char x_flag_stdarg_opt;\n          signed char x_flag_store_merging;\n          signed char x_flag_strict_aliasing;\n          signed char x_flag_strict_enums;\n          signed char x_flag_strict_volatile_bitfields;\n          signed char x_flag_thread_jumps;\n          signed char x_flag_threadsafe_statics;\n          signed char x_flag_tracer;\n          signed char x_flag_trapping_math;\n          signed char x_flag_trapv;\n          signed char x_flag_tree_bit_ccp;\n          signed char x_flag_tree_builtin_call_dce;\n          signed char x_flag_tree_ccp;\n          signed char x_flag_tree_ch;\n          signed char x_flag_tree_coalesce_vars;\n          signed char x_flag_tree_copy_prop;\n          signed char x_flag_tree_cselim;\n          signed char x_flag_tree_dce;\n          signed char x_flag_tree_dom;\n          signed char x_flag_tree_dse;\n          signed char x_flag_tree_forwprop;\n          signed char x_flag_tree_fre;\n          signed char x_flag_tree_loop_distribute_patterns;\n          signed char x_flag_tree_loop_distribution;\n          signed char x_flag_tree_loop_if_convert;\n          signed char x_flag_tree_loop_im;\n          signed char x_flag_tree_loop_ivcanon;\n          signed char x_flag_tree_loop_optimize;\n          signed char x_flag_tree_loop_vectorize;\n          signed char x_flag_tree_live_range_split;\n          signed char x_flag_tree_partial_pre;\n          signed char x_flag_tree_phiprop;\n          signed char x_flag_tree_pre;\n          signed char x_flag_tree_pta;\n          signed char x_flag_tree_reassoc;\n          signed char x_flag_tree_scev_cprop;\n          signed char x_flag_tree_sink;\n          signed char x_flag_tree_slp_vectorize;\n          signed char x_flag_tree_slsr;\n          signed char x_flag_tree_sra;\n          signed char x_flag_tree_switch_conversion;\n          signed char x_flag_tree_tail_merge;\n          signed char x_flag_tree_ter;\n          signed char x_flag_tree_vrp;\n          signed char x_flag_unconstrained_commons;\n          signed char x_flag_unroll_all_loops;\n          signed char x_flag_unroll_loops;\n          signed char x_flag_unsafe_math_optimizations;\n          signed char x_flag_unswitch_loops;\n          signed char x_flag_unwind_tables;\n          signed char x_flag_var_tracking;\n          signed char x_flag_var_tracking_assignments;\n          signed char x_flag_var_tracking_assignments_toggle;\n          signed char x_flag_var_tracking_uninit;\n          signed char x_flag_variable_expansion_in_unroller;\n          signed char x_flag_value_profile_transformations;\n          signed char x_flag_web;\n          signed char x_flag_wrapv;\n        };\n    \n        \/* Structure to save\/restore selected target specific options.  *\/\n        struct GTY(()) cl_target_option\n        {\n          HOST_WIDE_INT x_ix86_isa_flags2_explicit;\n          HOST_WIDE_INT x_ix86_isa_flags_explicit;\n          const char *x_ix86_arch_string;\n          const char *x_ix86_recip_name;\n          const char *x_ix86_tune_ctrl_string;\n          const char *x_ix86_tune_memcpy_strategy;\n          const char *x_ix86_tune_memset_strategy;\n          const char *x_ix86_tune_string;\n          HOST_WIDE_INT x_ix86_stack_protector_guard_offset;\n          addr_space_t x_ix86_stack_protector_guard_reg;\n          HOST_WIDE_INT x_ix86_isa_flags;\n          HOST_WIDE_INT x_ix86_isa_flags2;\n          enum fpmath_unit x_ix86_fpmath;\n          enum asm_dialect x_ix86_asm_dialect;\n          enum calling_abi x_ix86_abi;\n          enum cmodel x_ix86_cmodel;\n          enum ix86_veclibabi x_ix86_veclibabi_type;\n          enum pmode x_ix86_pmode;\n          enum prefer_vector_width x_prefer_vector_width_type;\n          enum stack_protector_guard x_ix86_stack_protector_guard;\n          enum stringop_alg x_ix86_stringop_alg;\n          enum tls_dialect x_ix86_tls_dialect;\n          int x_ix86_branch_cost;\n          int x_ix86_dump_tunes;\n          int x_ix86_force_align_arg_pointer;\n          int x_ix86_force_drap;\n          int x_ix86_incoming_stack_boundary_arg;\n          int x_ix86_preferred_stack_boundary_arg;\n          int x_ix86_regparm;\n          int x_ix86_section_threshold;\n          int x_ix86_sse2avx;\n          int x_ix86_tune_no_default;\n          int x_recip_mask_explicit;\n          int x_recip_mask;\n          int x_target_flags;\n          int x_ix86_target_flags;\n          unsigned char arch;\n          unsigned char arch_specified;\n          unsigned char branch_cost;\n          unsigned char prefetch_sse;\n          unsigned char schedule;\n          unsigned char tune;\n          unsigned char tune_defaulted;\n        };\n    \n    \n        \/* Save optimization variables into a structure.  *\/\n        extern void cl_optimization_save (struct cl_optimization *, struct gcc_options *);\n    \n        \/* Restore optimization variables from a structure.  *\/\n        extern void cl_optimization_restore (struct gcc_options *, struct cl_optimization *);\n    \n        \/* Print optimization variables from a structure.  *\/\n        extern void cl_optimization_print (FILE *, int, struct cl_optimization *);\n    \n        \/* Print different optimization variables from structures provided as arguments.  *\/\n        extern void cl_optimization_print_diff (FILE *, int, cl_optimization *ptr1, cl_optimization *ptr2);\n    \n        \/* Save selected option variables into a structure.  *\/\n        extern void cl_target_option_save (struct cl_target_option *, struct gcc_options *);\n    \n        \/* Restore selected option variables from a structure.  *\/\n        extern void cl_target_option_restore (struct gcc_options *, struct cl_target_option *);\n    \n        \/* Print target option variables from a structure.  *\/\n        extern void cl_target_option_print (FILE *, int, struct cl_target_option *);\n    \n        \/* Print different target option variables from structures provided as arguments.  *\/\n        extern void cl_target_option_print_diff (FILE *, int, cl_target_option *ptr1, cl_target_option *ptr2);\n    \n        \/* Compare two target option variables from a structure.  *\/\n        extern bool cl_target_option_eq (const struct cl_target_option *, const struct cl_target_option *);\n    \n        \/* Hash option variables from a structure.  *\/\n        extern hashval_t cl_target_option_hash (const struct cl_target_option *);\n    \n        \/* Hash optimization from a structure.  *\/\n        extern hashval_t cl_optimization_hash (const struct cl_optimization *);\n    \n        \/* Generator files may not have access to location_t, and don't need these.  *\/\n        #if defined(UNKNOWN_LOCATION)\n        bool\n        common_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   const struct cl_decoded_option *decoded,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        Ada_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        AdaSCIL_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        AdaWhy_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        BRIG_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        C_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        CXX_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        Fortran_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        Go_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        LTO_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        ObjC_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        bool\n        ObjCXX_handle_option_auto (struct gcc_options *opts,\n                                   struct gcc_options *opts_set,\n                                   size_t scode, const char *arg, int value,\n                                   unsigned int lang_mask, int kind,\n                                   location_t loc,\n                                   const struct cl_option_handlers *handlers,\n                                   diagnostic_context *dc);\n        void cpp_handle_option_auto (const struct gcc_options * opts, size_t scode,\n                                     struct cpp_options * cpp_opts);\n        void init_global_opts_from_cpp(struct gcc_options * opts,\n                                       const struct cpp_options * cpp_opts);\n        #endif\n        #endif\n    \n        #define MASK_128BIT_LONG_DOUBLE (1U << 0)\n        #define OPTION_MASK_CODE16 (HOST_WIDE_INT_1U << 0)\n        #define OPTION_MASK_ISA_64BIT (HOST_WIDE_INT_1U << 1)\n        #define OPTION_MASK_ISA_3DNOW (HOST_WIDE_INT_1U << 2)\n        #define OPTION_MASK_ISA_3DNOW_A (HOST_WIDE_INT_1U << 3)\n        #define OPTION_MASK_ABI_64 (HOST_WIDE_INT_1U << 4)\n        #define MASK_80387 (1U << 1)\n        #define MASK_USE_8BIT_IDIV (1U << 2)\n        #define OPTION_MASK_ISA_ABM (HOST_WIDE_INT_1U << 5)\n        #define MASK_ACCUMULATE_OUTGOING_ARGS (1U << 3)\n        #define OPTION_MASK_ISA_ADX (HOST_WIDE_INT_1U << 6)\n        #define OPTION_MASK_ISA_AES (HOST_WIDE_INT_1U << 7)\n        #define MASK_ALIGN_DOUBLE (1U << 4)\n        #define MASK_NO_ALIGN_STRINGOPS (1U << 5)\n        #define OPTION_MASK_ANDROID (1U << 0)\n        #define OPTION_MASK_ISA_AVX (HOST_WIDE_INT_1U << 8)\n        #define OPTION_MASK_ISA_AVX2 (HOST_WIDE_INT_1U << 9)\n        #define MASK_AVX256_SPLIT_UNALIGNED_LOAD (1U << 6)\n        #define MASK_AVX256_SPLIT_UNALIGNED_STORE (1U << 7)\n        #define OPTION_MASK_ISA_AVX5124FMAPS (HOST_WIDE_INT_1U << 0)\n        #define OPTION_MASK_ISA_AVX5124VNNIW (HOST_WIDE_INT_1U << 1)\n        #define OPTION_MASK_ISA_AVX512BITALG (HOST_WIDE_INT_1U << 10)\n        #define OPTION_MASK_ISA_AVX512BW (HOST_WIDE_INT_1U << 11)\n        #define OPTION_MASK_ISA_AVX512CD (HOST_WIDE_INT_1U << 12)\n        #define OPTION_MASK_ISA_AVX512DQ (HOST_WIDE_INT_1U << 13)\n        #define OPTION_MASK_ISA_AVX512ER (HOST_WIDE_INT_1U << 14)\n        #define OPTION_MASK_ISA_AVX512F (HOST_WIDE_INT_1U << 15)\n        #define OPTION_MASK_ISA_AVX512IFMA (HOST_WIDE_INT_1U << 16)\n        #define OPTION_MASK_ISA_AVX512PF (HOST_WIDE_INT_1U << 17)\n        #define OPTION_MASK_ISA_AVX512VBMI (HOST_WIDE_INT_1U << 18)\n        #define OPTION_MASK_ISA_AVX512VBMI2 (HOST_WIDE_INT_1U << 19)\n        #define OPTION_MASK_ISA_AVX512VL (HOST_WIDE_INT_1U << 20)\n        #define OPTION_MASK_ISA_AVX512VNNI (HOST_WIDE_INT_1U << 21)\n        #define OPTION_MASK_ISA_AVX512VPOPCNTDQ (HOST_WIDE_INT_1U << 22)\n        #define OPTION_MASK_ISA_BMI (HOST_WIDE_INT_1U << 23)\n        #define OPTION_MASK_ISA_BMI2 (HOST_WIDE_INT_1U << 24)\n        #define MASK_CALL_MS2SYSV_XLOGUES (1U << 8)\n        #define MASK_CLD (1U << 9)\n        #define OPTION_MASK_ISA_CLFLUSHOPT (HOST_WIDE_INT_1U << 25)\n        #define OPTION_MASK_ISA_CLWB (HOST_WIDE_INT_1U << 26)\n        #define OPTION_MASK_ISA_CLZERO (HOST_WIDE_INT_1U << 2)\n        #define OPTION_MASK_ISA_CRC32 (HOST_WIDE_INT_1U << 27)\n        #define OPTION_MASK_ISA_CX16 (HOST_WIDE_INT_1U << 3)\n        #define OPTION_MASK_ISA_F16C (HOST_WIDE_INT_1U << 28)\n        #define MASK_NO_FANCY_MATH_387 (1U << 10)\n        #define OPTION_MASK_ISA_FMA (HOST_WIDE_INT_1U << 29)\n        #define OPTION_MASK_ISA_FMA4 (HOST_WIDE_INT_1U << 30)\n        #define MASK_FLOAT_RETURNS (1U << 11)\n        #define OPTION_MASK_ISA_FSGSBASE (HOST_WIDE_INT_1U << 31)\n        #define OPTION_MASK_ISA_FXSR (HOST_WIDE_INT_1U << 32)\n        #define OPTION_MASK_GENERAL_REGS_ONLY (1U << 0)\n        #define OPTION_MASK_ISA_GFNI (HOST_WIDE_INT_1U << 33)\n        #define OPTION_MASK_ISA_HLE (HOST_WIDE_INT_1U << 4)\n        #define MASK_IAMCU (1U << 12)\n        #define OPTION_MASK_ISA_IBT (HOST_WIDE_INT_1U << 5)\n        #define MASK_IEEE_FP (1U << 13)\n        #define MASK_INLINE_ALL_STRINGOPS (1U << 14)\n        #define MASK_INLINE_STRINGOPS_DYNAMICALLY (1U << 15)\n        #define MASK_LONG_DOUBLE_128 (1U << 16)\n        #define MASK_LONG_DOUBLE_64 (1U << 17)\n        #define OPTION_MASK_ISA_LWP (HOST_WIDE_INT_1U << 34)\n        #define OPTION_MASK_ISA_LZCNT (HOST_WIDE_INT_1U << 35)\n        #define OPTION_MASK_ISA_MMX (HOST_WIDE_INT_1U << 36)\n        #define OPTION_MASK_ISA_MOVBE (HOST_WIDE_INT_1U << 6)\n        #define OPTION_MASK_ISA_MPX (HOST_WIDE_INT_1U << 7)\n        #define MASK_MS_BITFIELD_LAYOUT (1U << 18)\n        #define OPTION_MASK_ISA_MWAITX (HOST_WIDE_INT_1U << 8)\n        #define MASK_NO_PUSH_ARGS (1U << 19)\n        #define MASK_NO_RED_ZONE (1U << 20)\n        #define OPTION_MASK_ISA_SSE4_1 (HOST_WIDE_INT_1U << 37)\n        #define MASK_OMIT_LEAF_FRAME_POINTER (1U << 21)\n        #define OPTION_MASK_ISA_PCLMUL (HOST_WIDE_INT_1U << 38)\n        #define OPTION_MASK_ISA_PKU (HOST_WIDE_INT_1U << 39)\n        #define OPTION_MASK_ISA_POPCNT (HOST_WIDE_INT_1U << 40)\n        #define OPTION_MASK_ISA_PREFETCHWT1 (HOST_WIDE_INT_1U << 41)\n        #define OPTION_MASK_ISA_PRFCHW (HOST_WIDE_INT_1U << 42)\n        #define OPTION_MASK_ISA_RDPID (HOST_WIDE_INT_1U << 9)\n        #define OPTION_MASK_ISA_RDRND (HOST_WIDE_INT_1U << 43)\n        #define OPTION_MASK_ISA_RDSEED (HOST_WIDE_INT_1U << 44)\n        #define MASK_RECIP (1U << 22)\n        #define MASK_RTD (1U << 23)\n        #define OPTION_MASK_ISA_RTM (HOST_WIDE_INT_1U << 45)\n        #define OPTION_MASK_ISA_SAHF (HOST_WIDE_INT_1U << 46)\n        #define OPTION_MASK_ISA_SGX (HOST_WIDE_INT_1U << 10)\n        #define OPTION_MASK_ISA_SHA (HOST_WIDE_INT_1U << 47)\n        #define OPTION_MASK_ISA_SHSTK (HOST_WIDE_INT_1U << 48)\n        #define OPTION_MASK_ISA_SSE (HOST_WIDE_INT_1U << 49)\n        #define OPTION_MASK_ISA_SSE2 (HOST_WIDE_INT_1U << 50)\n        #define OPTION_MASK_ISA_SSE3 (HOST_WIDE_INT_1U << 51)\n        #define OPTION_MASK_ISA_SSE4_2 (HOST_WIDE_INT_1U << 52)\n        #define OPTION_MASK_ISA_SSE4A (HOST_WIDE_INT_1U << 53)\n        #define MASK_SSEREGPARM (1U << 24)\n        #define OPTION_MASK_ISA_SSSE3 (HOST_WIDE_INT_1U << 54)\n        #define MASK_STACK_PROBE (1U << 25)\n        #define MASK_STV (1U << 26)\n        #define OPTION_MASK_ISA_TBM (HOST_WIDE_INT_1U << 55)\n        #define MASK_TLS_DIRECT_SEG_REFS (1U << 27)\n        #define OPTION_MASK_ISA_VAES (HOST_WIDE_INT_1U << 11)\n        #define MASK_VECT8_RETURNS (1U << 28)\n        #define OPTION_MASK_ISA_VPCLMULQDQ (HOST_WIDE_INT_1U << 56)\n        #define MASK_VZEROUPPER (1U << 29)\n        #define OPTION_MASK_ABI_X32 (HOST_WIDE_INT_1U << 57)\n        #define OPTION_MASK_ISA_XOP (HOST_WIDE_INT_1U << 58)\n        #define OPTION_MASK_ISA_XSAVE (HOST_WIDE_INT_1U << 59)\n        #define OPTION_MASK_ISA_XSAVEC (HOST_WIDE_INT_1U << 60)\n        #define OPTION_MASK_ISA_XSAVEOPT (HOST_WIDE_INT_1U << 61)\n        #define OPTION_MASK_ISA_XSAVES (HOST_WIDE_INT_1U << 62)\n        #if defined(HOST_BITS_PER_WIDE_INT) && 12 > HOST_BITS_PER_WIDE_INT\n        #error too many masks for ix86_isa_flags2\n        #endif\n        #if defined(HOST_BITS_PER_WIDE_INT) && 63 > HOST_BITS_PER_WIDE_INT\n        #error too many masks for ix86_isa_flags\n        #endif\n    \n        #define TARGET_128BIT_LONG_DOUBLE ((target_flags & MASK_128BIT_LONG_DOUBLE) != 0)\n        #define TARGET_128BIT_LONG_DOUBLE_P(target_flags) (((target_flags) & MASK_128BIT_LONG_DOUBLE) != 0)\n        #define TARGET_CODE16 ((ix86_isa_flags & OPTION_MASK_CODE16) != 0)\n        #define TARGET_CODE16_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_CODE16) != 0)\n        #define TARGET_ISA_64BIT ((ix86_isa_flags & OPTION_MASK_ISA_64BIT) != 0)\n        #define TARGET_ISA_64BIT_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_64BIT) != 0)\n        #define TARGET_ISA_3DNOW ((ix86_isa_flags & OPTION_MASK_ISA_3DNOW) != 0)\n        #define TARGET_ISA_3DNOW_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_3DNOW) != 0)\n        #define TARGET_ISA_3DNOW_A ((ix86_isa_flags & OPTION_MASK_ISA_3DNOW_A) != 0)\n        #define TARGET_ISA_3DNOW_A_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_3DNOW_A) != 0)\n        #define TARGET_ABI_64 ((ix86_isa_flags & OPTION_MASK_ABI_64) != 0)\n        #define TARGET_ABI_64_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ABI_64) != 0)\n        #define TARGET_80387 ((target_flags & MASK_80387) != 0)\n        #define TARGET_80387_P(target_flags) (((target_flags) & MASK_80387) != 0)\n        #define TARGET_USE_8BIT_IDIV ((target_flags & MASK_USE_8BIT_IDIV) != 0)\n        #define TARGET_USE_8BIT_IDIV_P(target_flags) (((target_flags) & MASK_USE_8BIT_IDIV) != 0)\n        #define TARGET_ISA_ABM ((ix86_isa_flags & OPTION_MASK_ISA_ABM) != 0)\n        #define TARGET_ISA_ABM_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_ABM) != 0)\n        #define TARGET_ACCUMULATE_OUTGOING_ARGS ((target_flags & MASK_ACCUMULATE_OUTGOING_ARGS) != 0)\n        #define TARGET_ACCUMULATE_OUTGOING_ARGS_P(target_flags) (((target_flags) & MASK_ACCUMULATE_OUTGOING_ARGS) != 0)\n        #define TARGET_ISA_ADX ((ix86_isa_flags & OPTION_MASK_ISA_ADX) != 0)\n        #define TARGET_ISA_ADX_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_ADX) != 0)\n        #define TARGET_ISA_AES ((ix86_isa_flags & OPTION_MASK_ISA_AES) != 0)\n        #define TARGET_ISA_AES_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AES) != 0)\n        #define TARGET_ALIGN_DOUBLE ((target_flags & MASK_ALIGN_DOUBLE) != 0)\n        #define TARGET_ALIGN_DOUBLE_P(target_flags) (((target_flags) & MASK_ALIGN_DOUBLE) != 0)\n        #define TARGET_NO_ALIGN_STRINGOPS ((target_flags & MASK_NO_ALIGN_STRINGOPS) != 0)\n        #define TARGET_NO_ALIGN_STRINGOPS_P(target_flags) (((target_flags) & MASK_NO_ALIGN_STRINGOPS) != 0)\n        #define TARGET_ANDROID ((flag_android & OPTION_MASK_ANDROID) != 0)\n        #define TARGET_ANDROID_P(flag_android) (((flag_android) & OPTION_MASK_ANDROID) != 0)\n        #define TARGET_ISA_AVX ((ix86_isa_flags & OPTION_MASK_ISA_AVX) != 0)\n        #define TARGET_ISA_AVX_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX) != 0)\n        #define TARGET_ISA_AVX2 ((ix86_isa_flags & OPTION_MASK_ISA_AVX2) != 0)\n        #define TARGET_ISA_AVX2_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX2) != 0)\n        #define TARGET_AVX256_SPLIT_UNALIGNED_LOAD ((target_flags & MASK_AVX256_SPLIT_UNALIGNED_LOAD) != 0)\n        #define TARGET_AVX256_SPLIT_UNALIGNED_LOAD_P(target_flags) (((target_flags) & MASK_AVX256_SPLIT_UNALIGNED_LOAD) != 0)\n        #define TARGET_AVX256_SPLIT_UNALIGNED_STORE ((target_flags & MASK_AVX256_SPLIT_UNALIGNED_STORE) != 0)\n        #define TARGET_AVX256_SPLIT_UNALIGNED_STORE_P(target_flags) (((target_flags) & MASK_AVX256_SPLIT_UNALIGNED_STORE) != 0)\n        #define TARGET_ISA_AVX5124FMAPS ((ix86_isa_flags2 & OPTION_MASK_ISA_AVX5124FMAPS) != 0)\n        #define TARGET_ISA_AVX5124FMAPS_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_AVX5124FMAPS) != 0)\n        #define TARGET_ISA_AVX5124VNNIW ((ix86_isa_flags2 & OPTION_MASK_ISA_AVX5124VNNIW) != 0)\n        #define TARGET_ISA_AVX5124VNNIW_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_AVX5124VNNIW) != 0)\n        #define TARGET_ISA_AVX512BITALG ((ix86_isa_flags & OPTION_MASK_ISA_AVX512BITALG) != 0)\n        #define TARGET_ISA_AVX512BITALG_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512BITALG) != 0)\n        #define TARGET_ISA_AVX512BW ((ix86_isa_flags & OPTION_MASK_ISA_AVX512BW) != 0)\n        #define TARGET_ISA_AVX512BW_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512BW) != 0)\n        #define TARGET_ISA_AVX512CD ((ix86_isa_flags & OPTION_MASK_ISA_AVX512CD) != 0)\n        #define TARGET_ISA_AVX512CD_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512CD) != 0)\n        #define TARGET_ISA_AVX512DQ ((ix86_isa_flags & OPTION_MASK_ISA_AVX512DQ) != 0)\n        #define TARGET_ISA_AVX512DQ_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512DQ) != 0)\n        #define TARGET_ISA_AVX512ER ((ix86_isa_flags & OPTION_MASK_ISA_AVX512ER) != 0)\n        #define TARGET_ISA_AVX512ER_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512ER) != 0)\n        #define TARGET_ISA_AVX512F ((ix86_isa_flags & OPTION_MASK_ISA_AVX512F) != 0)\n        #define TARGET_ISA_AVX512F_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512F) != 0)\n        #define TARGET_ISA_AVX512IFMA ((ix86_isa_flags & OPTION_MASK_ISA_AVX512IFMA) != 0)\n        #define TARGET_ISA_AVX512IFMA_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512IFMA) != 0)\n        #define TARGET_ISA_AVX512PF ((ix86_isa_flags & OPTION_MASK_ISA_AVX512PF) != 0)\n        #define TARGET_ISA_AVX512PF_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512PF) != 0)\n        #define TARGET_ISA_AVX512VBMI ((ix86_isa_flags & OPTION_MASK_ISA_AVX512VBMI) != 0)\n        #define TARGET_ISA_AVX512VBMI_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512VBMI) != 0)\n        #define TARGET_ISA_AVX512VBMI2 ((ix86_isa_flags & OPTION_MASK_ISA_AVX512VBMI2) != 0)\n        #define TARGET_ISA_AVX512VBMI2_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512VBMI2) != 0)\n        #define TARGET_ISA_AVX512VL ((ix86_isa_flags & OPTION_MASK_ISA_AVX512VL) != 0)\n        #define TARGET_ISA_AVX512VL_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512VL) != 0)\n        #define TARGET_ISA_AVX512VNNI ((ix86_isa_flags & OPTION_MASK_ISA_AVX512VNNI) != 0)\n        #define TARGET_ISA_AVX512VNNI_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512VNNI) != 0)\n        #define TARGET_ISA_AVX512VPOPCNTDQ ((ix86_isa_flags & OPTION_MASK_ISA_AVX512VPOPCNTDQ) != 0)\n        #define TARGET_ISA_AVX512VPOPCNTDQ_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_AVX512VPOPCNTDQ) != 0)\n        #define TARGET_ISA_BMI ((ix86_isa_flags & OPTION_MASK_ISA_BMI) != 0)\n        #define TARGET_ISA_BMI_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_BMI) != 0)\n        #define TARGET_ISA_BMI2 ((ix86_isa_flags & OPTION_MASK_ISA_BMI2) != 0)\n        #define TARGET_ISA_BMI2_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_BMI2) != 0)\n        #define TARGET_CALL_MS2SYSV_XLOGUES ((target_flags & MASK_CALL_MS2SYSV_XLOGUES) != 0)\n        #define TARGET_CALL_MS2SYSV_XLOGUES_P(target_flags) (((target_flags) & MASK_CALL_MS2SYSV_XLOGUES) != 0)\n        #define TARGET_CLD ((target_flags & MASK_CLD) != 0)\n        #define TARGET_CLD_P(target_flags) (((target_flags) & MASK_CLD) != 0)\n        #define TARGET_ISA_CLFLUSHOPT ((ix86_isa_flags & OPTION_MASK_ISA_CLFLUSHOPT) != 0)\n        #define TARGET_ISA_CLFLUSHOPT_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_CLFLUSHOPT) != 0)\n        #define TARGET_ISA_CLWB ((ix86_isa_flags & OPTION_MASK_ISA_CLWB) != 0)\n        #define TARGET_ISA_CLWB_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_CLWB) != 0)\n        #define TARGET_ISA_CLZERO ((ix86_isa_flags2 & OPTION_MASK_ISA_CLZERO) != 0)\n        #define TARGET_ISA_CLZERO_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_CLZERO) != 0)\n        #define TARGET_ISA_CRC32 ((ix86_isa_flags & OPTION_MASK_ISA_CRC32) != 0)\n        #define TARGET_ISA_CRC32_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_CRC32) != 0)\n        #define TARGET_ISA_CX16 ((ix86_isa_flags2 & OPTION_MASK_ISA_CX16) != 0)\n        #define TARGET_ISA_CX16_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_CX16) != 0)\n        #define TARGET_ISA_F16C ((ix86_isa_flags & OPTION_MASK_ISA_F16C) != 0)\n        #define TARGET_ISA_F16C_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_F16C) != 0)\n        #define TARGET_NO_FANCY_MATH_387 ((target_flags & MASK_NO_FANCY_MATH_387) != 0)\n        #define TARGET_NO_FANCY_MATH_387_P(target_flags) (((target_flags) & MASK_NO_FANCY_MATH_387) != 0)\n        #define TARGET_ISA_FMA ((ix86_isa_flags & OPTION_MASK_ISA_FMA) != 0)\n        #define TARGET_ISA_FMA_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_FMA) != 0)\n        #define TARGET_ISA_FMA4 ((ix86_isa_flags & OPTION_MASK_ISA_FMA4) != 0)\n        #define TARGET_ISA_FMA4_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_FMA4) != 0)\n        #define TARGET_FLOAT_RETURNS ((target_flags & MASK_FLOAT_RETURNS) != 0)\n        #define TARGET_FLOAT_RETURNS_P(target_flags) (((target_flags) & MASK_FLOAT_RETURNS) != 0)\n        #define TARGET_ISA_FSGSBASE ((ix86_isa_flags & OPTION_MASK_ISA_FSGSBASE) != 0)\n        #define TARGET_ISA_FSGSBASE_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_FSGSBASE) != 0)\n        #define TARGET_ISA_FXSR ((ix86_isa_flags & OPTION_MASK_ISA_FXSR) != 0)\n        #define TARGET_ISA_FXSR_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_FXSR) != 0)\n        #define TARGET_GENERAL_REGS_ONLY ((ix86_target_flags & OPTION_MASK_GENERAL_REGS_ONLY) != 0)\n        #define TARGET_GENERAL_REGS_ONLY_P(ix86_target_flags) (((ix86_target_flags) & OPTION_MASK_GENERAL_REGS_ONLY) != 0)\n        #define TARGET_ISA_GFNI ((ix86_isa_flags & OPTION_MASK_ISA_GFNI) != 0)\n        #define TARGET_ISA_GFNI_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_GFNI) != 0)\n        #define TARGET_ISA_HLE ((ix86_isa_flags2 & OPTION_MASK_ISA_HLE) != 0)\n        #define TARGET_ISA_HLE_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_HLE) != 0)\n        #define TARGET_IAMCU ((target_flags & MASK_IAMCU) != 0)\n        #define TARGET_IAMCU_P(target_flags) (((target_flags) & MASK_IAMCU) != 0)\n        #define TARGET_ISA_IBT ((ix86_isa_flags2 & OPTION_MASK_ISA_IBT) != 0)\n        #define TARGET_ISA_IBT_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_IBT) != 0)\n        #define TARGET_IEEE_FP ((target_flags & MASK_IEEE_FP) != 0)\n        #define TARGET_IEEE_FP_P(target_flags) (((target_flags) & MASK_IEEE_FP) != 0)\n        #define TARGET_INLINE_ALL_STRINGOPS ((target_flags & MASK_INLINE_ALL_STRINGOPS) != 0)\n        #define TARGET_INLINE_ALL_STRINGOPS_P(target_flags) (((target_flags) & MASK_INLINE_ALL_STRINGOPS) != 0)\n        #define TARGET_INLINE_STRINGOPS_DYNAMICALLY ((target_flags & MASK_INLINE_STRINGOPS_DYNAMICALLY) != 0)\n        #define TARGET_INLINE_STRINGOPS_DYNAMICALLY_P(target_flags) (((target_flags) & MASK_INLINE_STRINGOPS_DYNAMICALLY) != 0)\n        #define TARGET_LONG_DOUBLE_128 ((target_flags & MASK_LONG_DOUBLE_128) != 0)\n        #define TARGET_LONG_DOUBLE_128_P(target_flags) (((target_flags) & MASK_LONG_DOUBLE_128) != 0)\n        #define TARGET_LONG_DOUBLE_64 ((target_flags & MASK_LONG_DOUBLE_64) != 0)\n        #define TARGET_LONG_DOUBLE_64_P(target_flags) (((target_flags) & MASK_LONG_DOUBLE_64) != 0)\n        #define TARGET_ISA_LWP ((ix86_isa_flags & OPTION_MASK_ISA_LWP) != 0)\n        #define TARGET_ISA_LWP_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_LWP) != 0)\n        #define TARGET_ISA_LZCNT ((ix86_isa_flags & OPTION_MASK_ISA_LZCNT) != 0)\n        #define TARGET_ISA_LZCNT_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_LZCNT) != 0)\n        #define TARGET_ISA_MMX ((ix86_isa_flags & OPTION_MASK_ISA_MMX) != 0)\n        #define TARGET_ISA_MMX_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_MMX) != 0)\n        #define TARGET_ISA_MOVBE ((ix86_isa_flags2 & OPTION_MASK_ISA_MOVBE) != 0)\n        #define TARGET_ISA_MOVBE_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_MOVBE) != 0)\n        #define TARGET_ISA_MPX ((ix86_isa_flags2 & OPTION_MASK_ISA_MPX) != 0)\n        #define TARGET_ISA_MPX_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_MPX) != 0)\n        #define TARGET_MS_BITFIELD_LAYOUT ((target_flags & MASK_MS_BITFIELD_LAYOUT) != 0)\n        #define TARGET_MS_BITFIELD_LAYOUT_P(target_flags) (((target_flags) & MASK_MS_BITFIELD_LAYOUT) != 0)\n        #define TARGET_ISA_MWAITX ((ix86_isa_flags2 & OPTION_MASK_ISA_MWAITX) != 0)\n        #define TARGET_ISA_MWAITX_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_MWAITX) != 0)\n        #define TARGET_NO_PUSH_ARGS ((target_flags & MASK_NO_PUSH_ARGS) != 0)\n        #define TARGET_NO_PUSH_ARGS_P(target_flags) (((target_flags) & MASK_NO_PUSH_ARGS) != 0)\n        #define TARGET_NO_RED_ZONE ((target_flags & MASK_NO_RED_ZONE) != 0)\n        #define TARGET_NO_RED_ZONE_P(target_flags) (((target_flags) & MASK_NO_RED_ZONE) != 0)\n        #define TARGET_ISA_SSE4_1 ((ix86_isa_flags & OPTION_MASK_ISA_SSE4_1) != 0)\n        #define TARGET_ISA_SSE4_1_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SSE4_1) != 0)\n        #define TARGET_OMIT_LEAF_FRAME_POINTER ((target_flags & MASK_OMIT_LEAF_FRAME_POINTER) != 0)\n        #define TARGET_OMIT_LEAF_FRAME_POINTER_P(target_flags) (((target_flags) & MASK_OMIT_LEAF_FRAME_POINTER) != 0)\n        #define TARGET_ISA_PCLMUL ((ix86_isa_flags & OPTION_MASK_ISA_PCLMUL) != 0)\n        #define TARGET_ISA_PCLMUL_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_PCLMUL) != 0)\n        #define TARGET_ISA_PKU ((ix86_isa_flags & OPTION_MASK_ISA_PKU) != 0)\n        #define TARGET_ISA_PKU_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_PKU) != 0)\n        #define TARGET_ISA_POPCNT ((ix86_isa_flags & OPTION_MASK_ISA_POPCNT) != 0)\n        #define TARGET_ISA_POPCNT_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_POPCNT) != 0)\n        #define TARGET_ISA_PREFETCHWT1 ((ix86_isa_flags & OPTION_MASK_ISA_PREFETCHWT1) != 0)\n        #define TARGET_ISA_PREFETCHWT1_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_PREFETCHWT1) != 0)\n        #define TARGET_ISA_PRFCHW ((ix86_isa_flags & OPTION_MASK_ISA_PRFCHW) != 0)\n        #define TARGET_ISA_PRFCHW_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_PRFCHW) != 0)\n        #define TARGET_ISA_RDPID ((ix86_isa_flags2 & OPTION_MASK_ISA_RDPID) != 0)\n        #define TARGET_ISA_RDPID_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_RDPID) != 0)\n        #define TARGET_ISA_RDRND ((ix86_isa_flags & OPTION_MASK_ISA_RDRND) != 0)\n        #define TARGET_ISA_RDRND_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_RDRND) != 0)\n        #define TARGET_ISA_RDSEED ((ix86_isa_flags & OPTION_MASK_ISA_RDSEED) != 0)\n        #define TARGET_ISA_RDSEED_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_RDSEED) != 0)\n        #define TARGET_RECIP ((target_flags & MASK_RECIP) != 0)\n        #define TARGET_RECIP_P(target_flags) (((target_flags) & MASK_RECIP) != 0)\n        #define TARGET_RTD ((target_flags & MASK_RTD) != 0)\n        #define TARGET_RTD_P(target_flags) (((target_flags) & MASK_RTD) != 0)\n        #define TARGET_ISA_RTM ((ix86_isa_flags & OPTION_MASK_ISA_RTM) != 0)\n        #define TARGET_ISA_RTM_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_RTM) != 0)\n        #define TARGET_ISA_SAHF ((ix86_isa_flags & OPTION_MASK_ISA_SAHF) != 0)\n        #define TARGET_ISA_SAHF_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SAHF) != 0)\n        #define TARGET_ISA_SGX ((ix86_isa_flags2 & OPTION_MASK_ISA_SGX) != 0)\n        #define TARGET_ISA_SGX_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_SGX) != 0)\n        #define TARGET_ISA_SHA ((ix86_isa_flags & OPTION_MASK_ISA_SHA) != 0)\n        #define TARGET_ISA_SHA_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SHA) != 0)\n        #define TARGET_ISA_SHSTK ((ix86_isa_flags & OPTION_MASK_ISA_SHSTK) != 0)\n        #define TARGET_ISA_SHSTK_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SHSTK) != 0)\n        #define TARGET_ISA_SSE ((ix86_isa_flags & OPTION_MASK_ISA_SSE) != 0)\n        #define TARGET_ISA_SSE_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SSE) != 0)\n        #define TARGET_ISA_SSE2 ((ix86_isa_flags & OPTION_MASK_ISA_SSE2) != 0)\n        #define TARGET_ISA_SSE2_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SSE2) != 0)\n        #define TARGET_ISA_SSE3 ((ix86_isa_flags & OPTION_MASK_ISA_SSE3) != 0)\n        #define TARGET_ISA_SSE3_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SSE3) != 0)\n        #define TARGET_ISA_SSE4_2 ((ix86_isa_flags & OPTION_MASK_ISA_SSE4_2) != 0)\n        #define TARGET_ISA_SSE4_2_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SSE4_2) != 0)\n        #define TARGET_ISA_SSE4A ((ix86_isa_flags & OPTION_MASK_ISA_SSE4A) != 0)\n        #define TARGET_ISA_SSE4A_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SSE4A) != 0)\n        #define TARGET_SSEREGPARM ((target_flags & MASK_SSEREGPARM) != 0)\n        #define TARGET_SSEREGPARM_P(target_flags) (((target_flags) & MASK_SSEREGPARM) != 0)\n        #define TARGET_ISA_SSSE3 ((ix86_isa_flags & OPTION_MASK_ISA_SSSE3) != 0)\n        #define TARGET_ISA_SSSE3_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_SSSE3) != 0)\n        #define TARGET_STACK_PROBE ((target_flags & MASK_STACK_PROBE) != 0)\n        #define TARGET_STACK_PROBE_P(target_flags) (((target_flags) & MASK_STACK_PROBE) != 0)\n        #define TARGET_STV ((target_flags & MASK_STV) != 0)\n        #define TARGET_STV_P(target_flags) (((target_flags) & MASK_STV) != 0)\n        #define TARGET_ISA_TBM ((ix86_isa_flags & OPTION_MASK_ISA_TBM) != 0)\n        #define TARGET_ISA_TBM_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_TBM) != 0)\n        #define TARGET_TLS_DIRECT_SEG_REFS ((target_flags & MASK_TLS_DIRECT_SEG_REFS) != 0)\n        #define TARGET_TLS_DIRECT_SEG_REFS_P(target_flags) (((target_flags) & MASK_TLS_DIRECT_SEG_REFS) != 0)\n        #define TARGET_ISA_VAES ((ix86_isa_flags2 & OPTION_MASK_ISA_VAES) != 0)\n        #define TARGET_ISA_VAES_P(ix86_isa_flags2) (((ix86_isa_flags2) & OPTION_MASK_ISA_VAES) != 0)\n        #define TARGET_VECT8_RETURNS ((target_flags & MASK_VECT8_RETURNS) != 0)\n        #define TARGET_VECT8_RETURNS_P(target_flags) (((target_flags) & MASK_VECT8_RETURNS) != 0)\n        #define TARGET_ISA_VPCLMULQDQ ((ix86_isa_flags & OPTION_MASK_ISA_VPCLMULQDQ) != 0)\n        #define TARGET_ISA_VPCLMULQDQ_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_VPCLMULQDQ) != 0)\n        #define TARGET_VZEROUPPER ((target_flags & MASK_VZEROUPPER) != 0)\n        #define TARGET_VZEROUPPER_P(target_flags) (((target_flags) & MASK_VZEROUPPER) != 0)\n        #define TARGET_ABI_X32 ((ix86_isa_flags & OPTION_MASK_ABI_X32) != 0)\n        #define TARGET_ABI_X32_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ABI_X32) != 0)\n        #define TARGET_ISA_XOP ((ix86_isa_flags & OPTION_MASK_ISA_XOP) != 0)\n        #define TARGET_ISA_XOP_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_XOP) != 0)\n        #define TARGET_ISA_XSAVE ((ix86_isa_flags & OPTION_MASK_ISA_XSAVE) != 0)\n        #define TARGET_ISA_XSAVE_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_XSAVE) != 0)\n        #define TARGET_ISA_XSAVEC ((ix86_isa_flags & OPTION_MASK_ISA_XSAVEC) != 0)\n        #define TARGET_ISA_XSAVEC_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_XSAVEC) != 0)\n        #define TARGET_ISA_XSAVEOPT ((ix86_isa_flags & OPTION_MASK_ISA_XSAVEOPT) != 0)\n        #define TARGET_ISA_XSAVEOPT_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_XSAVEOPT) != 0)\n        #define TARGET_ISA_XSAVES ((ix86_isa_flags & OPTION_MASK_ISA_XSAVES) != 0)\n        #define TARGET_ISA_XSAVES_P(ix86_isa_flags) (((ix86_isa_flags) & OPTION_MASK_ISA_XSAVES) != 0)\n    \n        #define TARGET_ALIGN_STRINGOPS ((target_flags & MASK_NO_ALIGN_STRINGOPS) == 0)\n        #define TARGET_USE_FANCY_MATH_387 ((target_flags & MASK_NO_FANCY_MATH_387) == 0)\n        #define TARGET_PUSH_ARGS ((target_flags & MASK_NO_PUSH_ARGS) == 0)\n        #define TARGET_RED_ZONE ((target_flags & MASK_NO_RED_ZONE) == 0)\n    \n        #define CL_Ada        (1U << 0)\n        #define CL_AdaSCIL    (1U << 1)\n        #define CL_AdaWhy     (1U << 2)\n        #define CL_BRIG       (1U << 3)\n        #define CL_C          (1U << 4)\n        #define CL_CXX        (1U << 5)\n        #define CL_Fortran    (1U << 6)\n        #define CL_Go         (1U << 7)\n        #define CL_LTO        (1U << 8)\n        #define CL_ObjC       (1U << 9)\n        #define CL_ObjCXX     (1U << 10)\n        #define CL_LANG_ALL   ((1U << 11) - 1)\n    \n        enum opt_code\n        {\n          OPT____ = 0,                               \/* -### *\/\n          \/* OPT__all_warnings = 1, *\/               \/* --all-warnings *\/\n          \/* OPT__ansi = 2, *\/                       \/* --ansi *\/\n          \/* OPT__assemble = 3, *\/                   \/* --assemble *\/\n          \/* OPT__assert = 4, *\/                     \/* --assert *\/\n          \/* OPT__assert_ = 5, *\/                    \/* --assert= *\/\n          \/* OPT__comments = 6, *\/                   \/* --comments *\/\n          \/* OPT__comments_in_macros = 7, *\/         \/* --comments-in-macros *\/\n          \/* OPT__compile = 8, *\/                    \/* --compile *\/\n          \/* OPT__coverage = 9, *\/                   \/* --coverage *\/\n          \/* OPT__debug = 10, *\/                     \/* --debug *\/\n          \/* OPT__define_macro = 11, *\/              \/* --define-macro *\/\n          \/* OPT__define_macro_ = 12, *\/             \/* --define-macro= *\/\n          \/* OPT__dependencies = 13, *\/              \/* --dependencies *\/\n          \/* OPT__dump = 14, *\/                      \/* --dump *\/\n          \/* OPT__dump_ = 15, *\/                     \/* --dump= *\/\n          \/* OPT__dumpbase = 16, *\/                  \/* --dumpbase *\/\n          \/* OPT__dumpdir = 17, *\/                   \/* --dumpdir *\/\n          \/* OPT__entry = 18, *\/                     \/* --entry *\/\n          \/* OPT__entry_ = 19, *\/                    \/* --entry= *\/\n          \/* OPT__extra_warnings = 20, *\/            \/* --extra-warnings *\/\n          \/* OPT__for_assembler = 21, *\/             \/* --for-assembler *\/\n          \/* OPT__for_assembler_ = 22, *\/            \/* --for-assembler= *\/\n          \/* OPT__for_linker = 23, *\/                \/* --for-linker *\/\n          \/* OPT__for_linker_ = 24, *\/               \/* --for-linker= *\/\n          \/* OPT__force_link = 25, *\/                \/* --force-link *\/\n          \/* OPT__force_link_ = 26, *\/               \/* --force-link= *\/\n          OPT__help = 27,                            \/* --help *\/\n          OPT__help_ = 28,                           \/* --help= *\/\n          \/* OPT__imacros = 29, *\/                   \/* --imacros *\/\n          \/* OPT__imacros_ = 30, *\/                  \/* --imacros= *\/\n          \/* OPT__include = 31, *\/                   \/* --include *\/\n          \/* OPT__include_barrier = 32, *\/           \/* --include-barrier *\/\n          \/* OPT__include_directory = 33, *\/         \/* --include-directory *\/\n          \/* OPT__include_directory_after = 34, *\/   \/* --include-directory-after *\/\n          \/* OPT__include_directory_after_ = 35, *\/  \/* --include-directory-after= *\/\n          \/* OPT__include_directory_ = 36, *\/        \/* --include-directory= *\/\n          \/* OPT__include_prefix = 37, *\/            \/* --include-prefix *\/\n          \/* OPT__include_prefix_ = 38, *\/           \/* --include-prefix= *\/\n          \/* OPT__include_with_prefix = 39, *\/       \/* --include-with-prefix *\/\n          \/* OPT__include_with_prefix_after = 40, *\/ \/* --include-with-prefix-after *\/\n          \/* OPT__include_with_prefix_after_ = 41, *\/\/* --include-with-prefix-after= *\/\n          \/* OPT__include_with_prefix_before = 42, *\/\/* --include-with-prefix-before *\/\n          \/* OPT__include_with_prefix_before_ = 43, *\/\/* --include-with-prefix-before= *\/\n          \/* OPT__include_with_prefix_ = 44, *\/      \/* --include-with-prefix= *\/\n          \/* OPT__include_ = 45, *\/                  \/* --include= *\/\n          \/* OPT__language = 46, *\/                  \/* --language *\/\n          \/* OPT__language_ = 47, *\/                 \/* --language= *\/\n          \/* OPT__library_directory = 48, *\/         \/* --library-directory *\/\n          \/* OPT__library_directory_ = 49, *\/        \/* --library-directory= *\/\n          \/* OPT__no_canonical_prefixes = 50, *\/     \/* --no-canonical-prefixes *\/\n          \/* OPT__no_integrated_cpp = 51, *\/         \/* --no-integrated-cpp *\/\n          \/* OPT__no_line_commands = 52, *\/          \/* --no-line-commands *\/\n          \/* OPT__no_standard_includes = 53, *\/      \/* --no-standard-includes *\/\n          \/* OPT__no_standard_libraries = 54, *\/     \/* --no-standard-libraries *\/\n          OPT__no_sysroot_suffix = 55,               \/* --no-sysroot-suffix *\/\n          \/* OPT__no_warnings = 56, *\/               \/* --no-warnings *\/\n          \/* OPT__optimize = 57, *\/                  \/* --optimize *\/\n          \/* OPT__output = 58, *\/                    \/* --output *\/\n          OPT__output_pch_ = 59,                     \/* --output-pch= *\/\n          \/* OPT__output_ = 60, *\/                   \/* --output= *\/\n          OPT__param = 61,                           \/* --param *\/\n          \/* OPT__param_ = 62, *\/                    \/* --param= *\/\n          \/* OPT__pass_exit_codes = 63, *\/           \/* --pass-exit-codes *\/\n          \/* OPT__pedantic = 64, *\/                  \/* --pedantic *\/\n          \/* OPT__pedantic_errors = 65, *\/           \/* --pedantic-errors *\/\n          \/* OPT__pie = 66, *\/                       \/* --pie *\/\n          \/* OPT__pipe = 67, *\/                      \/* --pipe *\/\n          \/* OPT__prefix = 68, *\/                    \/* --prefix *\/\n          \/* OPT__prefix_ = 69, *\/                   \/* --prefix= *\/\n          \/* OPT__preprocess = 70, *\/                \/* --preprocess *\/\n          \/* OPT__print_file_name = 71, *\/           \/* --print-file-name *\/\n          \/* OPT__print_file_name_ = 72, *\/          \/* --print-file-name= *\/\n          \/* OPT__print_libgcc_file_name = 73, *\/    \/* --print-libgcc-file-name *\/\n          \/* OPT__print_missing_file_dependencies = 74, *\/\/* --print-missing-file-dependencies *\/\n          \/* OPT__print_multi_directory = 75, *\/     \/* --print-multi-directory *\/\n          \/* OPT__print_multi_lib = 76, *\/           \/* --print-multi-lib *\/\n          \/* OPT__print_multi_os_directory = 77, *\/  \/* --print-multi-os-directory *\/\n          \/* OPT__print_multiarch = 78, *\/           \/* --print-multiarch *\/\n          \/* OPT__print_prog_name = 79, *\/           \/* --print-prog-name *\/\n          \/* OPT__print_prog_name_ = 80, *\/          \/* --print-prog-name= *\/\n          \/* OPT__print_search_dirs = 81, *\/         \/* --print-search-dirs *\/\n          \/* OPT__print_sysroot = 82, *\/             \/* --print-sysroot *\/\n          \/* OPT__print_sysroot_headers_suffix = 83, *\/\/* --print-sysroot-headers-suffix *\/\n          \/* OPT__profile = 84, *\/                   \/* --profile *\/\n          \/* OPT__save_temps = 85, *\/                \/* --save-temps *\/\n          \/* OPT__shared = 86, *\/                    \/* --shared *\/\n          \/* OPT__specs = 87, *\/                     \/* --specs *\/\n          \/* OPT__specs_ = 88, *\/                    \/* --specs= *\/\n          \/* OPT__static = 89, *\/                    \/* --static *\/\n          \/* OPT__static_pie = 90, *\/                \/* --static-pie *\/\n          \/* OPT__symbolic = 91, *\/                  \/* --symbolic *\/\n          \/* OPT__sysroot = 92, *\/                   \/* --sysroot *\/\n          OPT__sysroot_ = 93,                        \/* --sysroot= *\/\n          OPT__target_help = 94,                     \/* --target-help *\/\n          \/* OPT__time = 95, *\/                      \/* --time *\/\n          \/* OPT__trace_includes = 96, *\/            \/* --trace-includes *\/\n          \/* OPT__traditional = 97, *\/               \/* --traditional *\/\n          \/* OPT__traditional_cpp = 98, *\/           \/* --traditional-cpp *\/\n          \/* OPT__trigraphs = 99, *\/                 \/* --trigraphs *\/\n          \/* OPT__undefine_macro = 100, *\/           \/* --undefine-macro *\/\n          \/* OPT__undefine_macro_ = 101, *\/          \/* --undefine-macro= *\/\n          \/* OPT__user_dependencies = 102, *\/        \/* --user-dependencies *\/\n          \/* OPT__verbose = 103, *\/                  \/* --verbose *\/\n          OPT__version = 104,                        \/* --version *\/\n          \/* OPT__write_dependencies = 105, *\/       \/* --write-dependencies *\/\n          \/* OPT__write_user_dependencies = 106, *\/  \/* --write-user-dependencies *\/\n          OPT_A = 107,                               \/* -A *\/\n          OPT_B = 108,                               \/* -B *\/\n          OPT_C = 109,                               \/* -C *\/\n          OPT_CC = 110,                              \/* -CC *\/\n          OPT_D = 111,                               \/* -D *\/\n          OPT_E = 112,                               \/* -E *\/\n          OPT_F = 113,                               \/* -F *\/\n          OPT_H = 114,                               \/* -H *\/\n          OPT_I = 115,                               \/* -I *\/\n          OPT_J = 116,                               \/* -J *\/\n          OPT_L = 117,                               \/* -L *\/\n          OPT_M = 118,                               \/* -M *\/\n          OPT_MD = 119,                              \/* -MD *\/\n          OPT_MF = 120,                              \/* -MF *\/\n          OPT_MG = 121,                              \/* -MG *\/\n          OPT_MM = 122,                              \/* -MM *\/\n          OPT_MMD = 123,                             \/* -MMD *\/\n          OPT_MP = 124,                              \/* -MP *\/\n          OPT_MQ = 125,                              \/* -MQ *\/\n          OPT_MT = 126,                              \/* -MT *\/\n          OPT_N = 127,                               \/* -N *\/\n          OPT_O = 128,                               \/* -O *\/\n          OPT_Ofast = 129,                           \/* -Ofast *\/\n          OPT_Og = 130,                              \/* -Og *\/\n          OPT_Os = 131,                              \/* -Os *\/\n          OPT_P = 132,                               \/* -P *\/\n          OPT_Q = 133,                               \/* -Q *\/\n          OPT_Qn = 134,                              \/* -Qn *\/\n          OPT_Qy = 135,                              \/* -Qy *\/\n          OPT_R = 136,                               \/* -R *\/\n          OPT_S = 137,                               \/* -S *\/\n          OPT_T = 138,                               \/* -T *\/\n          OPT_Tbss = 139,                            \/* -Tbss *\/\n          OPT_Tbss_ = 140,                           \/* -Tbss= *\/\n          OPT_Tdata = 141,                           \/* -Tdata *\/\n          OPT_Tdata_ = 142,                          \/* -Tdata= *\/\n          OPT_Ttext = 143,                           \/* -Ttext *\/\n          OPT_Ttext_ = 144,                          \/* -Ttext= *\/\n          OPT_U = 145,                               \/* -U *\/\n          \/* OPT_W = 146, *\/                         \/* -W *\/\n          OPT_Wa_ = 147,                             \/* -Wa, *\/\n          OPT_Wabi = 148,                            \/* -Wabi *\/\n          OPT_Wabi_tag = 149,                        \/* -Wabi-tag *\/\n          OPT_Wabi_ = 150,                           \/* -Wabi= *\/\n          OPT_Waddress = 151,                        \/* -Waddress *\/\n          OPT_Waggregate_return = 152,               \/* -Waggregate-return *\/\n          OPT_Waggressive_loop_optimizations = 153,  \/* -Waggressive-loop-optimizations *\/\n          OPT_Waliasing = 154,                       \/* -Waliasing *\/\n          OPT_Walign_commons = 155,                  \/* -Walign-commons *\/\n          \/* OPT_Waligned_new = 156, *\/              \/* -Waligned-new *\/\n          OPT_Waligned_new_ = 157,                   \/* -Waligned-new= *\/\n          OPT_Wall = 158,                            \/* -Wall *\/\n          OPT_Walloc_size_larger_than_ = 159,        \/* -Walloc-size-larger-than= *\/\n          OPT_Walloc_zero = 160,                     \/* -Walloc-zero *\/\n          OPT_Walloca = 161,                         \/* -Walloca *\/\n          OPT_Walloca_larger_than_ = 162,            \/* -Walloca-larger-than= *\/\n          OPT_Wampersand = 163,                      \/* -Wampersand *\/\n          OPT_Wargument_mismatch = 164,              \/* -Wargument-mismatch *\/\n          OPT_Warray_bounds = 165,                   \/* -Warray-bounds *\/\n          OPT_Warray_bounds_ = 166,                  \/* -Warray-bounds= *\/\n          OPT_Warray_temporaries = 167,              \/* -Warray-temporaries *\/\n          OPT_Wassign_intercept = 168,               \/* -Wassign-intercept *\/\n          OPT_Wattribute_alias = 169,                \/* -Wattribute-alias *\/\n          OPT_Wattributes = 170,                     \/* -Wattributes *\/\n          OPT_Wbad_function_cast = 171,              \/* -Wbad-function-cast *\/\n          OPT_Wbool_compare = 172,                   \/* -Wbool-compare *\/\n          OPT_Wbool_operation = 173,                 \/* -Wbool-operation *\/\n          OPT_Wbuiltin_declaration_mismatch = 174,   \/* -Wbuiltin-declaration-mismatch *\/\n          OPT_Wbuiltin_macro_redefined = 175,        \/* -Wbuiltin-macro-redefined *\/\n          OPT_Wc___compat = 176,                     \/* -Wc++-compat *\/\n          \/* OPT_Wc__0x_compat = 177, *\/             \/* -Wc++0x-compat *\/\n          OPT_Wc__11_compat = 178,                   \/* -Wc++11-compat *\/\n          OPT_Wc__14_compat = 179,                   \/* -Wc++14-compat *\/\n          OPT_Wc__17_compat = 180,                   \/* -Wc++17-compat *\/\n          \/* OPT_Wc__1z_compat = 181, *\/             \/* -Wc++1z-compat *\/\n          OPT_Wc_binding_type = 182,                 \/* -Wc-binding-type *\/\n          OPT_Wc90_c99_compat = 183,                 \/* -Wc90-c99-compat *\/\n          OPT_Wc99_c11_compat = 184,                 \/* -Wc99-c11-compat *\/\n          OPT_Wcast_align = 185,                     \/* -Wcast-align *\/\n          OPT_Wcast_align_strict = 186,              \/* -Wcast-align=strict *\/\n          OPT_Wcast_function_type = 187,             \/* -Wcast-function-type *\/\n          OPT_Wcast_qual = 188,                      \/* -Wcast-qual *\/\n          \/* OPT_Wcatch_value = 189, *\/              \/* -Wcatch-value *\/\n          OPT_Wcatch_value_ = 190,                   \/* -Wcatch-value= *\/\n          OPT_Wchar_subscripts = 191,                \/* -Wchar-subscripts *\/\n          OPT_Wcharacter_truncation = 192,           \/* -Wcharacter-truncation *\/\n          OPT_Wchkp = 193,                           \/* -Wchkp *\/\n          OPT_Wclass_memaccess = 194,                \/* -Wclass-memaccess *\/\n          OPT_Wclobbered = 195,                      \/* -Wclobbered *\/\n          OPT_Wcomment = 196,                        \/* -Wcomment *\/\n          \/* OPT_Wcomments = 197, *\/                 \/* -Wcomments *\/\n          OPT_Wcompare_reals = 198,                  \/* -Wcompare-reals *\/\n          OPT_Wconditionally_supported = 199,        \/* -Wconditionally-supported *\/\n          OPT_Wconversion = 200,                     \/* -Wconversion *\/\n          OPT_Wconversion_extra = 201,               \/* -Wconversion-extra *\/\n          OPT_Wconversion_null = 202,                \/* -Wconversion-null *\/\n          OPT_Wcoverage_mismatch = 203,              \/* -Wcoverage-mismatch *\/\n          OPT_Wcpp = 204,                            \/* -Wcpp *\/\n          OPT_Wctor_dtor_privacy = 205,              \/* -Wctor-dtor-privacy *\/\n          OPT_Wdangling_else = 206,                  \/* -Wdangling-else *\/\n          OPT_Wdate_time = 207,                      \/* -Wdate-time *\/\n          OPT_Wdeclaration_after_statement = 208,    \/* -Wdeclaration-after-statement *\/\n          OPT_Wdelete_incomplete = 209,              \/* -Wdelete-incomplete *\/\n          OPT_Wdelete_non_virtual_dtor = 210,        \/* -Wdelete-non-virtual-dtor *\/\n          OPT_Wdeprecated = 211,                     \/* -Wdeprecated *\/\n          OPT_Wdeprecated_declarations = 212,        \/* -Wdeprecated-declarations *\/\n          OPT_Wdesignated_init = 213,                \/* -Wdesignated-init *\/\n          OPT_Wdisabled_optimization = 214,          \/* -Wdisabled-optimization *\/\n          OPT_Wdiscarded_array_qualifiers = 215,     \/* -Wdiscarded-array-qualifiers *\/\n          OPT_Wdiscarded_qualifiers = 216,           \/* -Wdiscarded-qualifiers *\/\n          OPT_Wdiv_by_zero = 217,                    \/* -Wdiv-by-zero *\/\n          OPT_Wdo_subscript = 218,                   \/* -Wdo-subscript *\/\n          OPT_Wdouble_promotion = 219,               \/* -Wdouble-promotion *\/\n          OPT_Wduplicate_decl_specifier = 220,       \/* -Wduplicate-decl-specifier *\/\n          OPT_Wduplicated_branches = 221,            \/* -Wduplicated-branches *\/\n          OPT_Wduplicated_cond = 222,                \/* -Wduplicated-cond *\/\n          OPT_Weffc__ = 223,                         \/* -Weffc++ *\/\n          OPT_Wempty_body = 224,                     \/* -Wempty-body *\/\n          OPT_Wendif_labels = 225,                   \/* -Wendif-labels *\/\n          OPT_Wenum_compare = 226,                   \/* -Wenum-compare *\/\n          OPT_Werror = 227,                          \/* -Werror *\/\n          \/* OPT_Werror_implicit_function_declaration = 228, *\/\/* -Werror-implicit-function-declaration *\/\n          OPT_Werror_ = 229,                         \/* -Werror= *\/\n          OPT_Wexpansion_to_defined = 230,           \/* -Wexpansion-to-defined *\/\n          OPT_Wextra = 231,                          \/* -Wextra *\/\n          OPT_Wextra_semi = 232,                     \/* -Wextra-semi *\/\n          OPT_Wfatal_errors = 233,                   \/* -Wfatal-errors *\/\n          OPT_Wfloat_conversion = 234,               \/* -Wfloat-conversion *\/\n          OPT_Wfloat_equal = 235,                    \/* -Wfloat-equal *\/\n          \/* OPT_Wformat = 236, *\/                   \/* -Wformat *\/\n          OPT_Wformat_contains_nul = 237,            \/* -Wformat-contains-nul *\/\n          OPT_Wformat_extra_args = 238,              \/* -Wformat-extra-args *\/\n          OPT_Wformat_nonliteral = 239,              \/* -Wformat-nonliteral *\/\n          \/* OPT_Wformat_overflow = 240, *\/          \/* -Wformat-overflow *\/\n          OPT_Wformat_overflow_ = 241,               \/* -Wformat-overflow= *\/\n          OPT_Wformat_security = 242,                \/* -Wformat-security *\/\n          OPT_Wformat_signedness = 243,              \/* -Wformat-signedness *\/\n          \/* OPT_Wformat_truncation = 244, *\/        \/* -Wformat-truncation *\/\n          OPT_Wformat_truncation_ = 245,             \/* -Wformat-truncation= *\/\n          OPT_Wformat_y2k = 246,                     \/* -Wformat-y2k *\/\n          OPT_Wformat_zero_length = 247,             \/* -Wformat-zero-length *\/\n          OPT_Wformat_ = 248,                        \/* -Wformat= *\/\n          OPT_Wframe_address = 249,                  \/* -Wframe-address *\/\n          OPT_Wframe_larger_than_ = 250,             \/* -Wframe-larger-than= *\/\n          OPT_Wfree_nonheap_object = 251,            \/* -Wfree-nonheap-object *\/\n          OPT_Wfrontend_loop_interchange = 252,      \/* -Wfrontend-loop-interchange *\/\n          OPT_Wfunction_elimination = 253,           \/* -Wfunction-elimination *\/\n          OPT_Whsa = 254,                            \/* -Whsa *\/\n          OPT_Wif_not_aligned = 255,                 \/* -Wif-not-aligned *\/\n          OPT_Wignored_attributes = 256,             \/* -Wignored-attributes *\/\n          OPT_Wignored_qualifiers = 257,             \/* -Wignored-qualifiers *\/\n          OPT_Wimplicit = 258,                       \/* -Wimplicit *\/\n          \/* OPT_Wimplicit_fallthrough = 259, *\/     \/* -Wimplicit-fallthrough *\/\n          OPT_Wimplicit_fallthrough_ = 260,          \/* -Wimplicit-fallthrough= *\/\n          OPT_Wimplicit_function_declaration = 261,  \/* -Wimplicit-function-declaration *\/\n          OPT_Wimplicit_int = 262,                   \/* -Wimplicit-int *\/\n          OPT_Wimplicit_interface = 263,             \/* -Wimplicit-interface *\/\n          OPT_Wimplicit_procedure = 264,             \/* -Wimplicit-procedure *\/\n          \/* OPT_Wimport = 265, *\/                   \/* -Wimport *\/\n          OPT_Wincompatible_pointer_types = 266,     \/* -Wincompatible-pointer-types *\/\n          OPT_Winherited_variadic_ctor = 267,        \/* -Winherited-variadic-ctor *\/\n          OPT_Winit_self = 268,                      \/* -Winit-self *\/\n          OPT_Winline = 269,                         \/* -Winline *\/\n          OPT_Wint_conversion = 270,                 \/* -Wint-conversion *\/\n          OPT_Wint_in_bool_context = 271,            \/* -Wint-in-bool-context *\/\n          OPT_Wint_to_pointer_cast = 272,            \/* -Wint-to-pointer-cast *\/\n          OPT_Winteger_division = 273,               \/* -Winteger-division *\/\n          OPT_Wintrinsic_shadow = 274,               \/* -Wintrinsic-shadow *\/\n          OPT_Wintrinsics_std = 275,                 \/* -Wintrinsics-std *\/\n          OPT_Winvalid_memory_model = 276,           \/* -Winvalid-memory-model *\/\n          OPT_Winvalid_offsetof = 277,               \/* -Winvalid-offsetof *\/\n          OPT_Winvalid_pch = 278,                    \/* -Winvalid-pch *\/\n          OPT_Wjump_misses_init = 279,               \/* -Wjump-misses-init *\/\n          OPT_Wl_ = 280,                             \/* -Wl, *\/\n          \/* OPT_Wlarger_than_ = 281, *\/             \/* -Wlarger-than- *\/\n          OPT_Wlarger_than_ = 282,                   \/* -Wlarger-than= *\/\n          OPT_Wline_truncation = 283,                \/* -Wline-truncation *\/\n          OPT_Wliteral_suffix = 284,                 \/* -Wliteral-suffix *\/\n          OPT_Wlogical_not_parentheses = 285,        \/* -Wlogical-not-parentheses *\/\n          OPT_Wlogical_op = 286,                     \/* -Wlogical-op *\/\n          OPT_Wlong_long = 287,                      \/* -Wlong-long *\/\n          OPT_Wlto_type_mismatch = 288,              \/* -Wlto-type-mismatch *\/\n          OPT_Wmain = 289,                           \/* -Wmain *\/\n          OPT_Wmaybe_uninitialized = 290,            \/* -Wmaybe-uninitialized *\/\n          OPT_Wmemset_elt_size = 291,                \/* -Wmemset-elt-size *\/\n          OPT_Wmemset_transposed_args = 292,         \/* -Wmemset-transposed-args *\/\n          OPT_Wmisleading_indentation = 293,         \/* -Wmisleading-indentation *\/\n          OPT_Wmissing_braces = 294,                 \/* -Wmissing-braces *\/\n          OPT_Wmissing_declarations = 295,           \/* -Wmissing-declarations *\/\n          OPT_Wmissing_field_initializers = 296,     \/* -Wmissing-field-initializers *\/\n          \/* OPT_Wmissing_format_attribute = 297, *\/ \/* -Wmissing-format-attribute *\/\n          OPT_Wmissing_include_dirs = 298,           \/* -Wmissing-include-dirs *\/\n          \/* OPT_Wmissing_noreturn = 299, *\/         \/* -Wmissing-noreturn *\/\n          OPT_Wmissing_parameter_type = 300,         \/* -Wmissing-parameter-type *\/\n          OPT_Wmissing_prototypes = 301,             \/* -Wmissing-prototypes *\/\n          \/* OPT_Wmudflap = 302, *\/                  \/* -Wmudflap *\/\n          OPT_Wmultichar = 303,                      \/* -Wmultichar *\/\n          OPT_Wmultiple_inheritance = 304,           \/* -Wmultiple-inheritance *\/\n          OPT_Wmultistatement_macros = 305,          \/* -Wmultistatement-macros *\/\n          OPT_Wnamespaces = 306,                     \/* -Wnamespaces *\/\n          OPT_Wnarrowing = 307,                      \/* -Wnarrowing *\/\n          OPT_Wnested_externs = 308,                 \/* -Wnested-externs *\/\n          OPT_Wnoexcept = 309,                       \/* -Wnoexcept *\/\n          OPT_Wnoexcept_type = 310,                  \/* -Wnoexcept-type *\/\n          OPT_Wnon_template_friend = 311,            \/* -Wnon-template-friend *\/\n          OPT_Wnon_virtual_dtor = 312,               \/* -Wnon-virtual-dtor *\/\n          OPT_Wnonnull = 313,                        \/* -Wnonnull *\/\n          OPT_Wnonnull_compare = 314,                \/* -Wnonnull-compare *\/\n          \/* OPT_Wnormalized = 315, *\/               \/* -Wnormalized *\/\n          OPT_Wnormalized_ = 316,                    \/* -Wnormalized= *\/\n          OPT_Wnull_dereference = 317,               \/* -Wnull-dereference *\/\n          OPT_Wodr = 318,                            \/* -Wodr *\/\n          OPT_Wold_style_cast = 319,                 \/* -Wold-style-cast *\/\n          OPT_Wold_style_declaration = 320,          \/* -Wold-style-declaration *\/\n          OPT_Wold_style_definition = 321,           \/* -Wold-style-definition *\/\n          OPT_Wopenmp_simd = 322,                    \/* -Wopenmp-simd *\/\n          OPT_Woverflow = 323,                       \/* -Woverflow *\/\n          OPT_Woverlength_strings = 324,             \/* -Woverlength-strings *\/\n          OPT_Woverloaded_virtual = 325,             \/* -Woverloaded-virtual *\/\n          OPT_Woverride_init = 326,                  \/* -Woverride-init *\/\n          OPT_Woverride_init_side_effects = 327,     \/* -Woverride-init-side-effects *\/\n          OPT_Wp_ = 328,                             \/* -Wp, *\/\n          OPT_Wpacked = 329,                         \/* -Wpacked *\/\n          OPT_Wpacked_bitfield_compat = 330,         \/* -Wpacked-bitfield-compat *\/\n          OPT_Wpacked_not_aligned = 331,             \/* -Wpacked-not-aligned *\/\n          OPT_Wpadded = 332,                         \/* -Wpadded *\/\n          OPT_Wparentheses = 333,                    \/* -Wparentheses *\/\n          OPT_Wpedantic = 334,                       \/* -Wpedantic *\/\n          \/* OPT_Wplacement_new = 335, *\/            \/* -Wplacement-new *\/\n          OPT_Wplacement_new_ = 336,                 \/* -Wplacement-new= *\/\n          OPT_Wpmf_conversions = 337,                \/* -Wpmf-conversions *\/\n          OPT_Wpointer_arith = 338,                  \/* -Wpointer-arith *\/\n          OPT_Wpointer_compare = 339,                \/* -Wpointer-compare *\/\n          OPT_Wpointer_sign = 340,                   \/* -Wpointer-sign *\/\n          OPT_Wpointer_to_int_cast = 341,            \/* -Wpointer-to-int-cast *\/\n          OPT_Wpragmas = 342,                        \/* -Wpragmas *\/\n          OPT_Wproperty_assign_default = 343,        \/* -Wproperty-assign-default *\/\n          OPT_Wprotocol = 344,                       \/* -Wprotocol *\/\n          OPT_Wpsabi = 345,                          \/* -Wpsabi *\/\n          OPT_Wreal_q_constant = 346,                \/* -Wreal-q-constant *\/\n          OPT_Wrealloc_lhs = 347,                    \/* -Wrealloc-lhs *\/\n          OPT_Wrealloc_lhs_all = 348,                \/* -Wrealloc-lhs-all *\/\n          OPT_Wredundant_decls = 349,                \/* -Wredundant-decls *\/\n          OPT_Wregister = 350,                       \/* -Wregister *\/\n          OPT_Wreorder = 351,                        \/* -Wreorder *\/\n          OPT_Wrestrict = 352,                       \/* -Wrestrict *\/\n          OPT_Wreturn_local_addr = 353,              \/* -Wreturn-local-addr *\/\n          OPT_Wreturn_type = 354,                    \/* -Wreturn-type *\/\n          OPT_Wscalar_storage_order = 355,           \/* -Wscalar-storage-order *\/\n          OPT_Wselector = 356,                       \/* -Wselector *\/\n          OPT_Wsequence_point = 357,                 \/* -Wsequence-point *\/\n          OPT_Wshadow = 358,                         \/* -Wshadow *\/\n          \/* OPT_Wshadow_compatible_local = 359, *\/  \/* -Wshadow-compatible-local *\/\n          OPT_Wshadow_ivar = 360,                    \/* -Wshadow-ivar *\/\n          \/* OPT_Wshadow_local = 361, *\/             \/* -Wshadow-local *\/\n          OPT_Wshadow_compatible_local = 362,        \/* -Wshadow=compatible-local *\/\n          \/* OPT_Wshadow_global = 363, *\/            \/* -Wshadow=global *\/\n          OPT_Wshadow_local = 364,                   \/* -Wshadow=local *\/\n          OPT_Wshift_count_negative = 365,           \/* -Wshift-count-negative *\/\n          OPT_Wshift_count_overflow = 366,           \/* -Wshift-count-overflow *\/\n          OPT_Wshift_negative_value = 367,           \/* -Wshift-negative-value *\/\n          \/* OPT_Wshift_overflow = 368, *\/           \/* -Wshift-overflow *\/\n          OPT_Wshift_overflow_ = 369,                \/* -Wshift-overflow= *\/\n          OPT_Wsign_compare = 370,                   \/* -Wsign-compare *\/\n          OPT_Wsign_conversion = 371,                \/* -Wsign-conversion *\/\n          OPT_Wsign_promo = 372,                     \/* -Wsign-promo *\/\n          OPT_Wsized_deallocation = 373,             \/* -Wsized-deallocation *\/\n          OPT_Wsizeof_array_argument = 374,          \/* -Wsizeof-array-argument *\/\n          OPT_Wsizeof_pointer_div = 375,             \/* -Wsizeof-pointer-div *\/\n          OPT_Wsizeof_pointer_memaccess = 376,       \/* -Wsizeof-pointer-memaccess *\/\n          OPT_Wstack_protector = 377,                \/* -Wstack-protector *\/\n          OPT_Wstack_usage_ = 378,                   \/* -Wstack-usage= *\/\n          OPT_Wstrict_aliasing = 379,                \/* -Wstrict-aliasing *\/\n          OPT_Wstrict_aliasing_ = 380,               \/* -Wstrict-aliasing= *\/\n          OPT_Wstrict_null_sentinel = 381,           \/* -Wstrict-null-sentinel *\/\n          OPT_Wstrict_overflow = 382,                \/* -Wstrict-overflow *\/\n          OPT_Wstrict_overflow_ = 383,               \/* -Wstrict-overflow= *\/\n          OPT_Wstrict_prototypes = 384,              \/* -Wstrict-prototypes *\/\n          OPT_Wstrict_selector_match = 385,          \/* -Wstrict-selector-match *\/\n          \/* OPT_Wstringop_overflow = 386, *\/        \/* -Wstringop-overflow *\/\n          OPT_Wstringop_overflow_ = 387,             \/* -Wstringop-overflow= *\/\n          OPT_Wstringop_truncation = 388,            \/* -Wstringop-truncation *\/\n          OPT_Wsubobject_linkage = 389,              \/* -Wsubobject-linkage *\/\n          OPT_Wsuggest_attribute_cold = 390,         \/* -Wsuggest-attribute=cold *\/\n          OPT_Wsuggest_attribute_const = 391,        \/* -Wsuggest-attribute=const *\/\n          OPT_Wsuggest_attribute_format = 392,       \/* -Wsuggest-attribute=format *\/\n          OPT_Wsuggest_attribute_malloc = 393,       \/* -Wsuggest-attribute=malloc *\/\n          OPT_Wsuggest_attribute_noreturn = 394,     \/* -Wsuggest-attribute=noreturn *\/\n          OPT_Wsuggest_attribute_pure = 395,         \/* -Wsuggest-attribute=pure *\/\n          OPT_Wsuggest_final_methods = 396,          \/* -Wsuggest-final-methods *\/\n          OPT_Wsuggest_final_types = 397,            \/* -Wsuggest-final-types *\/\n          OPT_Wsuggest_override = 398,               \/* -Wsuggest-override *\/\n          OPT_Wsurprising = 399,                     \/* -Wsurprising *\/\n          OPT_Wswitch = 400,                         \/* -Wswitch *\/\n          OPT_Wswitch_bool = 401,                    \/* -Wswitch-bool *\/\n          OPT_Wswitch_default = 402,                 \/* -Wswitch-default *\/\n          OPT_Wswitch_enum = 403,                    \/* -Wswitch-enum *\/\n          OPT_Wswitch_unreachable = 404,             \/* -Wswitch-unreachable *\/\n          OPT_Wsync_nand = 405,                      \/* -Wsync-nand *\/\n          OPT_Wsynth = 406,                          \/* -Wsynth *\/\n          OPT_Wsystem_headers = 407,                 \/* -Wsystem-headers *\/\n          OPT_Wtabs = 408,                           \/* -Wtabs *\/\n          OPT_Wtarget_lifetime = 409,                \/* -Wtarget-lifetime *\/\n          OPT_Wtautological_compare = 410,           \/* -Wtautological-compare *\/\n          OPT_Wtemplates = 411,                      \/* -Wtemplates *\/\n          OPT_Wterminate = 412,                      \/* -Wterminate *\/\n          OPT_Wtraditional = 413,                    \/* -Wtraditional *\/\n          OPT_Wtraditional_conversion = 414,         \/* -Wtraditional-conversion *\/\n          OPT_Wtrampolines = 415,                    \/* -Wtrampolines *\/\n          OPT_Wtrigraphs = 416,                      \/* -Wtrigraphs *\/\n          OPT_Wtype_limits = 417,                    \/* -Wtype-limits *\/\n          OPT_Wundeclared_selector = 418,            \/* -Wundeclared-selector *\/\n          OPT_Wundef = 419,                          \/* -Wundef *\/\n          OPT_Wundefined_do_loop = 420,              \/* -Wundefined-do-loop *\/\n          OPT_Wunderflow = 421,                      \/* -Wunderflow *\/\n          OPT_Wuninitialized = 422,                  \/* -Wuninitialized *\/\n          OPT_Wunknown_pragmas = 423,                \/* -Wunknown-pragmas *\/\n          \/* OPT_Wunreachable_code = 424, *\/         \/* -Wunreachable-code *\/\n          OPT_Wunsafe_loop_optimizations = 425,      \/* -Wunsafe-loop-optimizations *\/\n          OPT_Wunsuffixed_float_constants = 426,     \/* -Wunsuffixed-float-constants *\/\n          OPT_Wunused = 427,                         \/* -Wunused *\/\n          OPT_Wunused_but_set_parameter = 428,       \/* -Wunused-but-set-parameter *\/\n          OPT_Wunused_but_set_variable = 429,        \/* -Wunused-but-set-variable *\/\n          \/* OPT_Wunused_const_variable = 430, *\/    \/* -Wunused-const-variable *\/\n          OPT_Wunused_const_variable_ = 431,         \/* -Wunused-const-variable= *\/\n          OPT_Wunused_dummy_argument = 432,          \/* -Wunused-dummy-argument *\/\n          OPT_Wunused_function = 433,                \/* -Wunused-function *\/\n          OPT_Wunused_label = 434,                   \/* -Wunused-label *\/\n          OPT_Wunused_local_typedefs = 435,          \/* -Wunused-local-typedefs *\/\n          OPT_Wunused_macros = 436,                  \/* -Wunused-macros *\/\n          OPT_Wunused_parameter = 437,               \/* -Wunused-parameter *\/\n          OPT_Wunused_result = 438,                  \/* -Wunused-result *\/\n          OPT_Wunused_value = 439,                   \/* -Wunused-value *\/\n          OPT_Wunused_variable = 440,                \/* -Wunused-variable *\/\n          OPT_Wuse_without_only = 441,               \/* -Wuse-without-only *\/\n          OPT_Wuseless_cast = 442,                   \/* -Wuseless-cast *\/\n          OPT_Wvarargs = 443,                        \/* -Wvarargs *\/\n          OPT_Wvariadic_macros = 444,                \/* -Wvariadic-macros *\/\n          OPT_Wvector_operation_performance = 445,   \/* -Wvector-operation-performance *\/\n          OPT_Wvirtual_inheritance = 446,            \/* -Wvirtual-inheritance *\/\n          OPT_Wvirtual_move_assign = 447,            \/* -Wvirtual-move-assign *\/\n          OPT_Wvla = 448,                            \/* -Wvla *\/\n          OPT_Wvla_larger_than_ = 449,               \/* -Wvla-larger-than= *\/\n          OPT_Wvolatile_register_var = 450,          \/* -Wvolatile-register-var *\/\n          OPT_Wwrite_strings = 451,                  \/* -Wwrite-strings *\/\n          OPT_Wzero_as_null_pointer_constant = 452,  \/* -Wzero-as-null-pointer-constant *\/\n          OPT_Wzerotrip = 453,                       \/* -Wzerotrip *\/\n          OPT_Xassembler = 454,                      \/* -Xassembler *\/\n          OPT_Xlinker = 455,                         \/* -Xlinker *\/\n          OPT_Xpreprocessor = 456,                   \/* -Xpreprocessor *\/\n          OPT_Z = 457,                               \/* -Z *\/\n          OPT_ansi = 458,                            \/* -ansi *\/\n          OPT_aux_info = 459,                        \/* -aux-info *\/\n          \/* OPT_aux_info_ = 460, *\/                 \/* -aux-info= *\/\n          OPT_auxbase = 461,                         \/* -auxbase *\/\n          OPT_auxbase_strip = 462,                   \/* -auxbase-strip *\/\n          OPT_c = 463,                               \/* -c *\/\n          OPT_coverage = 464,                        \/* -coverage *\/\n          OPT_cpp = 465,                             \/* -cpp *\/\n          OPT_cpp_ = 466,                            \/* -cpp= *\/\n          OPT_d = 467,                               \/* -d *\/\n          OPT_dumpbase = 468,                        \/* -dumpbase *\/\n          OPT_dumpdir = 469,                         \/* -dumpdir *\/\n          OPT_dumpfullversion = 470,                 \/* -dumpfullversion *\/\n          OPT_dumpmachine = 471,                     \/* -dumpmachine *\/\n          OPT_dumpspecs = 472,                       \/* -dumpspecs *\/\n          OPT_dumpversion = 473,                     \/* -dumpversion *\/\n          OPT_e = 474,                               \/* -e *\/\n          OPT_export_dynamic = 475,                  \/* -export-dynamic *\/\n          OPT_fPIC = 476,                            \/* -fPIC *\/\n          OPT_fPIE = 477,                            \/* -fPIE *\/\n          OPT_fRTS_ = 478,                           \/* -fRTS= *\/\n          OPT_fabi_compat_version_ = 479,            \/* -fabi-compat-version= *\/\n          OPT_fabi_version_ = 480,                   \/* -fabi-version= *\/\n          OPT_faccess_control = 481,                 \/* -faccess-control *\/\n          OPT_fada_spec_parent_ = 482,               \/* -fada-spec-parent= *\/\n          OPT_faggressive_function_elimination = 483,\/* -faggressive-function-elimination *\/\n          OPT_faggressive_loop_optimizations = 484,  \/* -faggressive-loop-optimizations *\/\n          OPT_falign_commons = 485,                  \/* -falign-commons *\/\n          OPT_falign_functions = 486,                \/* -falign-functions *\/\n          OPT_falign_functions_ = 487,               \/* -falign-functions= *\/\n          OPT_falign_jumps = 488,                    \/* -falign-jumps *\/\n          OPT_falign_jumps_ = 489,                   \/* -falign-jumps= *\/\n          OPT_falign_labels = 490,                   \/* -falign-labels *\/\n          OPT_falign_labels_ = 491,                  \/* -falign-labels= *\/\n          OPT_falign_loops = 492,                    \/* -falign-loops *\/\n          OPT_falign_loops_ = 493,                   \/* -falign-loops= *\/\n          \/* OPT_faligned_new = 494, *\/              \/* -faligned-new *\/\n          OPT_faligned_new_ = 495,                   \/* -faligned-new= *\/\n          OPT_fall_intrinsics = 496,                 \/* -fall-intrinsics *\/\n          \/* OPT_fall_virtual = 497, *\/              \/* -fall-virtual *\/\n          OPT_fallow_leading_underscore = 498,       \/* -fallow-leading-underscore *\/\n          OPT_fallow_parameterless_variadic_functions = 499,\/* -fallow-parameterless-variadic-functions *\/\n          \/* OPT_falt_external_templates = 500, *\/   \/* -falt-external-templates *\/\n          \/* OPT_fargument_alias = 501, *\/           \/* -fargument-alias *\/\n          \/* OPT_fargument_noalias = 502, *\/         \/* -fargument-noalias *\/\n          \/* OPT_fargument_noalias_anything = 503, *\/\/* -fargument-noalias-anything *\/\n          \/* OPT_fargument_noalias_global = 504, *\/  \/* -fargument-noalias-global *\/\n          OPT_fasan_shadow_offset_ = 505,            \/* -fasan-shadow-offset= *\/\n          OPT_fasm = 506,                            \/* -fasm *\/\n          OPT_fassociative_math = 507,               \/* -fassociative-math *\/\n          OPT_fasynchronous_unwind_tables = 508,     \/* -fasynchronous-unwind-tables *\/\n          OPT_fauto_inc_dec = 509,                   \/* -fauto-inc-dec *\/\n          OPT_fauto_profile = 510,                   \/* -fauto-profile *\/\n          OPT_fauto_profile_ = 511,                  \/* -fauto-profile= *\/\n          OPT_fautomatic = 512,                      \/* -fautomatic *\/\n          OPT_fbackslash = 513,                      \/* -fbackslash *\/\n          OPT_fbacktrace = 514,                      \/* -fbacktrace *\/\n          OPT_fblas_matmul_limit_ = 515,             \/* -fblas-matmul-limit= *\/\n          OPT_fbounds_check = 516,                   \/* -fbounds-check *\/\n          OPT_fbranch_count_reg = 517,               \/* -fbranch-count-reg *\/\n          OPT_fbranch_probabilities = 518,           \/* -fbranch-probabilities *\/\n          OPT_fbranch_target_load_optimize = 519,    \/* -fbranch-target-load-optimize *\/\n          OPT_fbranch_target_load_optimize2 = 520,   \/* -fbranch-target-load-optimize2 *\/\n          OPT_fbtr_bb_exclusive = 521,               \/* -fbtr-bb-exclusive *\/\n          OPT_fbuilding_libgcc = 522,                \/* -fbuilding-libgcc *\/\n          OPT_fbuiltin = 523,                        \/* -fbuiltin *\/\n          OPT_fbuiltin_ = 524,                       \/* -fbuiltin- *\/\n          OPT_fbuiltin_printf = 525,                 \/* -fbuiltin-printf *\/\n          OPT_fc_prototypes = 526,                   \/* -fc-prototypes *\/\n          OPT_fcall_saved_ = 527,                    \/* -fcall-saved- *\/\n          OPT_fcall_used_ = 528,                     \/* -fcall-used- *\/\n          OPT_fcaller_saves = 529,                   \/* -fcaller-saves *\/\n          OPT_fcanonical_system_headers = 530,       \/* -fcanonical-system-headers *\/\n          \/* OPT_fcf_protection = 531, *\/            \/* -fcf-protection *\/\n          OPT_fcf_protection_ = 532,                 \/* -fcf-protection= *\/\n          OPT_fcheck_array_temporaries = 533,        \/* -fcheck-array-temporaries *\/\n          OPT_fcheck_data_deps = 534,                \/* -fcheck-data-deps *\/\n          OPT_fcheck_new = 535,                      \/* -fcheck-new *\/\n          OPT_fcheck_pointer_bounds = 536,           \/* -fcheck-pointer-bounds *\/\n          OPT_fcheck_ = 537,                         \/* -fcheck= *\/\n          OPT_fchecking = 538,                       \/* -fchecking *\/\n          OPT_fchecking_ = 539,                      \/* -fchecking= *\/\n          OPT_fchkp_check_incomplete_type = 540,     \/* -fchkp-check-incomplete-type *\/\n          OPT_fchkp_check_read = 541,                \/* -fchkp-check-read *\/\n          OPT_fchkp_check_write = 542,               \/* -fchkp-check-write *\/\n          OPT_fchkp_first_field_has_own_bounds = 543,\/* -fchkp-first-field-has-own-bounds *\/\n          OPT_fchkp_flexible_struct_trailing_arrays = 544,\/* -fchkp-flexible-struct-trailing-arrays *\/\n          OPT_fchkp_instrument_calls = 545,          \/* -fchkp-instrument-calls *\/\n          OPT_fchkp_instrument_marked_only = 546,    \/* -fchkp-instrument-marked-only *\/\n          OPT_fchkp_narrow_bounds = 547,             \/* -fchkp-narrow-bounds *\/\n          OPT_fchkp_narrow_to_innermost_array = 548, \/* -fchkp-narrow-to-innermost-array *\/\n          OPT_fchkp_optimize = 549,                  \/* -fchkp-optimize *\/\n          OPT_fchkp_store_bounds = 550,              \/* -fchkp-store-bounds *\/\n          OPT_fchkp_treat_zero_dynamic_size_as_infinite = 551,\/* -fchkp-treat-zero-dynamic-size-as-infinite *\/\n          OPT_fchkp_use_fast_string_functions = 552, \/* -fchkp-use-fast-string-functions *\/\n          OPT_fchkp_use_nochk_string_functions = 553,\/* -fchkp-use-nochk-string-functions *\/\n          OPT_fchkp_use_static_bounds = 554,         \/* -fchkp-use-static-bounds *\/\n          OPT_fchkp_use_static_const_bounds = 555,   \/* -fchkp-use-static-const-bounds *\/\n          OPT_fchkp_use_wrappers = 556,              \/* -fchkp-use-wrappers *\/\n          OPT_fchkp_zero_input_bounds_for_main = 557,\/* -fchkp-zero-input-bounds-for-main *\/\n          OPT_fcilkplus_Undocumented = 558,          \/* -fcilkplus Undocumented *\/\n          OPT_fcoarray_ = 559,                       \/* -fcoarray= *\/\n          OPT_fcode_hoisting = 560,                  \/* -fcode-hoisting *\/\n          OPT_fcombine_stack_adjustments = 561,      \/* -fcombine-stack-adjustments *\/\n          OPT_fcommon = 562,                         \/* -fcommon *\/\n          OPT_fcompare_debug = 563,                  \/* -fcompare-debug *\/\n          OPT_fcompare_debug_second = 564,           \/* -fcompare-debug-second *\/\n          OPT_fcompare_debug_ = 565,                 \/* -fcompare-debug= *\/\n          OPT_fcompare_elim = 566,                   \/* -fcompare-elim *\/\n          OPT_fconcepts = 567,                       \/* -fconcepts *\/\n          OPT_fcond_mismatch = 568,                  \/* -fcond-mismatch *\/\n          OPT_fconserve_space = 569,                 \/* -fconserve-space *\/\n          OPT_fconserve_stack = 570,                 \/* -fconserve-stack *\/\n          OPT_fconstant_string_class_ = 571,         \/* -fconstant-string-class= *\/\n          OPT_fconstexpr_depth_ = 572,               \/* -fconstexpr-depth= *\/\n          OPT_fconstexpr_loop_limit_ = 573,          \/* -fconstexpr-loop-limit= *\/\n          OPT_fconvert_ = 574,                       \/* -fconvert= *\/\n          OPT_fcprop_registers = 575,                \/* -fcprop-registers *\/\n          OPT_fcray_pointer = 576,                   \/* -fcray-pointer *\/\n          OPT_fcrossjumping = 577,                   \/* -fcrossjumping *\/\n          OPT_fcse_follow_jumps = 578,               \/* -fcse-follow-jumps *\/\n          \/* OPT_fcse_skip_blocks = 579, *\/          \/* -fcse-skip-blocks *\/\n          OPT_fcx_fortran_rules = 580,               \/* -fcx-fortran-rules *\/\n          OPT_fcx_limited_range = 581,               \/* -fcx-limited-range *\/\n          OPT_fd_lines_as_code = 582,                \/* -fd-lines-as-code *\/\n          OPT_fd_lines_as_comments = 583,            \/* -fd-lines-as-comments *\/\n          OPT_fdata_sections = 584,                  \/* -fdata-sections *\/\n          OPT_fdbg_cnt_list = 585,                   \/* -fdbg-cnt-list *\/\n          OPT_fdbg_cnt_ = 586,                       \/* -fdbg-cnt= *\/\n          OPT_fdce = 587,                            \/* -fdce *\/\n          OPT_fdebug_cpp = 588,                      \/* -fdebug-cpp *\/\n          OPT_fdebug_prefix_map_ = 589,              \/* -fdebug-prefix-map= *\/\n          OPT_fdebug_types_section = 590,            \/* -fdebug-types-section *\/\n          OPT_fdec = 591,                            \/* -fdec *\/\n          OPT_fdec_intrinsic_ints = 592,             \/* -fdec-intrinsic-ints *\/\n          OPT_fdec_math = 593,                       \/* -fdec-math *\/\n          OPT_fdec_static = 594,                     \/* -fdec-static *\/\n          OPT_fdec_structure = 595,                  \/* -fdec-structure *\/\n          OPT_fdeclone_ctor_dtor = 596,              \/* -fdeclone-ctor-dtor *\/\n          OPT_fdeduce_init_list = 597,               \/* -fdeduce-init-list *\/\n          OPT_fdefault_double_8 = 598,               \/* -fdefault-double-8 *\/\n          \/* OPT_fdefault_inline = 599, *\/           \/* -fdefault-inline *\/\n          OPT_fdefault_integer_8 = 600,              \/* -fdefault-integer-8 *\/\n          OPT_fdefault_real_10 = 601,                \/* -fdefault-real-10 *\/\n          OPT_fdefault_real_16 = 602,                \/* -fdefault-real-16 *\/\n          OPT_fdefault_real_8 = 603,                 \/* -fdefault-real-8 *\/\n          OPT_fdefer_pop = 604,                      \/* -fdefer-pop *\/\n          OPT_fdelayed_branch = 605,                 \/* -fdelayed-branch *\/\n          OPT_fdelete_dead_exceptions = 606,         \/* -fdelete-dead-exceptions *\/\n          OPT_fdelete_null_pointer_checks = 607,     \/* -fdelete-null-pointer-checks *\/\n          OPT_fdevirtualize = 608,                   \/* -fdevirtualize *\/\n          OPT_fdevirtualize_at_ltrans = 609,         \/* -fdevirtualize-at-ltrans *\/\n          OPT_fdevirtualize_speculatively = 610,     \/* -fdevirtualize-speculatively *\/\n          \/* OPT_fdiagnostics_color = 611, *\/        \/* -fdiagnostics-color *\/\n          OPT_fdiagnostics_color_ = 612,             \/* -fdiagnostics-color= *\/\n          OPT_fdiagnostics_generate_patch = 613,     \/* -fdiagnostics-generate-patch *\/\n          OPT_fdiagnostics_parseable_fixits = 614,   \/* -fdiagnostics-parseable-fixits *\/\n          OPT_fdiagnostics_show_caret = 615,         \/* -fdiagnostics-show-caret *\/\n          OPT_fdiagnostics_show_location_ = 616,     \/* -fdiagnostics-show-location= *\/\n          OPT_fdiagnostics_show_option = 617,        \/* -fdiagnostics-show-option *\/\n          OPT_fdiagnostics_show_template_tree = 618, \/* -fdiagnostics-show-template-tree *\/\n          OPT_fdirectives_only = 619,                \/* -fdirectives-only *\/\n          OPT_fdisable_ = 620,                       \/* -fdisable- *\/\n          OPT_fdollar_ok = 621,                      \/* -fdollar-ok *\/\n          OPT_fdollars_in_identifiers = 622,         \/* -fdollars-in-identifiers *\/\n          OPT_fdse = 623,                            \/* -fdse *\/\n          OPT_fdump_ = 624,                          \/* -fdump- *\/\n          OPT_fdump_ada_spec = 625,                  \/* -fdump-ada-spec *\/\n          OPT_fdump_ada_spec_slim = 626,             \/* -fdump-ada-spec-slim *\/\n          \/* OPT_fdump_core = 627, *\/                \/* -fdump-core *\/\n          OPT_fdump_final_insns = 628,               \/* -fdump-final-insns *\/\n          OPT_fdump_final_insns_ = 629,              \/* -fdump-final-insns= *\/\n          OPT_fdump_fortran_optimized = 630,         \/* -fdump-fortran-optimized *\/\n          OPT_fdump_fortran_original = 631,          \/* -fdump-fortran-original *\/\n          OPT_fdump_go_spec_ = 632,                  \/* -fdump-go-spec= *\/\n          OPT_fdump_internal_locations = 633,        \/* -fdump-internal-locations *\/\n          OPT_fdump_noaddr = 634,                    \/* -fdump-noaddr *\/\n          \/* OPT_fdump_parse_tree = 635, *\/          \/* -fdump-parse-tree *\/\n          OPT_fdump_passes = 636,                    \/* -fdump-passes *\/\n          OPT_fdump_unnumbered = 637,                \/* -fdump-unnumbered *\/\n          OPT_fdump_unnumbered_links = 638,          \/* -fdump-unnumbered-links *\/\n          OPT_fdwarf2_cfi_asm = 639,                 \/* -fdwarf2-cfi-asm *\/\n          OPT_fearly_inlining = 640,                 \/* -fearly-inlining *\/\n          OPT_felide_constructors = 641,             \/* -felide-constructors *\/\n          OPT_felide_type = 642,                     \/* -felide-type *\/\n          \/* OPT_feliminate_dwarf2_dups = 643, *\/    \/* -feliminate-dwarf2-dups *\/\n          OPT_feliminate_unused_debug_symbols = 644, \/* -feliminate-unused-debug-symbols *\/\n          OPT_feliminate_unused_debug_types = 645,   \/* -feliminate-unused-debug-types *\/\n          OPT_femit_class_debug_always = 646,        \/* -femit-class-debug-always *\/\n          OPT_femit_struct_debug_baseonly = 647,     \/* -femit-struct-debug-baseonly *\/\n          OPT_femit_struct_debug_detailed_ = 648,    \/* -femit-struct-debug-detailed= *\/\n          OPT_femit_struct_debug_reduced = 649,      \/* -femit-struct-debug-reduced *\/\n          OPT_fenable_ = 650,                        \/* -fenable- *\/\n          OPT_fenforce_eh_specs = 651,               \/* -fenforce-eh-specs *\/\n          \/* OPT_fenum_int_equiv = 652, *\/           \/* -fenum-int-equiv *\/\n          OPT_fexceptions = 653,                     \/* -fexceptions *\/\n          OPT_fexcess_precision_ = 654,              \/* -fexcess-precision= *\/\n          OPT_fexec_charset_ = 655,                  \/* -fexec-charset= *\/\n          OPT_fexpensive_optimizations = 656,        \/* -fexpensive-optimizations *\/\n          OPT_fext_numeric_literals = 657,           \/* -fext-numeric-literals *\/\n          OPT_fextended_identifiers = 658,           \/* -fextended-identifiers *\/\n          OPT_fextern_tls_init = 659,                \/* -fextern-tls-init *\/\n          OPT_fexternal_blas = 660,                  \/* -fexternal-blas *\/\n          \/* OPT_fexternal_templates = 661, *\/       \/* -fexternal-templates *\/\n          OPT_ff2c = 662,                            \/* -ff2c *\/\n          OPT_ffast_math = 663,                      \/* -ffast-math *\/\n          OPT_ffat_lto_objects = 664,                \/* -ffat-lto-objects *\/\n          OPT_ffinite_math_only = 665,               \/* -ffinite-math-only *\/\n          OPT_ffixed_ = 666,                         \/* -ffixed- *\/\n          OPT_ffixed_form = 667,                     \/* -ffixed-form *\/\n          OPT_ffixed_line_length_ = 668,             \/* -ffixed-line-length- *\/\n          OPT_ffixed_line_length_none = 669,         \/* -ffixed-line-length-none *\/\n          OPT_ffloat_store = 670,                    \/* -ffloat-store *\/\n          OPT_ffor_scope = 671,                      \/* -ffor-scope *\/\n          \/* OPT_fforce_addr = 672, *\/               \/* -fforce-addr *\/\n          OPT_fforward_propagate = 673,              \/* -fforward-propagate *\/\n          OPT_ffp_contract_ = 674,                   \/* -ffp-contract= *\/\n          OPT_ffp_int_builtin_inexact = 675,         \/* -ffp-int-builtin-inexact *\/\n          OPT_ffpe_summary_ = 676,                   \/* -ffpe-summary= *\/\n          OPT_ffpe_trap_ = 677,                      \/* -ffpe-trap= *\/\n          OPT_ffree_form = 678,                      \/* -ffree-form *\/\n          OPT_ffree_line_length_ = 679,              \/* -ffree-line-length- *\/\n          OPT_ffree_line_length_none = 680,          \/* -ffree-line-length-none *\/\n          OPT_ffreestanding = 681,                   \/* -ffreestanding *\/\n          OPT_ffriend_injection = 682,               \/* -ffriend-injection *\/\n          OPT_ffrontend_loop_interchange = 683,      \/* -ffrontend-loop-interchange *\/\n          OPT_ffrontend_optimize = 684,              \/* -ffrontend-optimize *\/\n          OPT_ffunction_cse = 685,                   \/* -ffunction-cse *\/\n          OPT_ffunction_sections = 686,              \/* -ffunction-sections *\/\n          OPT_fgcse = 687,                           \/* -fgcse *\/\n          OPT_fgcse_after_reload = 688,              \/* -fgcse-after-reload *\/\n          OPT_fgcse_las = 689,                       \/* -fgcse-las *\/\n          OPT_fgcse_lm = 690,                        \/* -fgcse-lm *\/\n          OPT_fgcse_sm = 691,                        \/* -fgcse-sm *\/\n          OPT_fgimple = 692,                         \/* -fgimple *\/\n          OPT_fgnat_encodings_ = 693,                \/* -fgnat-encodings= *\/\n          OPT_fgnu_keywords = 694,                   \/* -fgnu-keywords *\/\n          OPT_fgnu_runtime = 695,                    \/* -fgnu-runtime *\/\n          OPT_fgnu_tm = 696,                         \/* -fgnu-tm *\/\n          OPT_fgnu_unique = 697,                     \/* -fgnu-unique *\/\n          OPT_fgnu89_inline = 698,                   \/* -fgnu89-inline *\/\n          OPT_fgo_c_header_ = 699,                   \/* -fgo-c-header= *\/\n          OPT_fgo_check_divide_overflow = 700,       \/* -fgo-check-divide-overflow *\/\n          OPT_fgo_check_divide_zero = 701,           \/* -fgo-check-divide-zero *\/\n          OPT_fgo_compiling_runtime = 702,           \/* -fgo-compiling-runtime *\/\n          OPT_fgo_debug_escape = 703,                \/* -fgo-debug-escape *\/\n          OPT_fgo_dump_ = 704,                       \/* -fgo-dump- *\/\n          OPT_fgo_optimize_ = 705,                   \/* -fgo-optimize- *\/\n          OPT_fgo_pkgpath_ = 706,                    \/* -fgo-pkgpath= *\/\n          OPT_fgo_prefix_ = 707,                     \/* -fgo-prefix= *\/\n          OPT_fgo_relative_import_path_ = 708,       \/* -fgo-relative-import-path= *\/\n          OPT_fgraphite = 709,                       \/* -fgraphite *\/\n          OPT_fgraphite_identity = 710,              \/* -fgraphite-identity *\/\n          OPT_fguess_branch_probability = 711,       \/* -fguess-branch-probability *\/\n          \/* OPT_fguiding_decls = 712, *\/            \/* -fguiding-decls *\/\n          \/* OPT_fhandle_exceptions = 713, *\/        \/* -fhandle-exceptions *\/\n          \/* OPT_fhelp = 714, *\/                     \/* -fhelp *\/\n          \/* OPT_fhelp_ = 715, *\/                    \/* -fhelp= *\/\n          OPT_fhoist_adjacent_loads = 716,           \/* -fhoist-adjacent-loads *\/\n          \/* OPT_fhonor_std = 717, *\/                \/* -fhonor-std *\/\n          OPT_fhosted = 718,                         \/* -fhosted *\/\n          \/* OPT_fhuge_objects = 719, *\/             \/* -fhuge-objects *\/\n          OPT_fident = 720,                          \/* -fident *\/\n          OPT_fif_conversion = 721,                  \/* -fif-conversion *\/\n          OPT_fif_conversion2 = 722,                 \/* -fif-conversion2 *\/\n          OPT_fimplement_inlines = 723,              \/* -fimplement-inlines *\/\n          OPT_fimplicit_inline_templates = 724,      \/* -fimplicit-inline-templates *\/\n          OPT_fimplicit_none = 725,                  \/* -fimplicit-none *\/\n          OPT_fimplicit_templates = 726,             \/* -fimplicit-templates *\/\n          OPT_findirect_inlining = 727,              \/* -findirect-inlining *\/\n          OPT_finhibit_size_directive = 728,         \/* -finhibit-size-directive *\/\n          OPT_finit_character_ = 729,                \/* -finit-character= *\/\n          OPT_finit_derived = 730,                   \/* -finit-derived *\/\n          OPT_finit_integer_ = 731,                  \/* -finit-integer= *\/\n          OPT_finit_local_zero = 732,                \/* -finit-local-zero *\/\n          OPT_finit_logical_ = 733,                  \/* -finit-logical= *\/\n          OPT_finit_real_ = 734,                     \/* -finit-real= *\/\n          OPT_finline = 735,                         \/* -finline *\/\n          OPT_finline_atomics = 736,                 \/* -finline-atomics *\/\n          OPT_finline_functions = 737,               \/* -finline-functions *\/\n          OPT_finline_functions_called_once = 738,   \/* -finline-functions-called-once *\/\n          \/* OPT_finline_limit_ = 739, *\/            \/* -finline-limit- *\/\n          OPT_finline_limit_ = 740,                  \/* -finline-limit= *\/\n          OPT_finline_matmul_limit_ = 741,           \/* -finline-matmul-limit= *\/\n          OPT_finline_small_functions = 742,         \/* -finline-small-functions *\/\n          OPT_finput_charset_ = 743,                 \/* -finput-charset= *\/\n          OPT_finstrument_functions = 744,           \/* -finstrument-functions *\/\n          OPT_finstrument_functions_exclude_file_list_ = 745,\/* -finstrument-functions-exclude-file-list= *\/\n          OPT_finstrument_functions_exclude_function_list_ = 746,\/* -finstrument-functions-exclude-function-list= *\/\n          OPT_finteger_4_integer_8 = 747,            \/* -finteger-4-integer-8 *\/\n          OPT_fintrinsic_modules_path = 748,         \/* -fintrinsic-modules-path *\/\n          OPT_fintrinsic_modules_path_ = 749,        \/* -fintrinsic-modules-path= *\/\n          OPT_fipa_bit_cp = 750,                     \/* -fipa-bit-cp *\/\n          OPT_fipa_cp = 751,                         \/* -fipa-cp *\/\n          \/* OPT_fipa_cp_alignment = 752, *\/         \/* -fipa-cp-alignment *\/\n          OPT_fipa_cp_clone = 753,                   \/* -fipa-cp-clone *\/\n          OPT_fipa_icf = 754,                        \/* -fipa-icf *\/\n          OPT_fipa_icf_functions = 755,              \/* -fipa-icf-functions *\/\n          OPT_fipa_icf_variables = 756,              \/* -fipa-icf-variables *\/\n          \/* OPT_fipa_matrix_reorg = 757, *\/         \/* -fipa-matrix-reorg *\/\n          OPT_fipa_profile = 758,                    \/* -fipa-profile *\/\n          OPT_fipa_pta = 759,                        \/* -fipa-pta *\/\n          OPT_fipa_pure_const = 760,                 \/* -fipa-pure-const *\/\n          OPT_fipa_ra = 761,                         \/* -fipa-ra *\/\n          OPT_fipa_reference = 762,                  \/* -fipa-reference *\/\n          OPT_fipa_sra = 763,                        \/* -fipa-sra *\/\n          \/* OPT_fipa_struct_reorg = 764, *\/         \/* -fipa-struct-reorg *\/\n          OPT_fipa_vrp = 765,                        \/* -fipa-vrp *\/\n          OPT_fira_algorithm_ = 766,                 \/* -fira-algorithm= *\/\n          OPT_fira_hoist_pressure = 767,             \/* -fira-hoist-pressure *\/\n          OPT_fira_loop_pressure = 768,              \/* -fira-loop-pressure *\/\n          OPT_fira_region_ = 769,                    \/* -fira-region= *\/\n          OPT_fira_share_save_slots = 770,           \/* -fira-share-save-slots *\/\n          OPT_fira_share_spill_slots = 771,          \/* -fira-share-spill-slots *\/\n          OPT_fira_verbose_ = 772,                   \/* -fira-verbose= *\/\n          OPT_fisolate_erroneous_paths_attribute = 773,\/* -fisolate-erroneous-paths-attribute *\/\n          OPT_fisolate_erroneous_paths_dereference = 774,\/* -fisolate-erroneous-paths-dereference *\/\n          OPT_fivar_visibility_ = 775,               \/* -fivar-visibility= *\/\n          OPT_fivopts = 776,                         \/* -fivopts *\/\n          OPT_fjump_tables = 777,                    \/* -fjump-tables *\/\n          OPT_fkeep_gc_roots_live = 778,             \/* -fkeep-gc-roots-live *\/\n          OPT_fkeep_inline_dllexport = 779,          \/* -fkeep-inline-dllexport *\/\n          OPT_fkeep_inline_functions = 780,          \/* -fkeep-inline-functions *\/\n          OPT_fkeep_static_consts = 781,             \/* -fkeep-static-consts *\/\n          OPT_fkeep_static_functions = 782,          \/* -fkeep-static-functions *\/\n          \/* OPT_flabels_ok = 783, *\/                \/* -flabels-ok *\/\n          OPT_flax_vector_conversions = 784,         \/* -flax-vector-conversions *\/\n          OPT_fleading_underscore = 785,             \/* -fleading-underscore *\/\n          OPT_flifetime_dse = 786,                   \/* -flifetime-dse *\/\n          OPT_flifetime_dse_ = 787,                  \/* -flifetime-dse= *\/\n          OPT_flimit_function_alignment = 788,       \/* -flimit-function-alignment *\/\n          OPT_flinker_output_ = 789,                 \/* -flinker-output= *\/\n          OPT_flive_range_shrinkage = 790,           \/* -flive-range-shrinkage *\/\n          OPT_flocal_ivars = 791,                    \/* -flocal-ivars *\/\n          \/* OPT_floop_block = 792, *\/               \/* -floop-block *\/\n          \/* OPT_floop_flatten = 793, *\/             \/* -floop-flatten *\/\n          OPT_floop_interchange = 794,               \/* -floop-interchange *\/\n          OPT_floop_nest_optimize = 795,             \/* -floop-nest-optimize *\/\n          \/* OPT_floop_optimize = 796, *\/            \/* -floop-optimize *\/\n          OPT_floop_parallelize_all = 797,           \/* -floop-parallelize-all *\/\n          \/* OPT_floop_strip_mine = 798, *\/          \/* -floop-strip-mine *\/\n          OPT_floop_unroll_and_jam = 799,            \/* -floop-unroll-and-jam *\/\n          OPT_flra_remat = 800,                      \/* -flra-remat *\/\n          OPT_flto = 801,                            \/* -flto *\/\n          OPT_flto_compression_level_ = 802,         \/* -flto-compression-level= *\/\n          OPT_flto_odr_type_merging = 803,           \/* -flto-odr-type-merging *\/\n          OPT_flto_partition_ = 804,                 \/* -flto-partition= *\/\n          OPT_flto_report = 805,                     \/* -flto-report *\/\n          OPT_flto_report_wpa = 806,                 \/* -flto-report-wpa *\/\n          OPT_flto_ = 807,                           \/* -flto= *\/\n          OPT_fltrans = 808,                         \/* -fltrans *\/\n          OPT_fltrans_output_list_ = 809,            \/* -fltrans-output-list= *\/\n          OPT_fmath_errno = 810,                     \/* -fmath-errno *\/\n          OPT_fmax_array_constructor_ = 811,         \/* -fmax-array-constructor= *\/\n          OPT_fmax_errors_ = 812,                    \/* -fmax-errors= *\/\n          OPT_fmax_identifier_length_ = 813,         \/* -fmax-identifier-length= *\/\n          OPT_fmax_stack_var_size_ = 814,            \/* -fmax-stack-var-size= *\/\n          OPT_fmax_subrecord_length_ = 815,          \/* -fmax-subrecord-length= *\/\n          OPT_fmem_report = 816,                     \/* -fmem-report *\/\n          OPT_fmem_report_wpa = 817,                 \/* -fmem-report-wpa *\/\n          OPT_fmerge_all_constants = 818,            \/* -fmerge-all-constants *\/\n          OPT_fmerge_constants = 819,                \/* -fmerge-constants *\/\n          OPT_fmerge_debug_strings = 820,            \/* -fmerge-debug-strings *\/\n          OPT_fmessage_length_ = 821,                \/* -fmessage-length= *\/\n          OPT_fmodule_private = 822,                 \/* -fmodule-private *\/\n          OPT_fmodulo_sched = 823,                   \/* -fmodulo-sched *\/\n          OPT_fmodulo_sched_allow_regmoves = 824,    \/* -fmodulo-sched-allow-regmoves *\/\n          OPT_fmove_loop_invariants = 825,           \/* -fmove-loop-invariants *\/\n          OPT_fms_extensions = 826,                  \/* -fms-extensions *\/\n          \/* OPT_fmudflap = 827, *\/                  \/* -fmudflap *\/\n          \/* OPT_fmudflapir = 828, *\/                \/* -fmudflapir *\/\n          \/* OPT_fmudflapth = 829, *\/                \/* -fmudflapth *\/\n          \/* OPT_fname_mangling_version_ = 830, *\/   \/* -fname-mangling-version- *\/\n          \/* OPT_fnew_abi = 831, *\/                  \/* -fnew-abi *\/\n          OPT_fnew_inheriting_ctors = 832,           \/* -fnew-inheriting-ctors *\/\n          OPT_fnew_ttp_matching = 833,               \/* -fnew-ttp-matching *\/\n          OPT_fnext_runtime = 834,                   \/* -fnext-runtime *\/\n          OPT_fnil_receivers = 835,                  \/* -fnil-receivers *\/\n          OPT_fnon_call_exceptions = 836,            \/* -fnon-call-exceptions *\/\n          OPT_fnonansi_builtins = 837,               \/* -fnonansi-builtins *\/\n          \/* OPT_fnonnull_objects = 838, *\/          \/* -fnonnull-objects *\/\n          OPT_fnothrow_opt = 839,                    \/* -fnothrow-opt *\/\n          OPT_fobjc_abi_version_ = 840,              \/* -fobjc-abi-version= *\/\n          OPT_fobjc_call_cxx_cdtors = 841,           \/* -fobjc-call-cxx-cdtors *\/\n          OPT_fobjc_direct_dispatch = 842,           \/* -fobjc-direct-dispatch *\/\n          OPT_fobjc_exceptions = 843,                \/* -fobjc-exceptions *\/\n          OPT_fobjc_gc = 844,                        \/* -fobjc-gc *\/\n          OPT_fobjc_nilcheck = 845,                  \/* -fobjc-nilcheck *\/\n          OPT_fobjc_sjlj_exceptions = 846,           \/* -fobjc-sjlj-exceptions *\/\n          OPT_fobjc_std_objc1 = 847,                 \/* -fobjc-std=objc1 *\/\n          OPT_foffload_abi_ = 848,                   \/* -foffload-abi= *\/\n          OPT_foffload_ = 849,                       \/* -foffload= *\/\n          OPT_fomit_frame_pointer = 850,             \/* -fomit-frame-pointer *\/\n          OPT_fopenacc = 851,                        \/* -fopenacc *\/\n          OPT_fopenacc_dim_ = 852,                   \/* -fopenacc-dim= *\/\n          OPT_fopenmp = 853,                         \/* -fopenmp *\/\n          OPT_fopenmp_simd = 854,                    \/* -fopenmp-simd *\/\n          OPT_foperator_names = 855,                 \/* -foperator-names *\/\n          OPT_fopt_info = 856,                       \/* -fopt-info *\/\n          OPT_fopt_info_ = 857,                      \/* -fopt-info- *\/\n          \/* OPT_foptimize_register_move = 858, *\/   \/* -foptimize-register-move *\/\n          OPT_foptimize_sibling_calls = 859,         \/* -foptimize-sibling-calls *\/\n          OPT_foptimize_strlen = 860,                \/* -foptimize-strlen *\/\n          \/* OPT_foptional_diags = 861, *\/           \/* -foptional-diags *\/\n          OPT_fpack_derived = 862,                   \/* -fpack-derived *\/\n          OPT_fpack_struct = 863,                    \/* -fpack-struct *\/\n          OPT_fpack_struct_ = 864,                   \/* -fpack-struct= *\/\n          OPT_fpartial_inlining = 865,               \/* -fpartial-inlining *\/\n          OPT_fpatchable_function_entry_ = 866,      \/* -fpatchable-function-entry= *\/\n          OPT_fpcc_struct_return = 867,              \/* -fpcc-struct-return *\/\n          OPT_fpch_deps = 868,                       \/* -fpch-deps *\/\n          OPT_fpch_preprocess = 869,                 \/* -fpch-preprocess *\/\n          OPT_fpeel_loops = 870,                     \/* -fpeel-loops *\/\n          OPT_fpeephole = 871,                       \/* -fpeephole *\/\n          OPT_fpeephole2 = 872,                      \/* -fpeephole2 *\/\n          OPT_fpermissive = 873,                     \/* -fpermissive *\/\n          OPT_fpermitted_flt_eval_methods_ = 874,    \/* -fpermitted-flt-eval-methods= *\/\n          OPT_fpic = 875,                            \/* -fpic *\/\n          OPT_fpie = 876,                            \/* -fpie *\/\n          OPT_fplan9_extensions = 877,               \/* -fplan9-extensions *\/\n          OPT_fplt = 878,                            \/* -fplt *\/\n          OPT_fplugin_arg_ = 879,                    \/* -fplugin-arg- *\/\n          OPT_fplugin_ = 880,                        \/* -fplugin= *\/\n          OPT_fpost_ipa_mem_report = 881,            \/* -fpost-ipa-mem-report *\/\n          OPT_fpre_ipa_mem_report = 882,             \/* -fpre-ipa-mem-report *\/\n          OPT_fpredictive_commoning = 883,           \/* -fpredictive-commoning *\/\n          OPT_fprefetch_loop_arrays = 884,           \/* -fprefetch-loop-arrays *\/\n          OPT_fpreprocessed = 885,                   \/* -fpreprocessed *\/\n          OPT_fpretty_templates = 886,               \/* -fpretty-templates *\/\n          OPT_fprintf_return_value = 887,            \/* -fprintf-return-value *\/\n          OPT_fprofile = 888,                        \/* -fprofile *\/\n          OPT_fprofile_abs_path = 889,               \/* -fprofile-abs-path *\/\n          OPT_fprofile_arcs = 890,                   \/* -fprofile-arcs *\/\n          OPT_fprofile_correction = 891,             \/* -fprofile-correction *\/\n          OPT_fprofile_dir_ = 892,                   \/* -fprofile-dir= *\/\n          OPT_fprofile_generate = 893,               \/* -fprofile-generate *\/\n          OPT_fprofile_generate_ = 894,              \/* -fprofile-generate= *\/\n          OPT_fprofile_reorder_functions = 895,      \/* -fprofile-reorder-functions *\/\n          OPT_fprofile_report = 896,                 \/* -fprofile-report *\/\n          OPT_fprofile_update_ = 897,                \/* -fprofile-update= *\/\n          OPT_fprofile_use = 898,                    \/* -fprofile-use *\/\n          OPT_fprofile_use_ = 899,                   \/* -fprofile-use= *\/\n          OPT_fprofile_values = 900,                 \/* -fprofile-values *\/\n          OPT_fprotect_parens = 901,                 \/* -fprotect-parens *\/\n          OPT_frandom_seed = 902,                    \/* -frandom-seed *\/\n          OPT_frandom_seed_ = 903,                   \/* -frandom-seed= *\/\n          OPT_frange_check = 904,                    \/* -frange-check *\/\n          OPT_freal_4_real_10 = 905,                 \/* -freal-4-real-10 *\/\n          OPT_freal_4_real_16 = 906,                 \/* -freal-4-real-16 *\/\n          OPT_freal_4_real_8 = 907,                  \/* -freal-4-real-8 *\/\n          OPT_freal_8_real_10 = 908,                 \/* -freal-8-real-10 *\/\n          OPT_freal_8_real_16 = 909,                 \/* -freal-8-real-16 *\/\n          OPT_freal_8_real_4 = 910,                  \/* -freal-8-real-4 *\/\n          OPT_frealloc_lhs = 911,                    \/* -frealloc-lhs *\/\n          OPT_freciprocal_math = 912,                \/* -freciprocal-math *\/\n          OPT_frecord_gcc_switches = 913,            \/* -frecord-gcc-switches *\/\n          OPT_frecord_marker_4 = 914,                \/* -frecord-marker=4 *\/\n          OPT_frecord_marker_8 = 915,                \/* -frecord-marker=8 *\/\n          OPT_frecursive = 916,                      \/* -frecursive *\/\n          OPT_free = 917,                            \/* -free *\/\n          OPT_freg_struct_return = 918,              \/* -freg-struct-return *\/\n          \/* OPT_fregmove = 919, *\/                  \/* -fregmove *\/\n          OPT_frename_registers = 920,               \/* -frename-registers *\/\n          OPT_freorder_blocks = 921,                 \/* -freorder-blocks *\/\n          OPT_freorder_blocks_algorithm_ = 922,      \/* -freorder-blocks-algorithm= *\/\n          OPT_freorder_blocks_and_partition = 923,   \/* -freorder-blocks-and-partition *\/\n          OPT_freorder_functions = 924,              \/* -freorder-functions *\/\n          OPT_frepack_arrays = 925,                  \/* -frepack-arrays *\/\n          OPT_freplace_objc_classes = 926,           \/* -freplace-objc-classes *\/\n          OPT_frepo = 927,                           \/* -frepo *\/\n          OPT_freport_bug = 928,                     \/* -freport-bug *\/\n          OPT_frequire_return_statement = 929,       \/* -frequire-return-statement *\/\n          OPT_frerun_cse_after_loop = 930,           \/* -frerun-cse-after-loop *\/\n          \/* OPT_frerun_loop_opt = 931, *\/           \/* -frerun-loop-opt *\/\n          OPT_freschedule_modulo_scheduled_loops = 932,\/* -freschedule-modulo-scheduled-loops *\/\n          OPT_fresolution_ = 933,                    \/* -fresolution= *\/\n          OPT_frounding_math = 934,                  \/* -frounding-math *\/\n          OPT_frtti = 935,                           \/* -frtti *\/\n          OPT_fsanitize_address_use_after_scope = 936,\/* -fsanitize-address-use-after-scope *\/\n          OPT_fsanitize_coverage_ = 937,             \/* -fsanitize-coverage= *\/\n          OPT_fsanitize_recover = 938,               \/* -fsanitize-recover *\/\n          OPT_fsanitize_recover_ = 939,              \/* -fsanitize-recover= *\/\n          OPT_fsanitize_sections_ = 940,             \/* -fsanitize-sections= *\/\n          OPT_fsanitize_undefined_trap_on_error = 941,\/* -fsanitize-undefined-trap-on-error *\/\n          OPT_fsanitize_ = 942,                      \/* -fsanitize= *\/\n          OPT_fsched_critical_path_heuristic = 943,  \/* -fsched-critical-path-heuristic *\/\n          OPT_fsched_dep_count_heuristic = 944,      \/* -fsched-dep-count-heuristic *\/\n          OPT_fsched_group_heuristic = 945,          \/* -fsched-group-heuristic *\/\n          OPT_fsched_interblock = 946,               \/* -fsched-interblock *\/\n          OPT_fsched_last_insn_heuristic = 947,      \/* -fsched-last-insn-heuristic *\/\n          OPT_fsched_pressure = 948,                 \/* -fsched-pressure *\/\n          OPT_fsched_rank_heuristic = 949,           \/* -fsched-rank-heuristic *\/\n          OPT_fsched_spec = 950,                     \/* -fsched-spec *\/\n          OPT_fsched_spec_insn_heuristic = 951,      \/* -fsched-spec-insn-heuristic *\/\n          OPT_fsched_spec_load = 952,                \/* -fsched-spec-load *\/\n          OPT_fsched_spec_load_dangerous = 953,      \/* -fsched-spec-load-dangerous *\/\n          OPT_fsched_stalled_insns = 954,            \/* -fsched-stalled-insns *\/\n          OPT_fsched_stalled_insns_dep = 955,        \/* -fsched-stalled-insns-dep *\/\n          OPT_fsched_stalled_insns_dep_ = 956,       \/* -fsched-stalled-insns-dep= *\/\n          OPT_fsched_stalled_insns_ = 957,           \/* -fsched-stalled-insns= *\/\n          OPT_fsched_verbose_ = 958,                 \/* -fsched-verbose= *\/\n          OPT_fsched2_use_superblocks = 959,         \/* -fsched2-use-superblocks *\/\n          \/* OPT_fsched2_use_traces = 960, *\/        \/* -fsched2-use-traces *\/\n          OPT_fschedule_fusion = 961,                \/* -fschedule-fusion *\/\n          OPT_fschedule_insns = 962,                 \/* -fschedule-insns *\/\n          OPT_fschedule_insns2 = 963,                \/* -fschedule-insns2 *\/\n          OPT_fsecond_underscore = 964,              \/* -fsecond-underscore *\/\n          OPT_fsection_anchors = 965,                \/* -fsection-anchors *\/\n          \/* OPT_fsee = 966, *\/                      \/* -fsee *\/\n          OPT_fsel_sched_pipelining = 967,           \/* -fsel-sched-pipelining *\/\n          OPT_fsel_sched_pipelining_outer_loops = 968,\/* -fsel-sched-pipelining-outer-loops *\/\n          OPT_fsel_sched_reschedule_pipelined = 969, \/* -fsel-sched-reschedule-pipelined *\/\n          OPT_fselective_scheduling = 970,           \/* -fselective-scheduling *\/\n          OPT_fselective_scheduling2 = 971,          \/* -fselective-scheduling2 *\/\n          OPT_fself_test_ = 972,                     \/* -fself-test= *\/\n          OPT_fsemantic_interposition = 973,         \/* -fsemantic-interposition *\/\n          OPT_fshort_enums = 974,                    \/* -fshort-enums *\/\n          OPT_fshort_wchar = 975,                    \/* -fshort-wchar *\/\n          OPT_fshow_column = 976,                    \/* -fshow-column *\/\n          OPT_fshrink_wrap = 977,                    \/* -fshrink-wrap *\/\n          OPT_fshrink_wrap_separate = 978,           \/* -fshrink-wrap-separate *\/\n          OPT_fsign_zero = 979,                      \/* -fsign-zero *\/\n          OPT_fsignaling_nans = 980,                 \/* -fsignaling-nans *\/\n          OPT_fsigned_bitfields = 981,               \/* -fsigned-bitfields *\/\n          OPT_fsigned_char = 982,                    \/* -fsigned-char *\/\n          OPT_fsigned_zeros = 983,                   \/* -fsigned-zeros *\/\n          OPT_fsimd_cost_model_ = 984,               \/* -fsimd-cost-model= *\/\n          OPT_fsingle_precision_constant = 985,      \/* -fsingle-precision-constant *\/\n          OPT_fsized_deallocation = 986,             \/* -fsized-deallocation *\/\n          OPT_fsplit_ivs_in_unroller = 987,          \/* -fsplit-ivs-in-unroller *\/\n          OPT_fsplit_loops = 988,                    \/* -fsplit-loops *\/\n          OPT_fsplit_paths = 989,                    \/* -fsplit-paths *\/\n          OPT_fsplit_stack = 990,                    \/* -fsplit-stack *\/\n          OPT_fsplit_wide_types = 991,               \/* -fsplit-wide-types *\/\n          \/* OPT_fsquangle = 992, *\/                 \/* -fsquangle *\/\n          OPT_fssa_backprop = 993,                   \/* -fssa-backprop *\/\n          OPT_fssa_phiopt = 994,                     \/* -fssa-phiopt *\/\n          OPT_fsso_struct_ = 995,                    \/* -fsso-struct= *\/\n          OPT_fstack_arrays = 996,                   \/* -fstack-arrays *\/\n          \/* OPT_fstack_check = 997, *\/              \/* -fstack-check *\/\n          OPT_fstack_check_ = 998,                   \/* -fstack-check= *\/\n          OPT_fstack_clash_protection = 999,         \/* -fstack-clash-protection *\/\n          OPT_fstack_limit = 1000,                   \/* -fstack-limit *\/\n          OPT_fstack_limit_register_ = 1001,         \/* -fstack-limit-register= *\/\n          OPT_fstack_limit_symbol_ = 1002,           \/* -fstack-limit-symbol= *\/\n          OPT_fstack_protector = 1003,               \/* -fstack-protector *\/\n          OPT_fstack_protector_all = 1004,           \/* -fstack-protector-all *\/\n          OPT_fstack_protector_explicit = 1005,      \/* -fstack-protector-explicit *\/\n          OPT_fstack_protector_strong = 1006,        \/* -fstack-protector-strong *\/\n          OPT_fstack_reuse_ = 1007,                  \/* -fstack-reuse= *\/\n          OPT_fstack_usage = 1008,                   \/* -fstack-usage *\/\n          OPT_fstats = 1009,                         \/* -fstats *\/\n          OPT_fstdarg_opt = 1010,                    \/* -fstdarg-opt *\/\n          OPT_fstore_merging = 1011,                 \/* -fstore-merging *\/\n          \/* OPT_fstrength_reduce = 1012, *\/         \/* -fstrength-reduce *\/\n          OPT_fstrict_aliasing = 1013,               \/* -fstrict-aliasing *\/\n          OPT_fstrict_enums = 1014,                  \/* -fstrict-enums *\/\n          \/* OPT_fstrict_overflow = 1015, *\/         \/* -fstrict-overflow *\/\n          \/* OPT_fstrict_prototype = 1016, *\/        \/* -fstrict-prototype *\/\n          OPT_fstrict_volatile_bitfields = 1017,     \/* -fstrict-volatile-bitfields *\/\n          \/* OPT_fstrong_eval_order = 1018, *\/       \/* -fstrong-eval-order *\/\n          OPT_fstrong_eval_order_ = 1019,            \/* -fstrong-eval-order= *\/\n          OPT_fsync_libcalls = 1020,                 \/* -fsync-libcalls *\/\n          OPT_fsyntax_only = 1021,                   \/* -fsyntax-only *\/\n          OPT_ftabstop_ = 1022,                      \/* -ftabstop= *\/\n          \/* OPT_ftarget_help = 1023, *\/             \/* -ftarget-help *\/\n          OPT_ftemplate_backtrace_limit_ = 1024,     \/* -ftemplate-backtrace-limit= *\/\n          \/* OPT_ftemplate_depth_ = 1025, *\/         \/* -ftemplate-depth- *\/\n          OPT_ftemplate_depth_ = 1026,               \/* -ftemplate-depth= *\/\n          OPT_ftest_coverage = 1027,                 \/* -ftest-coverage *\/\n          OPT_ftest_forall_temp = 1028,              \/* -ftest-forall-temp *\/\n          \/* OPT_fthis_is_variable = 1029, *\/        \/* -fthis-is-variable *\/\n          OPT_fthread_jumps = 1030,                  \/* -fthread-jumps *\/\n          OPT_fthreadsafe_statics = 1031,            \/* -fthreadsafe-statics *\/\n          OPT_ftime_report = 1032,                   \/* -ftime-report *\/\n          OPT_ftime_report_details = 1033,           \/* -ftime-report-details *\/\n          OPT_ftls_model_ = 1034,                    \/* -ftls-model= *\/\n          OPT_ftoplevel_reorder = 1035,              \/* -ftoplevel-reorder *\/\n          OPT_ftracer = 1036,                        \/* -ftracer *\/\n          OPT_ftrack_macro_expansion = 1037,         \/* -ftrack-macro-expansion *\/\n          OPT_ftrack_macro_expansion_ = 1038,        \/* -ftrack-macro-expansion= *\/\n          OPT_ftrampolines = 1039,                   \/* -ftrampolines *\/\n          OPT_ftrapping_math = 1040,                 \/* -ftrapping-math *\/\n          OPT_ftrapv = 1041,                         \/* -ftrapv *\/\n          OPT_ftree_bit_ccp = 1042,                  \/* -ftree-bit-ccp *\/\n          OPT_ftree_builtin_call_dce = 1043,         \/* -ftree-builtin-call-dce *\/\n          OPT_ftree_ccp = 1044,                      \/* -ftree-ccp *\/\n          OPT_ftree_ch = 1045,                       \/* -ftree-ch *\/\n          \/* OPT_ftree_coalesce_inlined_vars = 1046, *\/\/* -ftree-coalesce-inlined-vars *\/\n          OPT_ftree_coalesce_vars = 1047,            \/* -ftree-coalesce-vars *\/\n          OPT_ftree_copy_prop = 1048,                \/* -ftree-copy-prop *\/\n          \/* OPT_ftree_copyrename = 1049, *\/         \/* -ftree-copyrename *\/\n          OPT_ftree_cselim = 1050,                   \/* -ftree-cselim *\/\n          OPT_ftree_dce = 1051,                      \/* -ftree-dce *\/\n          OPT_ftree_dominator_opts = 1052,           \/* -ftree-dominator-opts *\/\n          OPT_ftree_dse = 1053,                      \/* -ftree-dse *\/\n          OPT_ftree_forwprop = 1054,                 \/* -ftree-forwprop *\/\n          OPT_ftree_fre = 1055,                      \/* -ftree-fre *\/\n          OPT_ftree_loop_distribute_patterns = 1056, \/* -ftree-loop-distribute-patterns *\/\n          OPT_ftree_loop_distribution = 1057,        \/* -ftree-loop-distribution *\/\n          OPT_ftree_loop_if_convert = 1058,          \/* -ftree-loop-if-convert *\/\n          \/* OPT_ftree_loop_if_convert_stores = 1059, *\/\/* -ftree-loop-if-convert-stores *\/\n          OPT_ftree_loop_im = 1060,                  \/* -ftree-loop-im *\/\n          OPT_ftree_loop_ivcanon = 1061,             \/* -ftree-loop-ivcanon *\/\n          \/* OPT_ftree_loop_linear = 1062, *\/        \/* -ftree-loop-linear *\/\n          OPT_ftree_loop_optimize = 1063,            \/* -ftree-loop-optimize *\/\n          OPT_ftree_loop_vectorize = 1064,           \/* -ftree-loop-vectorize *\/\n          OPT_ftree_lrs = 1065,                      \/* -ftree-lrs *\/\n          OPT_ftree_parallelize_loops_ = 1066,       \/* -ftree-parallelize-loops= *\/\n          OPT_ftree_partial_pre = 1067,              \/* -ftree-partial-pre *\/\n          OPT_ftree_phiprop = 1068,                  \/* -ftree-phiprop *\/\n          OPT_ftree_pre = 1069,                      \/* -ftree-pre *\/\n          OPT_ftree_pta = 1070,                      \/* -ftree-pta *\/\n          OPT_ftree_reassoc = 1071,                  \/* -ftree-reassoc *\/\n          \/* OPT_ftree_salias = 1072, *\/             \/* -ftree-salias *\/\n          OPT_ftree_scev_cprop = 1073,               \/* -ftree-scev-cprop *\/\n          OPT_ftree_sink = 1074,                     \/* -ftree-sink *\/\n          OPT_ftree_slp_vectorize = 1075,            \/* -ftree-slp-vectorize *\/\n          OPT_ftree_slsr = 1076,                     \/* -ftree-slsr *\/\n          OPT_ftree_sra = 1077,                      \/* -ftree-sra *\/\n          \/* OPT_ftree_store_ccp = 1078, *\/          \/* -ftree-store-ccp *\/\n          \/* OPT_ftree_store_copy_prop = 1079, *\/    \/* -ftree-store-copy-prop *\/\n          OPT_ftree_switch_conversion = 1080,        \/* -ftree-switch-conversion *\/\n          OPT_ftree_tail_merge = 1081,               \/* -ftree-tail-merge *\/\n          OPT_ftree_ter = 1082,                      \/* -ftree-ter *\/\n          \/* OPT_ftree_vect_loop_version = 1083, *\/  \/* -ftree-vect-loop-version *\/\n          OPT_ftree_vectorize = 1084,                \/* -ftree-vectorize *\/\n          \/* OPT_ftree_vectorizer_verbose_ = 1085, *\/\/* -ftree-vectorizer-verbose= *\/\n          OPT_ftree_vrp = 1086,                      \/* -ftree-vrp *\/\n          OPT_funconstrained_commons = 1087,         \/* -funconstrained-commons *\/\n          OPT_funderscoring = 1088,                  \/* -funderscoring *\/\n          OPT_funit_at_a_time = 1089,                \/* -funit-at-a-time *\/\n          OPT_funroll_all_loops = 1090,              \/* -funroll-all-loops *\/\n          OPT_funroll_loops = 1091,                  \/* -funroll-loops *\/\n          \/* OPT_funsafe_loop_optimizations = 1092, *\/\/* -funsafe-loop-optimizations *\/\n          OPT_funsafe_math_optimizations = 1093,     \/* -funsafe-math-optimizations *\/\n          OPT_funsigned_bitfields = 1094,            \/* -funsigned-bitfields *\/\n          OPT_funsigned_char = 1095,                 \/* -funsigned-char *\/\n          OPT_funswitch_loops = 1096,                \/* -funswitch-loops *\/\n          OPT_funwind_tables = 1097,                 \/* -funwind-tables *\/\n          OPT_fuse_cxa_atexit = 1098,                \/* -fuse-cxa-atexit *\/\n          OPT_fuse_cxa_get_exception_ptr = 1099,     \/* -fuse-cxa-get-exception-ptr *\/\n          OPT_fuse_ld_bfd = 1100,                    \/* -fuse-ld=bfd *\/\n          OPT_fuse_ld_gold = 1101,                   \/* -fuse-ld=gold *\/\n          OPT_fuse_linker_plugin = 1102,             \/* -fuse-linker-plugin *\/\n          OPT_fvar_tracking = 1103,                  \/* -fvar-tracking *\/\n          OPT_fvar_tracking_assignments = 1104,      \/* -fvar-tracking-assignments *\/\n          OPT_fvar_tracking_assignments_toggle = 1105,\/* -fvar-tracking-assignments-toggle *\/\n          OPT_fvar_tracking_uninit = 1106,           \/* -fvar-tracking-uninit *\/\n          OPT_fvariable_expansion_in_unroller = 1107,\/* -fvariable-expansion-in-unroller *\/\n          \/* OPT_fvect_cost_model = 1108, *\/         \/* -fvect-cost-model *\/\n          OPT_fvect_cost_model_ = 1109,              \/* -fvect-cost-model= *\/\n          OPT_fverbose_asm = 1110,                   \/* -fverbose-asm *\/\n          \/* OPT_fversion = 1111, *\/                 \/* -fversion *\/\n          OPT_fvisibility_inlines_hidden = 1112,     \/* -fvisibility-inlines-hidden *\/\n          OPT_fvisibility_ms_compat = 1113,          \/* -fvisibility-ms-compat *\/\n          OPT_fvisibility_ = 1114,                   \/* -fvisibility= *\/\n          OPT_fvpt = 1115,                           \/* -fvpt *\/\n          \/* OPT_fvtable_gc = 1116, *\/               \/* -fvtable-gc *\/\n          \/* OPT_fvtable_thunks = 1117, *\/           \/* -fvtable-thunks *\/\n          OPT_fvtable_verify_ = 1118,                \/* -fvtable-verify= *\/\n          OPT_fvtv_counts = 1119,                    \/* -fvtv-counts *\/\n          OPT_fvtv_debug = 1120,                     \/* -fvtv-debug *\/\n          OPT_fweak = 1121,                          \/* -fweak *\/\n          OPT_fweb = 1122,                           \/* -fweb *\/\n          \/* OPT_fwhole_file = 1123, *\/              \/* -fwhole-file *\/\n          OPT_fwhole_program = 1124,                 \/* -fwhole-program *\/\n          OPT_fwide_exec_charset_ = 1125,            \/* -fwide-exec-charset= *\/\n          OPT_fworking_directory = 1126,             \/* -fworking-directory *\/\n          OPT_fwpa = 1127,                           \/* -fwpa *\/\n          OPT_fwpa_ = 1128,                          \/* -fwpa= *\/\n          OPT_fwrapv = 1129,                         \/* -fwrapv *\/\n          \/* OPT_fxref = 1130, *\/                    \/* -fxref *\/\n          \/* OPT_fzee = 1131, *\/                     \/* -fzee *\/\n          OPT_fzero_initialized_in_bss = 1132,       \/* -fzero-initialized-in-bss *\/\n          OPT_fzero_link = 1133,                     \/* -fzero-link *\/\n          OPT_g = 1134,                              \/* -g *\/\n          OPT_gant = 1135,                           \/* -gant *\/\n          \/* OPT_gcoff = 1136, *\/                    \/* -gcoff *\/\n          \/* OPT_gcoff1 = 1137, *\/                   \/* -gcoff1 *\/\n          \/* OPT_gcoff2 = 1138, *\/                   \/* -gcoff2 *\/\n          \/* OPT_gcoff3 = 1139, *\/                   \/* -gcoff3 *\/\n          OPT_gcolumn_info = 1140,                   \/* -gcolumn-info *\/\n          OPT_gdwarf = 1141,                         \/* -gdwarf *\/\n          OPT_gdwarf_ = 1142,                        \/* -gdwarf- *\/\n          OPT_gen_decls = 1143,                      \/* -gen-decls *\/\n          OPT_ggdb = 1144,                           \/* -ggdb *\/\n          OPT_ggnu_pubnames = 1145,                  \/* -ggnu-pubnames *\/\n          OPT_gnat = 1146,                           \/* -gnat *\/\n          OPT_gnatO = 1147,                          \/* -gnatO *\/\n          OPT_gno_ = 1148,                           \/* -gno- *\/\n          OPT_gno_pubnames = 1149,                   \/* -gno-pubnames *\/\n          OPT_gpubnames = 1150,                      \/* -gpubnames *\/\n          OPT_grecord_gcc_switches = 1151,           \/* -grecord-gcc-switches *\/\n          OPT_gsplit_dwarf = 1152,                   \/* -gsplit-dwarf *\/\n          OPT_gstabs = 1153,                         \/* -gstabs *\/\n          OPT_gstabs_ = 1154,                        \/* -gstabs+ *\/\n          OPT_gstatement_frontiers = 1155,           \/* -gstatement-frontiers *\/\n          OPT_gstrict_dwarf = 1156,                  \/* -gstrict-dwarf *\/\n          OPT_gtoggle = 1157,                        \/* -gtoggle *\/\n          OPT_gvms = 1158,                           \/* -gvms *\/\n          OPT_gxcoff = 1159,                         \/* -gxcoff *\/\n          OPT_gxcoff_ = 1160,                        \/* -gxcoff+ *\/\n          OPT_gz = 1161,                             \/* -gz *\/\n          OPT_gz_ = 1162,                            \/* -gz= *\/\n          OPT_h = 1163,                              \/* -h *\/\n          OPT_idirafter = 1164,                      \/* -idirafter *\/\n          OPT_imacros = 1165,                        \/* -imacros *\/\n          OPT_imultiarch = 1166,                     \/* -imultiarch *\/\n          OPT_imultilib = 1167,                      \/* -imultilib *\/\n          OPT_include = 1168,                        \/* -include *\/\n          OPT_iplugindir_ = 1169,                    \/* -iplugindir= *\/\n          OPT_iprefix = 1170,                        \/* -iprefix *\/\n          OPT_iquote = 1171,                         \/* -iquote *\/\n          OPT_isysroot = 1172,                       \/* -isysroot *\/\n          OPT_isystem = 1173,                        \/* -isystem *\/\n          OPT_iwithprefix = 1174,                    \/* -iwithprefix *\/\n          OPT_iwithprefixbefore = 1175,              \/* -iwithprefixbefore *\/\n          OPT_k8 = 1176,                             \/* -k8 *\/\n          OPT_l = 1177,                              \/* -l *\/\n          OPT_lang_asm = 1178,                       \/* -lang-asm *\/\n          OPT_m128bit_long_double = 1179,            \/* -m128bit-long-double *\/\n          OPT_m16 = 1180,                            \/* -m16 *\/\n          OPT_m32 = 1181,                            \/* -m32 *\/\n          OPT_m3dnow = 1182,                         \/* -m3dnow *\/\n          OPT_m3dnowa = 1183,                        \/* -m3dnowa *\/\n          OPT_m64 = 1184,                            \/* -m64 *\/\n          OPT_m80387 = 1185,                         \/* -m80387 *\/\n          OPT_m8bit_idiv = 1186,                     \/* -m8bit-idiv *\/\n          OPT_m96bit_long_double = 1187,             \/* -m96bit-long-double *\/\n          OPT_mabi_ = 1188,                          \/* -mabi= *\/\n          OPT_mabm = 1189,                           \/* -mabm *\/\n          OPT_maccumulate_outgoing_args = 1190,      \/* -maccumulate-outgoing-args *\/\n          OPT_maddress_mode_ = 1191,                 \/* -maddress-mode= *\/\n          OPT_madx = 1192,                           \/* -madx *\/\n          OPT_maes = 1193,                           \/* -maes *\/\n          OPT_malign_data_ = 1194,                   \/* -malign-data= *\/\n          OPT_malign_double = 1195,                  \/* -malign-double *\/\n          OPT_malign_functions_ = 1196,              \/* -malign-functions= *\/\n          OPT_malign_jumps_ = 1197,                  \/* -malign-jumps= *\/\n          OPT_malign_loops_ = 1198,                  \/* -malign-loops= *\/\n          OPT_malign_stringops = 1199,               \/* -malign-stringops *\/\n          OPT_mandroid = 1200,                       \/* -mandroid *\/\n          OPT_march_ = 1201,                         \/* -march= *\/\n          OPT_masm_ = 1202,                          \/* -masm= *\/\n          OPT_mavx = 1203,                           \/* -mavx *\/\n          OPT_mavx2 = 1204,                          \/* -mavx2 *\/\n          OPT_mavx256_split_unaligned_load = 1205,   \/* -mavx256-split-unaligned-load *\/\n          OPT_mavx256_split_unaligned_store = 1206,  \/* -mavx256-split-unaligned-store *\/\n          OPT_mavx5124fmaps = 1207,                  \/* -mavx5124fmaps *\/\n          OPT_mavx5124vnniw = 1208,                  \/* -mavx5124vnniw *\/\n          OPT_mavx512bitalg = 1209,                  \/* -mavx512bitalg *\/\n          OPT_mavx512bw = 1210,                      \/* -mavx512bw *\/\n          OPT_mavx512cd = 1211,                      \/* -mavx512cd *\/\n          OPT_mavx512dq = 1212,                      \/* -mavx512dq *\/\n          OPT_mavx512er = 1213,                      \/* -mavx512er *\/\n          OPT_mavx512f = 1214,                       \/* -mavx512f *\/\n          OPT_mavx512ifma = 1215,                    \/* -mavx512ifma *\/\n          OPT_mavx512pf = 1216,                      \/* -mavx512pf *\/\n          OPT_mavx512vbmi = 1217,                    \/* -mavx512vbmi *\/\n          OPT_mavx512vbmi2 = 1218,                   \/* -mavx512vbmi2 *\/\n          OPT_mavx512vl = 1219,                      \/* -mavx512vl *\/\n          OPT_mavx512vnni = 1220,                    \/* -mavx512vnni *\/\n          OPT_mavx512vpopcntdq = 1221,               \/* -mavx512vpopcntdq *\/\n          OPT_mbionic = 1222,                        \/* -mbionic *\/\n          OPT_mbmi = 1223,                           \/* -mbmi *\/\n          OPT_mbmi2 = 1224,                          \/* -mbmi2 *\/\n          OPT_mbranch_cost_ = 1225,                  \/* -mbranch-cost= *\/\n          OPT_mcall_ms2sysv_xlogues = 1226,          \/* -mcall-ms2sysv-xlogues *\/\n          OPT_mcet = 1227,                           \/* -mcet *\/\n          OPT_mcet_switch = 1228,                    \/* -mcet-switch *\/\n          OPT_mcld = 1229,                           \/* -mcld *\/\n          OPT_mclflushopt = 1230,                    \/* -mclflushopt *\/\n          OPT_mclwb = 1231,                          \/* -mclwb *\/\n          OPT_mclzero = 1232,                        \/* -mclzero *\/\n          OPT_mcmodel_ = 1233,                       \/* -mcmodel= *\/\n          \/* OPT_mcpu_ = 1234, *\/                    \/* -mcpu= *\/\n          OPT_mcrc32 = 1235,                         \/* -mcrc32 *\/\n          OPT_mcx16 = 1236,                          \/* -mcx16 *\/\n          OPT_mdispatch_scheduler = 1237,            \/* -mdispatch-scheduler *\/\n          OPT_mdump_tune_features = 1238,            \/* -mdump-tune-features *\/\n          OPT_mf16c = 1239,                          \/* -mf16c *\/\n          OPT_mfancy_math_387 = 1240,                \/* -mfancy-math-387 *\/\n          OPT_mfentry = 1241,                        \/* -mfentry *\/\n          OPT_mfma = 1242,                           \/* -mfma *\/\n          OPT_mfma4 = 1243,                          \/* -mfma4 *\/\n          OPT_mforce_drap = 1244,                    \/* -mforce-drap *\/\n          OPT_mforce_indirect_call = 1245,           \/* -mforce-indirect-call *\/\n          OPT_mfp_ret_in_387 = 1246,                 \/* -mfp-ret-in-387 *\/\n          OPT_mfpmath_ = 1247,                       \/* -mfpmath= *\/\n          OPT_mfsgsbase = 1248,                      \/* -mfsgsbase *\/\n          \/* OPT_mfused_madd = 1249, *\/              \/* -mfused-madd *\/\n          OPT_mfxsr = 1250,                          \/* -mfxsr *\/\n          OPT_mgeneral_regs_only = 1251,             \/* -mgeneral-regs-only *\/\n          OPT_mgfni = 1252,                          \/* -mgfni *\/\n          OPT_mglibc = 1253,                         \/* -mglibc *\/\n          OPT_mhard_float = 1254,                    \/* -mhard-float *\/\n          OPT_mhle = 1255,                           \/* -mhle *\/\n          OPT_miamcu = 1256,                         \/* -miamcu *\/\n          OPT_mibt = 1257,                           \/* -mibt *\/\n          OPT_mieee_fp = 1258,                       \/* -mieee-fp *\/\n          OPT_mincoming_stack_boundary_ = 1259,      \/* -mincoming-stack-boundary= *\/\n          OPT_minline_all_stringops = 1260,          \/* -minline-all-stringops *\/\n          OPT_minline_stringops_dynamically = 1261,  \/* -minline-stringops-dynamically *\/\n          \/* OPT_mintel_syntax = 1262, *\/            \/* -mintel-syntax *\/\n          OPT_mlarge_data_threshold_ = 1263,         \/* -mlarge-data-threshold= *\/\n          OPT_mlong_double_128 = 1264,               \/* -mlong-double-128 *\/\n          OPT_mlong_double_64 = 1265,                \/* -mlong-double-64 *\/\n          OPT_mlong_double_80 = 1266,                \/* -mlong-double-80 *\/\n          OPT_mlwp = 1267,                           \/* -mlwp *\/\n          OPT_mlzcnt = 1268,                         \/* -mlzcnt *\/\n          OPT_mmemcpy_strategy_ = 1269,              \/* -mmemcpy-strategy= *\/\n          OPT_mmemset_strategy_ = 1270,              \/* -mmemset-strategy= *\/\n          OPT_mmitigate_rop = 1271,                  \/* -mmitigate-rop *\/\n          OPT_mmmx = 1272,                           \/* -mmmx *\/\n          OPT_mmovbe = 1273,                         \/* -mmovbe *\/\n          OPT_mmpx = 1274,                           \/* -mmpx *\/\n          OPT_mms_bitfields = 1275,                  \/* -mms-bitfields *\/\n          OPT_mmusl = 1276,                          \/* -mmusl *\/\n          OPT_mmwaitx = 1277,                        \/* -mmwaitx *\/\n          OPT_mno_align_stringops = 1278,            \/* -mno-align-stringops *\/\n          OPT_mno_default = 1279,                    \/* -mno-default *\/\n          OPT_mno_fancy_math_387 = 1280,             \/* -mno-fancy-math-387 *\/\n          OPT_mno_push_args = 1281,                  \/* -mno-push-args *\/\n          OPT_mno_red_zone = 1282,                   \/* -mno-red-zone *\/\n          OPT_mno_sse4 = 1283,                       \/* -mno-sse4 *\/\n          OPT_mnop_mcount = 1284,                    \/* -mnop-mcount *\/\n          OPT_momit_leaf_frame_pointer = 1285,       \/* -momit-leaf-frame-pointer *\/\n          OPT_mpc32 = 1286,                          \/* -mpc32 *\/\n          OPT_mpc64 = 1287,                          \/* -mpc64 *\/\n          OPT_mpc80 = 1288,                          \/* -mpc80 *\/\n          OPT_mpclmul = 1289,                        \/* -mpclmul *\/\n          OPT_mpcommit = 1290,                       \/* -mpcommit *\/\n          OPT_mpku = 1291,                           \/* -mpku *\/\n          OPT_mpopcnt = 1292,                        \/* -mpopcnt *\/\n          \/* OPT_mprefer_avx128 = 1293, *\/           \/* -mprefer-avx128 *\/\n          OPT_mprefer_vector_width_ = 1294,          \/* -mprefer-vector-width= *\/\n          OPT_mpreferred_stack_boundary_ = 1295,     \/* -mpreferred-stack-boundary= *\/\n          OPT_mprefetchwt1 = 1296,                   \/* -mprefetchwt1 *\/\n          OPT_mprfchw = 1297,                        \/* -mprfchw *\/\n          OPT_mpush_args = 1298,                     \/* -mpush-args *\/\n          OPT_mrdpid = 1299,                         \/* -mrdpid *\/\n          OPT_mrdrnd = 1300,                         \/* -mrdrnd *\/\n          OPT_mrdseed = 1301,                        \/* -mrdseed *\/\n          OPT_mrecip = 1302,                         \/* -mrecip *\/\n          OPT_mrecip_ = 1303,                        \/* -mrecip= *\/\n          OPT_mrecord_mcount = 1304,                 \/* -mrecord-mcount *\/\n          OPT_mred_zone = 1305,                      \/* -mred-zone *\/\n          OPT_mregparm_ = 1306,                      \/* -mregparm= *\/\n          OPT_mrtd = 1307,                           \/* -mrtd *\/\n          OPT_mrtm = 1308,                           \/* -mrtm *\/\n          OPT_msahf = 1309,                          \/* -msahf *\/\n          OPT_msgx = 1310,                           \/* -msgx *\/\n          OPT_msha = 1311,                           \/* -msha *\/\n          OPT_mshstk = 1312,                         \/* -mshstk *\/\n          OPT_mskip_rax_setup = 1313,                \/* -mskip-rax-setup *\/\n          OPT_msoft_float = 1314,                    \/* -msoft-float *\/\n          OPT_msse = 1315,                           \/* -msse *\/\n          OPT_msse2 = 1316,                          \/* -msse2 *\/\n          OPT_msse2avx = 1317,                       \/* -msse2avx *\/\n          OPT_msse3 = 1318,                          \/* -msse3 *\/\n          OPT_msse4 = 1319,                          \/* -msse4 *\/\n          OPT_msse4_1 = 1320,                        \/* -msse4.1 *\/\n          OPT_msse4_2 = 1321,                        \/* -msse4.2 *\/\n          OPT_msse4a = 1322,                         \/* -msse4a *\/\n          \/* OPT_msse5 = 1323, *\/                    \/* -msse5 *\/\n          OPT_msseregparm = 1324,                    \/* -msseregparm *\/\n          OPT_mssse3 = 1325,                         \/* -mssse3 *\/\n          OPT_mstack_arg_probe = 1326,               \/* -mstack-arg-probe *\/\n          OPT_mstack_protector_guard_offset_ = 1327, \/* -mstack-protector-guard-offset= *\/\n          OPT_mstack_protector_guard_reg_ = 1328,    \/* -mstack-protector-guard-reg= *\/\n          OPT_mstack_protector_guard_symbol_ = 1329, \/* -mstack-protector-guard-symbol= *\/\n          OPT_mstack_protector_guard_ = 1330,        \/* -mstack-protector-guard= *\/\n          OPT_mstackrealign = 1331,                  \/* -mstackrealign *\/\n          OPT_mstringop_strategy_ = 1332,            \/* -mstringop-strategy= *\/\n          OPT_mstv = 1333,                           \/* -mstv *\/\n          OPT_mtbm = 1334,                           \/* -mtbm *\/\n          OPT_mtls_dialect_ = 1335,                  \/* -mtls-dialect= *\/\n          OPT_mtls_direct_seg_refs = 1336,           \/* -mtls-direct-seg-refs *\/\n          OPT_mtune_ctrl_ = 1337,                    \/* -mtune-ctrl= *\/\n          OPT_mtune_ = 1338,                         \/* -mtune= *\/\n          OPT_muclibc = 1339,                        \/* -muclibc *\/\n          OPT_mvaes = 1340,                          \/* -mvaes *\/\n          OPT_mveclibabi_ = 1341,                    \/* -mveclibabi= *\/\n          OPT_mvect8_ret_in_mem = 1342,              \/* -mvect8-ret-in-mem *\/\n          OPT_mvpclmulqdq = 1343,                    \/* -mvpclmulqdq *\/\n          OPT_mvzeroupper = 1344,                    \/* -mvzeroupper *\/\n          OPT_mx32 = 1345,                           \/* -mx32 *\/\n          OPT_mxop = 1346,                           \/* -mxop *\/\n          OPT_mxsave = 1347,                         \/* -mxsave *\/\n          OPT_mxsavec = 1348,                        \/* -mxsavec *\/\n          OPT_mxsaveopt = 1349,                      \/* -mxsaveopt *\/\n          OPT_mxsaves = 1350,                        \/* -mxsaves *\/\n          OPT_n = 1351,                              \/* -n *\/\n          OPT_no_canonical_prefixes = 1352,          \/* -no-canonical-prefixes *\/\n          OPT_no_integrated_cpp = 1353,              \/* -no-integrated-cpp *\/\n          OPT_no_pie = 1354,                         \/* -no-pie *\/\n          OPT_nocpp = 1355,                          \/* -nocpp *\/\n          OPT_nodefaultlibs = 1356,                  \/* -nodefaultlibs *\/\n          OPT_nostartfiles = 1357,                   \/* -nostartfiles *\/\n          OPT_nostdinc = 1358,                       \/* -nostdinc *\/\n          OPT_nostdinc__ = 1359,                     \/* -nostdinc++ *\/\n          OPT_nostdlib = 1360,                       \/* -nostdlib *\/\n          OPT_o = 1361,                              \/* -o *\/\n          OPT_p = 1362,                              \/* -p *\/\n          OPT_pass_exit_codes = 1363,                \/* -pass-exit-codes *\/\n          \/* OPT_pedantic = 1364, *\/                 \/* -pedantic *\/\n          OPT_pedantic_errors = 1365,                \/* -pedantic-errors *\/\n          OPT_pg = 1366,                             \/* -pg *\/\n          OPT_pie = 1367,                            \/* -pie *\/\n          OPT_pipe = 1368,                           \/* -pipe *\/\n          OPT_posix = 1369,                          \/* -posix *\/\n          OPT_print_file_name_ = 1370,               \/* -print-file-name= *\/\n          OPT_print_libgcc_file_name = 1371,         \/* -print-libgcc-file-name *\/\n          OPT_print_multi_directory = 1372,          \/* -print-multi-directory *\/\n          OPT_print_multi_lib = 1373,                \/* -print-multi-lib *\/\n          OPT_print_multi_os_directory = 1374,       \/* -print-multi-os-directory *\/\n          OPT_print_multiarch = 1375,                \/* -print-multiarch *\/\n          OPT_print_objc_runtime_info = 1376,        \/* -print-objc-runtime-info *\/\n          OPT_print_prog_name_ = 1377,               \/* -print-prog-name= *\/\n          OPT_print_search_dirs = 1378,              \/* -print-search-dirs *\/\n          OPT_print_sysroot = 1379,                  \/* -print-sysroot *\/\n          OPT_print_sysroot_headers_suffix = 1380,   \/* -print-sysroot-headers-suffix *\/\n          OPT_profile = 1381,                        \/* -profile *\/\n          OPT_pthread = 1382,                        \/* -pthread *\/\n          OPT_quiet = 1383,                          \/* -quiet *\/\n          OPT_r = 1384,                              \/* -r *\/\n          OPT_rdynamic = 1385,                       \/* -rdynamic *\/\n          OPT_remap = 1386,                          \/* -remap *\/\n          OPT_s = 1387,                              \/* -s *\/\n          OPT_save_temps = 1388,                     \/* -save-temps *\/\n          OPT_save_temps_ = 1389,                    \/* -save-temps= *\/\n          OPT_shared = 1390,                         \/* -shared *\/\n          OPT_shared_libgcc = 1391,                  \/* -shared-libgcc *\/\n          \/* OPT_specs = 1392, *\/                    \/* -specs *\/\n          OPT_specs_ = 1393,                         \/* -specs= *\/\n          OPT_static = 1394,                         \/* -static *\/\n          OPT_static_libasan = 1395,                 \/* -static-libasan *\/\n          OPT_static_libgcc = 1396,                  \/* -static-libgcc *\/\n          OPT_static_libgfortran = 1397,             \/* -static-libgfortran *\/\n          OPT_static_libgo = 1398,                   \/* -static-libgo *\/\n          OPT_static_liblsan = 1399,                 \/* -static-liblsan *\/\n          OPT_static_libmpx = 1400,                  \/* -static-libmpx *\/\n          OPT_static_libmpxwrappers = 1401,          \/* -static-libmpxwrappers *\/\n          OPT_static_libstdc__ = 1402,               \/* -static-libstdc++ *\/\n          OPT_static_libtsan = 1403,                 \/* -static-libtsan *\/\n          OPT_static_libubsan = 1404,                \/* -static-libubsan *\/\n          OPT_static_pie = 1405,                     \/* -static-pie *\/\n          \/* OPT_std_c__03 = 1406, *\/                \/* -std=c++03 *\/\n          \/* OPT_std_c__0x = 1407, *\/                \/* -std=c++0x *\/\n          OPT_std_c__11 = 1408,                      \/* -std=c++11 *\/\n          OPT_std_c__14 = 1409,                      \/* -std=c++14 *\/\n          OPT_std_c__17 = 1410,                      \/* -std=c++17 *\/\n          \/* OPT_std_c__1y = 1411, *\/                \/* -std=c++1y *\/\n          \/* OPT_std_c__1z = 1412, *\/                \/* -std=c++1z *\/\n          OPT_std_c__2a = 1413,                      \/* -std=c++2a *\/\n          OPT_std_c__98 = 1414,                      \/* -std=c++98 *\/\n          OPT_std_c11 = 1415,                        \/* -std=c11 *\/\n          OPT_std_c17 = 1416,                        \/* -std=c17 *\/\n          \/* OPT_std_c18 = 1417, *\/                  \/* -std=c18 *\/\n          \/* OPT_std_c1x = 1418, *\/                  \/* -std=c1x *\/\n          \/* OPT_std_c89 = 1419, *\/                  \/* -std=c89 *\/\n          OPT_std_c90 = 1420,                        \/* -std=c90 *\/\n          OPT_std_c99 = 1421,                        \/* -std=c99 *\/\n          \/* OPT_std_c9x = 1422, *\/                  \/* -std=c9x *\/\n          OPT_std_f2003 = 1423,                      \/* -std=f2003 *\/\n          OPT_std_f2008 = 1424,                      \/* -std=f2008 *\/\n          OPT_std_f2008ts = 1425,                    \/* -std=f2008ts *\/\n          OPT_std_f2018 = 1426,                      \/* -std=f2018 *\/\n          OPT_std_f95 = 1427,                        \/* -std=f95 *\/\n          OPT_std_gnu = 1428,                        \/* -std=gnu *\/\n          \/* OPT_std_gnu__03 = 1429, *\/              \/* -std=gnu++03 *\/\n          \/* OPT_std_gnu__0x = 1430, *\/              \/* -std=gnu++0x *\/\n          OPT_std_gnu__11 = 1431,                    \/* -std=gnu++11 *\/\n          OPT_std_gnu__14 = 1432,                    \/* -std=gnu++14 *\/\n          OPT_std_gnu__17 = 1433,                    \/* -std=gnu++17 *\/\n          \/* OPT_std_gnu__1y = 1434, *\/              \/* -std=gnu++1y *\/\n          \/* OPT_std_gnu__1z = 1435, *\/              \/* -std=gnu++1z *\/\n          OPT_std_gnu__2a = 1436,                    \/* -std=gnu++2a *\/\n          OPT_std_gnu__98 = 1437,                    \/* -std=gnu++98 *\/\n          OPT_std_gnu11 = 1438,                      \/* -std=gnu11 *\/\n          OPT_std_gnu17 = 1439,                      \/* -std=gnu17 *\/\n          \/* OPT_std_gnu18 = 1440, *\/                \/* -std=gnu18 *\/\n          \/* OPT_std_gnu1x = 1441, *\/                \/* -std=gnu1x *\/\n          \/* OPT_std_gnu89 = 1442, *\/                \/* -std=gnu89 *\/\n          OPT_std_gnu90 = 1443,                      \/* -std=gnu90 *\/\n          OPT_std_gnu99 = 1444,                      \/* -std=gnu99 *\/\n          \/* OPT_std_gnu9x = 1445, *\/                \/* -std=gnu9x *\/\n          \/* OPT_std_iso9899_1990 = 1446, *\/         \/* -std=iso9899:1990 *\/\n          OPT_std_iso9899_199409 = 1447,             \/* -std=iso9899:199409 *\/\n          \/* OPT_std_iso9899_1999 = 1448, *\/         \/* -std=iso9899:1999 *\/\n          \/* OPT_std_iso9899_199x = 1449, *\/         \/* -std=iso9899:199x *\/\n          \/* OPT_std_iso9899_2011 = 1450, *\/         \/* -std=iso9899:2011 *\/\n          \/* OPT_std_iso9899_2017 = 1451, *\/         \/* -std=iso9899:2017 *\/\n          \/* OPT_std_iso9899_2018 = 1452, *\/         \/* -std=iso9899:2018 *\/\n          OPT_std_legacy = 1453,                     \/* -std=legacy *\/\n          OPT_symbolic = 1454,                       \/* -symbolic *\/\n          OPT_t = 1455,                              \/* -t *\/\n          OPT_time = 1456,                           \/* -time *\/\n          OPT_time_ = 1457,                          \/* -time= *\/\n          OPT_tno_android_cc = 1458,                 \/* -tno-android-cc *\/\n          OPT_tno_android_ld = 1459,                 \/* -tno-android-ld *\/\n          OPT_traditional = 1460,                    \/* -traditional *\/\n          OPT_traditional_cpp = 1461,                \/* -traditional-cpp *\/\n          OPT_trigraphs = 1462,                      \/* -trigraphs *\/\n          OPT_u = 1463,                              \/* -u *\/\n          OPT_undef = 1464,                          \/* -undef *\/\n          OPT_v = 1465,                              \/* -v *\/\n          OPT_version = 1466,                        \/* -version *\/\n          OPT_w = 1467,                              \/* -w *\/\n          OPT_wrapper = 1468,                        \/* -wrapper *\/\n          OPT_x = 1469,                              \/* -x *\/\n          OPT_z = 1470,                              \/* -z *\/\n          N_OPTS,\n          OPT_SPECIAL_unknown,\n          OPT_SPECIAL_ignore,\n          OPT_SPECIAL_program_name,\n          OPT_SPECIAL_input_file\n        };\n    \n        #ifdef GCC_C_COMMON_C\n        \/* Mapping from cpp message reasons to the options that enable them.  *\/\n        #include <cpplib.h>\n        struct cpp_reason_option_codes_t\n        {\n          const int reason;\t\t\/* cpplib message reason.  *\/\n          const int option_code;\t\/* gcc option that controls this message.  *\/\n        };\n    \n        static const struct cpp_reason_option_codes_t cpp_reason_option_codes[] = {\n          {CPP_W_BUILTIN_MACRO_REDEFINED,           OPT_Wbuiltin_macro_redefined},\n          {CPP_W_CXX_OPERATOR_NAMES,                OPT_Wc___compat},\n          {CPP_W_CXX11_COMPAT,                      OPT_Wc__11_compat},\n          {CPP_W_C90_C99_COMPAT,                    OPT_Wc90_c99_compat},\n          {CPP_W_COMMENTS,                          OPT_Wcomment},\n          {CPP_W_WARNING_DIRECTIVE,                 OPT_Wcpp},\n          {CPP_W_DATE_TIME,                         OPT_Wdate_time},\n          {CPP_W_DEPRECATED,                        OPT_Wdeprecated},\n          {CPP_W_ENDIF_LABELS,                      OPT_Wendif_labels},\n          {CPP_W_EXPANSION_TO_DEFINED,              OPT_Wexpansion_to_defined},\n          {CPP_W_INVALID_PCH,                       OPT_Winvalid_pch},\n          {CPP_W_LITERAL_SUFFIX,                    OPT_Wliteral_suffix},\n          {CPP_W_LONG_LONG,                         OPT_Wlong_long},\n          {CPP_W_MISSING_INCLUDE_DIRS,              OPT_Wmissing_include_dirs},\n          {CPP_W_MULTICHAR,                         OPT_Wmultichar},\n          {CPP_W_NORMALIZE,                         OPT_Wnormalized_},\n          {CPP_W_PEDANTIC,                          OPT_Wpedantic},\n          {CPP_W_TRADITIONAL,                       OPT_Wtraditional},\n          {CPP_W_TRIGRAPHS,                         OPT_Wtrigraphs},\n          {CPP_W_UNDEF,                             OPT_Wundef},\n          {CPP_W_UNUSED_MACROS,                     OPT_Wunused_macros},\n          {CPP_W_VARIADIC_MACROS,                   OPT_Wvariadic_macros},\n          {CPP_W_NONE,                              0},\n        };\n        #endif\n    \n        #endif \/* OPTIONS_H *\/\n    \")\n\ncheck_function_exists:\n    -   atoq\n    -   clock\n    -   fork\n    -   gcc_UNLOCKED_FUNCS\n    -   getrlimit\n    -   getrusage\n    -   gettimeofday\n    -   kill\n    -   madvise\n    -   mbstowcs\n    -   mkdir_takes_one_arg\n    -   mmap\n    -   mmap_blacklist\n    -   nl_langinfo\n    -   popen\n    -   setlocale\n    -   setrlimit\n    -   strsignal\n    -   sysconf\n    -   times\n    -   wcswidth\n    -   __cxa_atexit\n    -   __stack_chk_fail\n    -   __wrap__Znaj\n\ncheck_include_exists:\n    -   file: direct.h\n        variable: HAVE_DIRECT_H\n        cpp: false\n    -   file: ext\/hash_map\n        variable: HAVE_EXT_HASH_MAP\n        cpp: false\n    -   file: fcntl.h\n        variable: HAVE_FCNTL_H\n        cpp: false\n    -   file: ftw.h\n        variable: HAVE_FTW_H\n        cpp: false\n    -   file: iconv.h\n        variable: HAVE_ICONV_H\n        cpp: false\n    -   file: langinfo.h\n        variable: HAVE_LANGINFO_H\n        cpp: false\n    -   file: ldfcn.h\n        variable: HAVE_LDFCN_H\n        cpp: false\n    -   file: limits.h\n        variable: HAVE_LIMITS_H\n        cpp: false\n    -   file: locale.h\n        variable: HAVE_LOCALE_H\n        cpp: false\n    -   file: malloc.h\n        variable: HAVE_MALLOC_H\n        cpp: false\n    -   file: pthread.h\n        variable: HAVE_PTHREAD_H\n        cpp: true\n    -   file: sys\/file.h\n        variable: HAVE_SYS_FILE_H\n        cpp: false\n    -   file: sys\/mman.h\n        variable: HAVE_SYS_MMAN_H\n        cpp: false\n    -   file: sys\/param.h\n        variable: HAVE_SYS_PARAM_H\n        cpp: false\n    -   file: sys\/resource.h\n        variable: HAVE_SYS_RESOURCE_H\n        cpp: false\n    -   file: sys\/times.h\n        variable: HAVE_SYS_TIMES_H\n        cpp: false\n    -   file: sys\/time.h\n        variable: HAVE_SYS_TIME_H\n        cpp: false\n    -   file: sys\/wait.h\n        variable: HAVE_SYS_WAIT_H\n        cpp: false\n    -   file: thread.h\n        variable: HAVE_THREAD_H\n        cpp: true\n    -   file: time.h\n        variable: HAVE_TIME_H\n        cpp: false\n    -   file: tr1\/unordered_map\n        variable: HAVE_TR1_UNORDERED_MAP\n        cpp: false\n    -   file: unordered_map\n        variable: HAVE_UNORDERED_MAP\n        cpp: false\n    -   file: valgrind.h\n        variable: HAVE_VALGRIND_H\n        cpp: true\n    -   file: wchar.h\n        variable: HAVE_WCHAR_H\n        cpp: false\n\ncheck_type_size:\n    -   type: caddr_t\n    -   type: int\n    -   type: long\n    -   type: long long\n    -   type: short\n    -   type: ssize_t\n    -   type: unsigned long long\n\ncheck_symbol_exists:\n    -   symbol: snprintf\n        headers:\n            -   stdio.h\n\ncheck_c_source_compiles:\n    HAVE_TIME_WITH_SYS_TIME:\n        text: \"\\n#include <time.h>\\n#include <sys\/time.h>\\nint main() {return 0;}\\n\"\n        invert: false\n\ncheck_cxx_source_compiles:\n    HAS_MCONTEXT_T_UNDERSCORES:\n        text: \"\\r\\n#include <sys\/cdefs.h>\\r\\n#include <sys\/signal.h>\\r\\n#include <ucontext.h>\\r\\nint main() { mcontext_t m; if (m->ss.srr0) return 0; return 0; }\\r\\n\"\n        invert: true\n    HAVE_CLOCK_T:\n        text: \"\\r\\n#include \\\"ansidecl.h\\\"\\r\\n#include \\\"system.h\\\"\\r\\n\\n\\n int main() { \\n\\nclock_t x;\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_INTTYPES_H:\n        text: \"#define __STDC_FORMAT_MACROS\\r\\n#include <sys\/types.h>\\r\\n#include <inttypes.h>\\n\\n int main() { \\n\\nintmax_t i = -1;\\r\\n#ifndef PRId64\\r\\nchoke me\\r\\n#endif\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_MEMCHECK_H:\n        text: \"#include <memcheck.h>\\r\\n#ifndef VALGRIND_DISCARD\\r\\n#error VALGRIND_DISCARD not defined\\r\\n#endif\"\n        invert: false\n    HAVE_STRUCT_TMS:\n        text: \"\\r\\n#include \\\"ansidecl.h\\\"\\r\\n#include \\\"system.h\\\"\\r\\n#ifdef HAVE_SYS_TIMES_H\\r\\n#include <sys\/times.h>\\r\\n#endif\\r\\n\\n\\n int main() { \\n\\nstruct tms tms;\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_SWAP_IN_UTILITY:\n        text: \"\\r\\n#include <utility>\\r\\n\\n\\n int main() { \\n\\nint a, b; std::swap(a,b);\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_VALGRIND_MEMCHECK_H:\n        text: \"#include <valgrind\/memcheck.h>\\r\\n#ifndef VALGRIND_DISCARD\\r\\n#error VALGRIND_DISCARD not defined\\r\\n#endif\"\n        invert: false\n    HOST_HAS_F_SETLKW:\n        text: \"\\r\\n#include <fcntl.h>\\n\\n int main() { \\n\\n\\r\\nstruct flock fl;\\r\\nfl.l_whence = 0;\\r\\nfl.l_start = 0;\\r\\nfl.l_len = 0;\\r\\nfl.l_pid = 0;\\r\\nreturn fcntl (1, F_SETLKW, &fl);\\n\\n ; return 0; }\"\n        invert: false\n\ncheck_decl_exists:\n    -   decl: decl\n        headers:\n            -   abort\n    -   decl: decl\n        headers:\n            -   asprintf\n    -   decl: decl\n        headers:\n            -   atof\n    -   decl: decl\n        headers:\n            -   atol\n    -   decl: decl\n        headers:\n            -   atoll\n    -   decl: decl\n        headers:\n            -   basename(const\n    -   decl: decl\n        headers:\n            -   calloc\n    -   decl: decl\n        headers:\n            -   char*\n    -   decl: decl\n        headers:\n            -   char*)\n    -   decl: decl\n        headers:\n            -   clock\n    -   decl: decl\n        headers:\n            -   const\n    -   decl: decl\n        headers:\n            -   errno\n    -   decl: decl\n        headers:\n            -   ffs\n    -   decl: decl\n        headers:\n            -   free\n    -   decl: decl\n        headers:\n            -   gcc_UNLOCKED_FUNCS\n    -   decl: decl\n        headers:\n            -   getcwd\n    -   decl: decl\n        headers:\n            -   getenv\n    -   decl: decl\n        headers:\n            -   getopt\n    -   decl: decl\n        headers:\n            -   getpagesize\n    -   decl: decl\n        headers:\n            -   getrlimit\n    -   decl: decl\n        headers:\n            -   getrusage\n    -   decl: decl\n        headers:\n            -   getwd\n    -   decl: decl\n        headers:\n            -   ldgetname\n    -   decl: decl\n        headers:\n            -   madvise\n    -   decl: decl\n        headers:\n            -   malloc\n    -   decl: decl\n        headers:\n            -   realloc\n    -   decl: decl\n        headers:\n            -   sbrk\n    -   decl: decl\n        headers:\n            -   setenv\n    -   decl: decl\n        headers:\n            -   setrlimit\n    -   decl: decl\n        headers:\n            -   sigaltstack\n    -   decl: decl\n        headers:\n            -   stpcpy\n    -   decl: decl\n        headers:\n            -   strnlen\n    -   decl: decl\n        headers:\n            -   strsignal\n    -   decl: decl\n        headers:\n            -   strstr(const\n    -   decl: decl\n        headers:\n            -   strtol\n    -   decl: decl\n        headers:\n            -   strtoll\n    -   decl: decl\n        headers:\n            -   strtoul\n    -   decl: decl\n        headers:\n            -   strtoull\n    -   decl: decl\n        headers:\n            -   strverscmp\n    -   decl: decl\n        headers:\n            -   times\n    -   decl: decl\n        headers:\n            -   unsetenv\n    -   decl: decl\n        headers:\n            -   vasprintf\n    -   decl: decl\n        headers:\n            -   vsnprintf\n\n",
    "source": {
        "remote": {
            "url": "ftp:\/\/ftp.gnu.org\/gnu\/gcc\/gcc-{v}\/gcc-{v}.tar.xz"
        }
    },
    "hash": "2996737d90ddb1fd73f95478888439952d329a32cdf078de05b69b6a540d02cd",
    "created": "2018-10-28 21:57:37.565775"
}
