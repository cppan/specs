{
    "project": "pvt.cppan.demo.gnu.readline.readline",
    "cppan": "source:\n    remote: ftp:\/\/ftp.gnu.org\/gnu\/readline\/readline-7.0.tar.gz\n\nversion: 7.0.0\n\nunpack_directory: readline\n\nstatic_only: true\n\nfiles:\n    -   .*\\.h\n    -   bind.c\n    -   callback.c\n    -   colors.c\n    -   compat.c\n    -   complete.c\n    -   display.c\n    -   emacs_keymap.c\n    -   funmap.c\n    -   histexpand.c\n    -   histfile.c\n    -   history.c\n    -   histsearch.c\n    -   input.c\n    -   isearch.c\n    -   keymaps.c\n    -   kill.c\n    -   macro.c\n    -   mbutil.c\n    -   misc.c\n    -   nls.c\n    -   parens.c\n    -   parse-colors.c\n    -   readline.c\n    -   rltty.c\n    -   search.c\n    -   shell.c\n    -   signals.c\n    -   terminal.c\n    -   text.c\n    -   tilde.c\n    -   undo.c\n    -   util.c\n    -   vi_keymap.c\n    -   vi_mode.c\n    -   xfree.c\n    -   xmalloc.c\n\nexclude_from_build:\n    -   readline\/emacs_keymap.c\n    -   readline\/vi_keymap.c\n\noptions:\n    any:\n        definitions:\n            private:\n                -   READLINE_LIBRARY\n            public:\n                -   HAVE_TERMCAP_H\n                -   NO_MULTIBYTE_SUPPORT\n                -   VI_MODE\n\ndependencies:\n    public:\n        pvt.cppan.demo.gnu.termutils.termcap:\n            version: 1\n        pvt.cppan.demo.tronkko.dirent:\n            version: master\n\npost_sources: |\n    add_definitions(-DHAVE_CONFIG_H)\n    \n    if (HAVE_LANGINFO_H AND HAVE_NL_LANGINFO)\n        add_definitions(-DHAVE_LANGINFO_CODESET=1)\n    endif()\n    \n    if (CMAKE_SIZEOF_VOID_P EQUAL 8)\n        add_definitions(-Dssize_t=long long int)\n    else()\n        add_definitions(-Dssize_t=int)\n    endif()\n    \n    replace_in_file_once(${SDIR}\/readline\/posixdir.h \"#    define dirent direct\" \"\")\n    replace_in_file_once(${SDIR}\/readline\/rldefs.h \"#      define NEW_TTY_DRIVER\" \"#      define NO_TTY_DRIVER\")\n    replace_in_file_once(${SDIR}\/readline\/input.c \"if (result >= 0)\" \"#ifdef _WIN32\\nreturn (_getch());\\n#endif\\nif (result >= 0)\")\n        \n    file_write_once(${BDIR}\/config.h \"\n    #pragma once    \n    \n    #ifdef _MSC_VER\n    #define __WIN32__\n    #define mode_t unsigned short\n    #include <dirent.h>\n    #define S_ISUID 04000\n    #define S_ISGID 02000\n    #define __STDC__ 1\n    #define _CRT_DECLARE_NONSTDC_NAMES 1\n    #include <fcntl.h>\n    #endif\n    \n    #define RETSIGTYPE void\n    #define DVOID_SIGHANDLER 1\n    \")\n\ncheck_function_exists:\n    -   chown\n    -   fcntl\n    -   getpwent\n    -   getpwnam\n    -   getpwuid\n    -   isascii\n    -   isxdigit\n    -   kill\n    -   lstat\n    -   memmove\n    -   pselect\n    -   putenv\n    -   readlink\n    -   select\n    -   setenv\n    -   setlocale\n    -   strcasecmp\n    -   strcoll\n    -   strpbrk\n    -   tcgetattr\n    -   vsnprintf\n\ncheck_include_exists:\n    -   file: dirent.h\n        variable: HAVE_DIRENT_H\n        cpp: false\n    -   file: fcntl.h\n        variable: HAVE_FCNTL_H\n        cpp: false\n    -   file: langinfo.h\n        variable: HAVE_LANGINFO_H\n        cpp: false\n    -   file: libaudit.h\n        variable: HAVE_LIBAUDIT_H\n        cpp: false\n    -   file: limits.h\n        variable: HAVE_LIMITS_H\n        cpp: false\n    -   file: linux\/audit.h\n        variable: HAVE_LINUX_AUDIT_H\n        cpp: false\n    -   file: locale.h\n        variable: HAVE_LOCALE_H\n        cpp: false\n    -   file: memory.h\n        variable: HAVE_MEMORY_H\n        cpp: false\n    -   file: ncurses\/termcap.h\n        variable: HAVE_NCURSES_TERMCAP_H\n        cpp: false\n    -   file: ndir.h\n        variable: HAVE_NDIR_H\n        cpp: false\n    -   file: pwd.h\n        variable: HAVE_PWD_H\n        cpp: false\n    -   file: stdarg.h\n        variable: HAVE_STDARG_H\n        cpp: false\n    -   file: stdbool.h\n        variable: HAVE_STDBOOL_H\n        cpp: false\n    -   file: stdlib.h\n        variable: HAVE_STDLIB_H\n        cpp: false\n    -   file: strings.h\n        variable: HAVE_STRINGS_H\n        cpp: false\n    -   file: string.h\n        variable: HAVE_STRING_H\n        cpp: false\n    -   file: sys\/dir.h\n        variable: HAVE_SYS_DIR_H\n        cpp: false\n    -   file: sys\/file.h\n        variable: HAVE_SYS_FILE_H\n        cpp: false\n    -   file: sys\/ioctl.h\n        variable: HAVE_SYS_IOCTL_H\n        cpp: false\n    -   file: sys\/ndir.h\n        variable: HAVE_SYS_NDIR_H\n        cpp: false\n    -   file: sys\/ptem.h\n        variable: HAVE_SYS_PTEM_H\n        cpp: false\n    -   file: sys\/pte.h\n        variable: HAVE_SYS_PTE_H\n        cpp: false\n    -   file: sys\/select.h\n        variable: HAVE_SYS_SELECT_H\n        cpp: false\n    -   file: sys\/stream.h\n        variable: HAVE_SYS_STREAM_H\n        cpp: false\n    -   file: termios.h\n        variable: HAVE_TERMIOS_H\n        cpp: false\n    -   file: termio.h\n        variable: HAVE_TERMIO_H\n        cpp: false\n    -   file: unistd.h\n        variable: HAVE_UNISTD_H\n        cpp: false\n    -   file: varargs.h\n        variable: HAVE_VARARGS_H\n        cpp: false\n    -   file: wchar.h\n        variable: HAVE_WCHAR_H\n        cpp: false\n    -   file: wctype.h\n        variable: HAVE_WCTYPE_H\n        cpp: false\n\ncheck_type_size:\n    -   type: mb_state_t\n    -   type: signal\n    -   type: ssize_t\n    -   type: wchar_t\n\ncheck_symbol_exists:\n    -   symbol: AUDIT_USER_TTY\n        headers:\n            -   linux\/audit.h\n    -   symbol: wctype_t\n        headers:\n            -   wctype.h\n    -   symbol: wint_t\n        headers:\n            -   wctype.h\n\ncheck_c_source_compiles:\n    STDC_HEADERS:\n        text: \"\\n#include <stdlib.h>\\n#include <stdarg.h>\\n#include <string.h>\\n#include <float.h>\\nint main() {return 0;}\\n\"\n        invert: false\n\n",
    "source": {
        "remote": {
            "url": "ftp:\/\/ftp.gnu.org\/gnu\/readline\/readline-7.0.tar.gz"
        }
    },
    "version": "7.0.0",
    "created": "2017-02-26 18:02:24.394677",
    "hash": "a79f419ad28a15b4e49a46db7e08b321a5d8eae3f8893c31f44e8953e02ce4e4"
}
