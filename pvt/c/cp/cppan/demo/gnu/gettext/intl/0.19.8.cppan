{
    "project": "pvt.cppan.demo.gnu.gettext.intl",
    "cppan": "check_include_exists:\n  - alloca.h\n  - argz.h\n  - features.h\n  - inttypes.h\n  - limits.h\n  - stdint.h\n  - sys\/param.h\n  - unistd.h\n  - pthread.h\nsource:\n  remote: http:\/\/ftp.gnu.org\/pub\/gnu\/gettext\/gettext-0.19.8.1.tar.gz\nversion: 0.19.8\ndependencies:\n  pvt.cppan.demo.gnu.iconv.libiconv: 1\nfiles:\n  grp:\n    root: gettext-runtime\/intl\n    files:\n      - .*\\.h\n      - .*\\.c\ncheck_type_size:\n  - wchar_t\n  - long long int\ncheck_symbol_exists:\n  wctype_t: wctype.h\n  wint_t: wctype.h\n  snprintf: stdio.h\n  PTHREAD_MUTEX_RECURSIVE: pthread.h\ncheck_functions_exists:\n  - alloca\n  - argz_count\n  - argz_next\n  - argz_stringify\n  - asprintf\n  - CFLocaleCopyCurrent\n  - CFPreferencesCopyAppValue\n  - __fsetlocking\n  - fwprintf\n  - getcwd\n  - getegid\n  - geteuid\n  - getgid\n  - getlocalename_l\n  - getuid\n  - mbrtowc\n  - mempcpy\n  - mmap\n  - munmap\n  - newlocale\n  - setlocale\n  - strcpy\n  - strcasecmp\n  - strdup\n  - strnlen\n  - strtoul\n  - tsearch\n  - uselocale\n  - wcrtomb\n  - wcslen\n  - wcsnlen\n  - wprintf\n  - nl_langinfo\nexclude_from_build:\n  - gettext-runtime\/intl\/relocatable.c\n  - gettext-runtime\/intl\/localcharset.c\n  - gettext-runtime\/intl\/intl-exports.c\n  - gettext-runtime\/intl\/os2compat.c\npost_sources: !<!> \"set(HAVE_VISIBILITY 0)\\nset(HAVE_POSIX_PRINTF 0)\\nif (NOT HAVE_NEWLOCALE)\\n    set(HAVE_NEWLOCALE 0)\\nendif()\\nif (NOT HAVE_ASPRINTF)\\n    set(HAVE_ASPRINTF 0)\\nendif()\\nif (NOT HAVE_SNPRINTF)\\n    set(HAVE_SNPRINTF 0)\\nendif()\\nif (NOT HAVE_WPRINTF)\\n    set(HAVE_WPRINTF 0)\\nendif()\\n\\nadd_definitions(-DHAVE_CONFIG_H)\\n\\nif (HAVE_LANGINFO_H AND HAVE_NL_LANGINFO)\\n    add_definitions(-DHAVE_LANGINFO_CODESET=1)\\nendif()\\n\\nif (NOT EXISTS ${SDIR}\/fix.dummy)\\n    file(READ ${SDIR}\/gettext-runtime\/intl\/libgnuintl.in.h f)\\n    string(REPLACE \\\"extern \\\\\\\"\\\" \\\"myexternc\\\" f \\\"${f}\\\")\\n    string(REPLACE \\\"extern \\\" \\\"extern ${LIBRARY_API} \\\" f \\\"${f}\\\")\\n    string(REPLACE \\\"myexternc\\\" \\\"extern \\\\\\\"\\\" f \\\"${f}\\\")\\n    string(REPLACE \\\"IN_LIBGLOCALE\\\" \\\"__VERY_UNDEFINED_DEFINITION__\\\" f \\\"${f}\\\")\\n    file(WRITE ${SDIR}\/gettext-runtime\/intl\/libgnuintl.in.h \\\"${f}\\\")\\n\\n    #file(READ ${SDIR}\/readline\/rldefs.h f)\\n    #string(REPLACE \\\"#      define NEW_TTY_DRIVER\\\" \\\"#      define NO_TTY_DRIVER\\\" f \\\"${f}\\\")\\n    #file(WRITE ${SDIR}\/readline\/rldefs.h \\\"${f}\\\")\\n\\n    file_write_once(${SDIR}\/fix.dummy \\\"\\\")\\nendif()\\n\\nconfigure_file(\\n    ${SDIR}\/gettext-runtime\/intl\/libgnuintl.in.h\\n    ${BDIR}\/libgnuintl.h\\n    @ONLY\\n)\\nconfigure_file(\\n    ${SDIR}\/gettext-runtime\/intl\/libgnuintl.in.h\\n    ${BDIR}\/libintl.h\\n    @ONLY\\n)\\n\\nfile_write_once(${BDIR}\/config.h \\\"\\n#pragma once\\n\\n#define HAVE_ICONV 1\\n#define HAVE_LC_MESSAGES 1\\n#define HAVE_PER_THREAD_LOCALE 1\\n\\n#ifndef WIN32\\n#define HAVE_PTHREAD_RWLOCK 1\\n#endif\\n\\n#ifdef _MSC_VER\\n#define LOCALEDIR \\\\\\\".\\\\\\\"\\n#define LOCALE_ALIAS_PATH \\\\\\\".\\\\\\\"\\n#define tmp_dirname \\\\\\\"%TEMP%\\\\\\\"\\n#endif\\n\\n\/* Please see the Gnulib manual for how to use these macros.\\n\\nSuppress extern inline with HP-UX cc, as it appears to be broken; see\\n<http:\/\/lists.gnu.org\/archive\/html\/bug-texinfo\/2013-02\/msg00030.html>.\\n\\nSuppress extern inline with Sun C in standards-conformance mode, as it\\nmishandles inline functions that call each other.  E.g., for 'inline void f\\n(void) { } inline void g (void) { f (); }', c99 incorrectly complains\\n'reference to static identifier \\\\\\\"f\\\\\\\" in extern inline function'.\\nThis bug was observed with Sun C 5.12 SunOS_i386 2011\/11\/16.\\n\\nSuppress extern inline (with or without __attribute__ ((__gnu_inline__)))\\non configurations that mistakenly use 'static inline' to implement\\nfunctions or macros in standard C headers like <ctype.h>.  For example,\\nif isdigit is mistakenly implemented via a static inline function,\\na program containing an extern inline function that calls isdigit\\nmay not work since the C standard prohibits extern inline functions\\nfrom calling static functions.  This bug is known to occur on:\\n\\nOS X 10.8 and earlier; see:\\nhttp:\/\/lists.gnu.org\/archive\/html\/bug-gnulib\/2012-12\/msg00023.html\\n\\nDragonFly; see\\nhttp:\/\/muscles.dragonflybsd.org\/bulk\/bleeding-edge-potential\/latest-per-pkg\/ah-tty-0.3.12.log\\n\\nFreeBSD; see:\\nhttp:\/\/lists.gnu.org\/archive\/html\/bug-gnulib\/2014-07\/msg00104.html\\n\\nOS X 10.9 has a macro __header_inline indicating the bug is fixed for C and\\nfor clang but remains for g++; see <http:\/\/trac.macports.org\/ticket\/41033>.\\nAssume DragonFly and FreeBSD will be similar.  *\/\\n#if (((defined __APPLE__ && defined __MACH__) \\\\\\n      || defined __DragonFly__ || defined __FreeBSD__) \\\\\\n     && (defined __header_inline \\\\\\n         ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \\\\\\n            && ! defined __clang__) \\\\\\n         : ((! defined _DONT_USE_CTYPE_INLINE_ \\\\\\n             && (defined __GNUC__ || defined __cplusplus)) \\\\\\n            || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \\\\\\n                && defined __GNUC__ && ! defined __cplusplus))))\\n# define _GL_EXTERN_INLINE_STDHEADER_BUG\\n#endif\\n#if ((__GNUC__ \\\\\\n      ? defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__ \\\\\\n      : (199901L <= __STDC_VERSION__ \\\\\\n         && !defined __HP_cc \\\\\\n         && !defined __PGI \\\\\\n         && !(defined __SUNPRO_C && __STDC__))) \\\\\\n     && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)\\n# define _GL_INLINE inline\\n# define _GL_EXTERN_INLINE extern inline\\n# define _GL_EXTERN_INLINE_IN_USE\\n#elif (2 < __GNUC__ + (7 <= __GNUC_MINOR__) && !defined __STRICT_ANSI__ \\\\\\n       && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)\\n# if defined __GNUC_GNU_INLINE__ && __GNUC_GNU_INLINE__\\n\/* __gnu_inline__ suppresses a GCC 4.2 diagnostic.  *\/\\n#  define _GL_INLINE extern inline __attribute__ ((__gnu_inline__))\\n# else\\n#  define _GL_INLINE extern inline\\n# endif\\n# define _GL_EXTERN_INLINE extern\\n# define _GL_EXTERN_INLINE_IN_USE\\n#else\\n# define _GL_INLINE static _GL_UNUSED\\n# define _GL_EXTERN_INLINE static _GL_UNUSED\\n#endif\\n\\n\\n\/* In GCC 4.6 (inclusive) to 5.1 (exclusive),\\nsuppress bogus \\\\\\\"no previous prototype for 'FOO'\\\\\\\"\\nand \\\\\\\"no previous declaration for 'FOO'\\\\\\\" diagnostics,\\nwhen FOO is an inline function in the header; see\\n<https:\/\/gcc.gnu.org\/bugzilla\/show_bug.cgi?id=54113> and\\n<https:\/\/gcc.gnu.org\/bugzilla\/show_bug.cgi?id=63877>.  *\/\\n#if __GNUC__ == 4 && 6 <= __GNUC_MINOR__\\n# if defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__\\n#  define _GL_INLINE_HEADER_CONST_PRAGMA\\n# else\\n#  define _GL_INLINE_HEADER_CONST_PRAGMA \\\\\\n     _Pragma (\\\\\\\"GCC diagnostic ignored \\\\\\\\\\\\\\\"-Wsuggest-attribute=const\\\\\\\\\\\\\\\"\\\\\\\")\\n# endif\\n# define _GL_INLINE_HEADER_BEGIN \\\\\\n    _Pragma (\\\\\\\"GCC diagnostic push\\\\\\\") \\\\\\n    _Pragma (\\\\\\\"GCC diagnostic ignored \\\\\\\\\\\\\\\"-Wmissing-prototypes\\\\\\\\\\\\\\\"\\\\\\\") \\\\\\n    _Pragma (\\\\\\\"GCC diagnostic ignored \\\\\\\\\\\\\\\"-Wmissing-declarations\\\\\\\\\\\\\\\"\\\\\\\") \\\\\\n    _GL_INLINE_HEADER_CONST_PRAGMA\\n# define _GL_INLINE_HEADER_END \\\\\\n    _Pragma (\\\\\\\"GCC diagnostic pop\\\\\\\")\\n#else\\n# define _GL_INLINE_HEADER_BEGIN\\n# define _GL_INLINE_HEADER_END\\n#endif\\n\\n\/* Define as a marker that can be attached to declarations that might not\\nbe used.  This helps to reduce warnings, such as from\\nGCC -Wunused-parameter.  *\/\\n#ifndef _GL_UNUSED\\n# if __GNUC__ >= 3 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)\\n#  define _GL_UNUSED __attribute__ ((__unused__))\\n# else\\n#  define _GL_UNUSED\\n# endif\\n#endif\\n\\n\\n\\n#define __libc_lock_t                   gl_lock_t\\n#define __libc_lock_define              gl_lock_define\\n#define __libc_lock_define_initialized  gl_lock_define_initialized\\n#define __libc_lock_init                gl_lock_init\\n#define __libc_lock_lock                gl_lock_lock\\n#define __libc_lock_unlock              gl_lock_unlock\\n#define __libc_lock_recursive_t                   gl_recursive_lock_t\\n#define __libc_lock_define_recursive              gl_recursive_lock_define\\n#define __libc_lock_define_initialized_recursive  gl_recursive_lock_define_initialized\\n#define __libc_lock_init_recursive                gl_recursive_lock_init\\n#define __libc_lock_lock_recursive                gl_recursive_lock_lock\\n#define __libc_lock_unlock_recursive              gl_recursive_lock_unlock\\n#define glthread_in_use  libintl_thread_in_use\\n#define glthread_lock_init_func     libintl_lock_init_func\\n#define glthread_lock_lock_func     libintl_lock_lock_func\\n#define glthread_lock_unlock_func   libintl_lock_unlock_func\\n#define glthread_lock_destroy_func  libintl_lock_destroy_func\\n#define glthread_rwlock_init_multithreaded     libintl_rwlock_init_multithreaded\\n#define glthread_rwlock_init_func              libintl_rwlock_init_func\\n#define glthread_rwlock_rdlock_multithreaded   libintl_rwlock_rdlock_multithreaded\\n#define glthread_rwlock_rdlock_func            libintl_rwlock_rdlock_func\\n#define glthread_rwlock_wrlock_multithreaded   libintl_rwlock_wrlock_multithreaded\\n#define glthread_rwlock_wrlock_func            libintl_rwlock_wrlock_func\\n#define glthread_rwlock_unlock_multithreaded   libintl_rwlock_unlock_multithreaded\\n#define glthread_rwlock_unlock_func            libintl_rwlock_unlock_func\\n#define glthread_rwlock_destroy_multithreaded  libintl_rwlock_destroy_multithreaded\\n#define glthread_rwlock_destroy_func           libintl_rwlock_destroy_func\\n#define glthread_recursive_lock_init_multithreaded     libintl_recursive_lock_init_multithreaded\\n#define glthread_recursive_lock_init_func              libintl_recursive_lock_init_func\\n#define glthread_recursive_lock_lock_multithreaded     libintl_recursive_lock_lock_multithreaded\\n#define glthread_recursive_lock_lock_func              libintl_recursive_lock_lock_func\\n#define glthread_recursive_lock_unlock_multithreaded   libintl_recursive_lock_unlock_multithreaded\\n#define glthread_recursive_lock_unlock_func            libintl_recursive_lock_unlock_func\\n#define glthread_recursive_lock_destroy_multithreaded  libintl_recursive_lock_destroy_multithreaded\\n#define glthread_recursive_lock_destroy_func           libintl_recursive_lock_destroy_func\\n#define glthread_once_func            libintl_once_func\\n#define glthread_once_singlethreaded  libintl_once_singlethreaded\\n#define glthread_once_multithreaded   libintl_once_multithreaded\\n\\n\\n\\n\/* On Windows, variables that may be in a DLL must be marked specially.  *\/\\n#if (defined _MSC_VER && defined _DLL) && !defined IN_RELOCWRAPPER\\n# define DLL_VARIABLE __declspec (dllimport)\\n#else\\n# define DLL_VARIABLE\\n#endif\\n\\n\\\")\"\noptions:\n  any:\n    definitions:\n      private:\n        - IN_LIBINTL",
    "version": "0.19.8",
    "source": {
        "remote": {
            "url": "http:\/\/ftp.gnu.org\/pub\/gnu\/gettext\/gettext-0.19.8.1.tar.gz"
        }
    }
}
