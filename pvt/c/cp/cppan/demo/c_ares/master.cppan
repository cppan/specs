{
    "project": "pvt.cppan.demo.c_ares",
    "cppan": "source:\n  git: https:\/\/github.com\/c-ares\/c-ares\nversion: master\ntype: lib\nfiles:\n  - !<!> \"[^\/]*\\\\.h\"\n  - !<!> \"[^\/]*\\\\.c\"\n  - ares_build.h.cmake\n  - ares_config.h.cmake\nexclude_from_package:\n  - acountry.c\n  - adig.c\n  - ahost.c\noptions:\n  any:\n    definitions:\n      private:\n        - CARES_BUILDING_LIBRARY\n  static:\n    definitions:\n      public:\n        - CARES_STATICLIB\npost_sources: !<!> \"if(HAVE_SOCKLEN_T)\\n    set(CARES_TYPEOF_ARES_SOCKLEN_T \\\"socklen_t\\\")\\nelse()\\n    set(CARES_TYPEOF_ARES_SOCKLEN_T \\\"int\\\")\\nendif()\\n\\nset(CARES_HAVE_SYS_TYPES_H ${HAVE_SYS_TYPES_H})\\nset(CARES_HAVE_SYS_SOCKET_H ${HAVE_SYS_SOCKET_H})\\nset(CARES_HAVE_WINDOWS_H ${HAVE_WINDOWS_H})\\nset(CARES_HAVE_WS2TCPIP_H ${HAVE_WS2TCPIP_H})\\nset(CARES_HAVE_WINSOCK2_H ${HAVE_WINSOCK2_H})\\n\\n# Write ares_build.h configuration file.  This is an installed file.\\nconfigure_file(${SDIR}\/ares_build.h.cmake ${BDIR}\/ares_build.h)\\n\\n# Write ares_config.h configuration file.  This is used only for the build.\\nconfigure_file(${SDIR}\/ares_config.h.cmake ${BDIR}\/ares_config.h)\\n\"\ncheck_function_exists:\n  - bitncmp\n  - gethostbyname\n  - gettimeofday\n  - if_indextoname\n  - strcasecmp\ncheck_include_exists:\n  - file: windows.h\n    variable: HAVE_WINDOWS_H\n    cpp: false\n  - file: ws2tcpip.h\n    variable: HAVE_WS2TCPIP_H\n    cpp: false\n  - file: winsock2.h\n    variable: HAVE_WINSOCK2_H\n    cpp: false\n  - file: arpa\/inet.h\n    variable: HAVE_ARPA_INET_H\n    cpp: false\n  - file: arpa\/nameser_compat.h\n    variable: HAVE_ARPA_NAMESER_COMPAT_H\n    cpp: false\n  - file: arpa\/nameser.h\n    variable: HAVE_ARPA_NAMESER_H\n    cpp: false\n  - file: assert.h\n    variable: HAVE_ASSERT_H\n    cpp: false\n  - file: errno.h\n    variable: HAVE_ERRNO_H\n    cpp: false\n  - file: limits.h\n    variable: HAVE_LIMITS_H\n    cpp: false\n  - file: netdb.h\n    variable: HAVE_NETDB_H\n    cpp: false\n  - file: netinet\/in.h\n    variable: HAVE_NETINET_IN_H\n    cpp: false\n  - file: netinet\/tcp.h\n    variable: HAVE_NETINET_TCP_H\n    cpp: false\n  - file: net\/if.h\n    variable: HAVE_NET_IF_H\n    cpp: false\n  - file: socket.h\n    variable: HAVE_SOCKET_H\n    cpp: false\n  - file: stdbool.h\n    variable: HAVE_STDBOOL_H\n    cpp: false\n  - file: stdlib.h\n    variable: HAVE_STDLIB_H\n    cpp: false\n  - file: strings.h\n    variable: HAVE_STRINGS_H\n    cpp: false\n  - file: sys\/ioctl.h\n    variable: HAVE_SYS_IOCTL_H\n    cpp: false\n  - file: sys\/param.h\n    variable: HAVE_SYS_PARAM_H\n    cpp: false\n  - file: sys\/select.h\n    variable: HAVE_SYS_SELECT_H\n    cpp: false\n  - file: sys\/socket.h\n    variable: HAVE_SYS_SOCKET_H\n    cpp: false\n  - file: sys\/time.h\n    variable: HAVE_SYS_TIME_H\n    cpp: false\n  - file: sys\/types.h\n    variable: HAVE_SYS_TYPES_H\n    cpp: false\n  - file: sys\/uio.h\n    variable: HAVE_SYS_UIO_H\n    cpp: false\n  - file: time.h\n    variable: HAVE_TIME_H\n    cpp: false\ncheck_type_size:\n  - bool\n  - long\n  - signal\n  - size_t\n  - ssize_t\ncheck_library_function:\n  - function: gethostbyname\n    library: nsl\n  - function: strcasecmp\n    library: resolve\ncheck_c_source_compiles:\n  HAVE_TIME_WITH_SYS_TIME:\n    text: !<!> \"\\n#include <time.h>\\n#include <sys\/time.h>\\nint main() {return 0;}\\n\"\n    invert: false\n  STDC_HEADERS:\n    text: !<!> \"\\n#include <stdlib.h>\\n#include <stdarg.h>\\n#include <string.h>\\n#include <float.h>\\nint main() {return 0;}\\n\"\n    invert: false\nchecks:\n  HAVE_STRUCT_ADDRINFO_AI_FLAGS:\n    text: CHECK_STRUCT_HAS_MEMBER(\"struct addrinfo\" ai_flags \"\" HAVE_STRUCT_ADDRINFO_AI_FLAGS)\n    invert: false\n  HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID:\n    text: CHECK_STRUCT_HAS_MEMBER(\"struct sockaddr_in6\" sin6_scope_id \"\" HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID)\n    invert: false",
    "version": "master",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/c-ares\/c-ares",
            "branch": "master"
        }
    },
    "sha256": "1b8753d16b3e9297c5586b96837a2841a90946adea462e58b86400580efff3dc",
    "created": "2016-11-25 11:53:41.947138"
}
