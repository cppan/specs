{
    "project": "pvt.cppan.demo.boost.context",
    "cppan": "post_sources: !<!> \"remove_src_win32(src\/posix\/stack_traits.cpp)\\nremove_src_unix(src\/windows\/stack_traits.cpp)\\n\\nadd_definitions(-DBOOST_EXECUTION_CONTEXT=1)\\n\\nif(WIN32)\\n  set(default_abi ms)\\nelseif(\\\"${CMAKE_SYSTEM_PROCESSOR}\\\" STREQUAL \\\"mips\\\")\\n  set(default_abi o32)\\nelse()\\n  set(default_abi sysv)\\nendif()\\n\\nif(APPLE)\\n  set(default_binary_format mach-o)\\nelseif(WIN32)\\n  set(default_binary_format pe)\\nelse()\\n  set(default_binary_format elf)\\nendif()\\n\\n# TODO: add armasm\\nset(asm_type gas)\\nif (MSVC)\\n    set(asm_type masm)\\n\\n    enable_language(ASM_MASM)\\n    set(ext asm)\\nendif()\\n\\nif (UNIX)\\n    enable_language(ASM)\\n    set(ext S)\\nendif()\\n\\nset(arch i386)\\nif (CMAKE_SIZEOF_VOID_P EQUAL 8)\\n    set(arch x86_64)\\nendif()\\n\\nstring(FIND \\\"${CMAKE_SYSTEM_PROCESSOR}\\\" \\\"arm\\\" arm)\\nif (arm EQUAL 0)\\n    set(default_abi aapcs)\\n    set(arch arm)\\n    if (CMAKE_SIZEOF_VOID_P EQUAL 8)\\n        set(arch ${arch}64)\\n    endif()\\nendif()\\n\\nset(asm\\n    src\/asm\/jump_${arch}_${default_abi}_${default_binary_format}_${asm_type}.${ext}\\n    src\/asm\/make_${arch}_${default_abi}_${default_binary_format}_${asm_type}.${ext}\\n    src\/asm\/ontop_${arch}_${default_abi}_${default_binary_format}_${asm_type}.${ext}\\n)\\n\\nif (MSVC)\\n    foreach(a ${asm})\\n        set_source_files_properties(${a} PROPERTIES COMPILE_FLAGS \\\"\/safeseh\\\")\\n    endforeach()\\nendif()\\n\\nset(src ${src} ${asm})\\n\"\nversion: 1.62.0\nbuild:\n  - src\/execution_context.cpp\n  - src\/posix\/stack_traits.cpp\n  - src\/windows\/stack_traits.cpp\noptions:\n  shared:\n    definitions:\n      public:\n        - BOOST_CONTEXT_DYN_LINK\n        - BOOST_ALL_DYN_LINK\n        - BOOST_CONTEXT_USE_DLL\n      private:\n        - BOOST_CONTEXT_EXPORT=EXPORT\n        - BOOST_CONTEXT_BUILD_DLL\n  any:\n    definitions:\n      private:\n        - BOOST_CONTEXT_SOURCE\n        - BOOST_CONTEXT_BUILDING_THE_LIB\n  static:\n    definitions:\n      private:\n        - BOOST_CONTEXT_EXPORT=\n      public:\n        - BOOST_CONTEXT_STATIC_LINK\n        - BOOST_ALL_STATIC_LINK\n        - BOOST_CONTEXT_BUILD_LIB\nsource:\n  git: https:\/\/github.com\/boostorg\/context\n  tag: boost-1.62.0\ndependencies:\n  public:\n    pvt.cppan.demo.boost.date_time:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.conversion:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.type_index:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.phoenix:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.container:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.config:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.core:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.detail:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.endian:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.functional:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.filesystem:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.exception:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.fusion:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.function_types:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.integer:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.foreach:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.static_assert:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.intrusive:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.function:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.iostreams:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.io:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.unordered:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.spirit:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.tti:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.throw_exception:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.system:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.tokenizer:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.lambda:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.tuple:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.typeof:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.type_traits:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.winapi:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.utility:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.variant:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.lexical_cast:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.math:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.smart_ptr:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.locale:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.move:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.mpl:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.pool:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.optional:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.predef:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.numeric:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.regex:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.preprocessor:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.random:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.iterator:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.ratio:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.range:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.thread: !<!> \"*\"\n    pvt.cppan.demo.boost.proto:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.concept_check:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.align:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.atomic:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.rational:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.serialization:\n      include_directories_only: true\n      version: !<!> \"*\"\n    pvt.cppan.demo.boost.array:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.algorithm:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.chrono:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.bind:\n      version: !<!> \"*\"\n      include_directories_only: true\n    pvt.cppan.demo.boost.assert:\n      version: !<!> \"*\"\n      include_directories_only: true\ninclude_directories:\n  public:\n    - include\n  private:\n    - src\nfiles:\n  - include\/.*\n  - src\/.*",
    "version": "1.62.0",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/boostorg\/context",
            "tag": "boost-1.62.0"
        }
    }
}
