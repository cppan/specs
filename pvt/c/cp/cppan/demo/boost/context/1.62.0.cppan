{
    "project": "pvt.cppan.demo.boost.context",
    "cppan": "source:\n    git: https:\/\/github.com\/boostorg\/context\n    tag: boost-1.62.0\n\nversion: 1.62.0\n\nfiles:\n    -   include\/.*\n    -   src\/.*\n\nbuild:\n    -   src\/execution_context.cpp\n    -   src\/posix\/stack_traits.cpp\n    -   src\/windows\/stack_traits.cpp\n\ninclude_directories:\n    public:\n        -   include\n    private:\n        -   src\n\noptions:\n    shared:\n        definitions:\n            public:\n                -   BOOST_CONTEXT_DYN_LINK\n                -   BOOST_ALL_DYN_LINK\n                -   BOOST_CONTEXT_USE_DLL\n            private:\n                -   BOOST_CONTEXT_EXPORT=EXPORT\n                -   BOOST_CONTEXT_BUILD_DLL\n    any:\n        definitions:\n            private:\n                -   BOOST_CONTEXT_SOURCE\n                -   BOOST_CONTEXT_BUILDING_THE_LIB\n    static:\n        definitions:\n            private:\n                -   BOOST_CONTEXT_EXPORT=\n            public:\n                -   BOOST_CONTEXT_STATIC_LINK\n                -   BOOST_ALL_STATIC_LINK\n                -   BOOST_CONTEXT_BUILD_LIB\n\ndependencies:\n    public:\n        pvt.cppan.demo.boost.date_time:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.conversion:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.type_index:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.phoenix:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.container:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.config:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.core:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.detail:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.endian:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.functional:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.filesystem:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.exception:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.fusion:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.function_types:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.integer:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.foreach:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.static_assert:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.intrusive:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.function:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.iostreams:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.io:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.unordered:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.spirit:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.tti:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.throw_exception:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.system:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.tokenizer:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.lambda:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.tuple:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.typeof:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.type_traits:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.winapi:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.utility:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.variant:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.lexical_cast:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.math:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.smart_ptr:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.locale:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.move:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.mpl:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.pool:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.optional:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.predef:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.numeric:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.regex:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.preprocessor:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.random:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.iterator:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.ratio:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.range:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.thread: \"*\"\n        pvt.cppan.demo.boost.proto:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.concept_check:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.align:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.atomic:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.rational:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.serialization:\n            include_directories_only: true\n            version: \"*\"\n        pvt.cppan.demo.boost.array:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.algorithm:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.chrono:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.bind:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.boost.assert:\n            version: \"*\"\n            include_directories_only: true\n\npost_sources: |\n    remove_src_win32(src\/posix\/stack_traits.cpp)\n    remove_src_unix(src\/windows\/stack_traits.cpp)\n    \n    add_definitions(-DBOOST_EXECUTION_CONTEXT=1)\n    \n    if(WIN32)\n      set(default_abi ms)\n    elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" STREQUAL \"mips\")\n      set(default_abi o32)\n    else()\n      set(default_abi sysv)\n    endif()\n    \n    if(APPLE)\n      set(default_binary_format mach-o)\n    elseif(WIN32)\n      set(default_binary_format pe)\n    else()\n      set(default_binary_format elf)\n    endif()\n    \n    # TODO: add armasm\n    set(asm_type gas)\n    if (MSVC)\n        set(asm_type masm)\n    \n        enable_language(ASM_MASM)\n        set(ext asm)\n    endif()\n    \n    if (UNIX)\n        enable_language(ASM)\n        set(ext S)\n    endif()\n    \n    set(arch i386)\n    if (CMAKE_SIZEOF_VOID_P EQUAL 8)\n        set(arch x86_64)\n    endif()\n    \n    string(FIND \"${CMAKE_SYSTEM_PROCESSOR}\" \"arm\" arm)\n    if (arm EQUAL 0)\n        set(default_abi aapcs)\n        set(arch arm)\n        if (CMAKE_SIZEOF_VOID_P EQUAL 8)\n            set(arch ${arch}64)\n        endif()\n    endif()\n    \n    set(asm\n        src\/asm\/jump_${arch}_${default_abi}_${default_binary_format}_${asm_type}.${ext}\n        src\/asm\/make_${arch}_${default_abi}_${default_binary_format}_${asm_type}.${ext}\n        src\/asm\/ontop_${arch}_${default_abi}_${default_binary_format}_${asm_type}.${ext}\n    )\n    \n    if (MSVC)\n        foreach(a ${asm})\n            set_source_files_properties(${a} PROPERTIES COMPILE_FLAGS \"\/safeseh\")\n        endforeach()\n    endif()\n    \n    set(src ${src} ${asm})\n    \n\n",
    "version": "1.62.0",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/boostorg\/context",
            "tag": "boost-1.62.0"
        }
    },
    "sha256": "52b7a056039dc6cd73c0753840a379d35572bb5c7ba9f71c73a965067f825828",
    "created": "2016-09-29 15:36:19.263232"
}
