{
    "project": "pvt.cppan.demo.openexr.config",
    "cppan": "source:\n    remote: http:\/\/download.savannah.nongnu.org\/releases\/openexr\/openexr-2.2.0.tar.gz\n\nversion: 2.2.0\n\nfiles:\n    -   config.windows\/.*\n\npost_sources: |\n    SET(OPENEXR_VERSION ${PACKAGE_VERSION})\n    SET(OPENEXR_VERSION_API ${PACKAGE_VERSION_MAJOR}_${PACKAGE_VERSION_MINOR})\n    \n    # Test for GCC-style inline asm support with AVX instructions\n    INCLUDE (CheckCXXSourceCompiles)\n    CHECK_CXX_SOURCE_COMPILES (\n        \"\n        int main()\n        {\n         #if defined(__GNUC__) && defined(__SSE2__)\n             int n   = 0;\n             int eax = 0;\n             int edx = 0;\n             __asm__(\n                 \\\"xgetbv     ;\\\"\n                 \\\"vzeroupper  \\\"\n                 : \\\"=a\\\"(eax), \\\"=d\\\"(edx) : \\\"c\\\"(n) : );\n         #else\n             #error No GCC style inline asm supported for AVX instructions\n         #endif\n        }\n        \" HAVE_GCC_INLINE_ASM_AVX)\n    \n    # Check if sysconf(_SC_NPROCESSORS_ONLN) can be used for CPU count\n    CHECK_CXX_SOURCE_COMPILES (\n        \"\n        #include <unistd.h>\n        int main()\n        {\n            sysconf(_SC_NPROCESSORS_ONLN);\n        }\n        \" HAVE_SYSCONF_NPROCESSORS_ONLN)\n    \n    \n    ##########################\n    # OpenEXRConfig.h generation\n    ##########################\n    if (NOT EXISTS ${BDIR}\/\/OpenEXRConfig.h)\n        IF (WIN32)\n          FILE ( WRITE ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_IMF_HAVE_COMPLETE_IOMANIP 1\\n\" )\n        ELSEIF (APPLE)\n          FILE ( WRITE ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_IMF_HAVE_DARWIN 1\\n\" )\n          FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_IMF_HAVE_COMPLETE_IOMANIP 1\\n\" )\n          FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"#include <string.h>\\n\" )\n        ELSE ()\n          # Linux\n          FILE ( WRITE ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_IMF_HAVE_LINUX_PROCFS 1\\n\" )\n          FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_IMF_HAVE_COMPLETE_IOMANIP 1\\n\" )\n          FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_IMF_HAVE_LARGE_STACK 1\\n\" )\n        ENDIF()\n    \n        FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_IMF_INTERNAL_NAMESPACE_CUSTOM 0\\n\")\n        FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_IMF_NAMESPACE Imf\\n\" )\n        FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_IMF_INTERNAL_NAMESPACE Imf\\n\\n\" )\n    \n        FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_VERSION_STRING \\\"${OPENEXR_VERSION}\\\"\\n\" )\n        FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"#define OPENEXR_PACKAGE_STRING \\\"OpenEXR ${OPENEXR_VERSION}\\\"\\n\" )\n    \n        FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"\n        #define OPENEXR_VERSION_MAJOR ${OPENEXR_VERSION_MAJOR}\n        #define OPENEXR_VERSION_MINOR ${OPENEXR_VERSION_MINOR}\n        #define OPENEXR_VERSION_PATCH ${OPENEXR_VERSION_PATCH}\n        \")\n    \n          FILE ( APPEND ${BDIR}\/\/OpenEXRConfig.h \"\n        \/\/ Version as a single hex number, e.g. 0x01000300 == 1.0.3\n        #define OPENEXR_VERSION_HEX ((OPENEXR_VERSION_MAJOR << 24) | \\\\\n                                     (OPENEXR_VERSION_MINOR << 16) | \\\\\n                                     (OPENEXR_VERSION_PATCH <<  8))\\n\n        \")\n    \n        IF (HAVE_GCC_INLINE_ASM_AVX)\n          FILE ( APPEND ${BDIR}\/OpenEXRConfig.h \"#define OPENEXR_IMF_HAVE_GCC_INLINE_ASM_AVX 1\\n\" )\n        ENDIF()\n    \n        IF (HAVE_SYSCONF_NPROCESSORS_ONLN)\n          FILE ( APPEND ${BDIR}\/OpenEXRConfig.h \"#define OPENEXR_IMF_HAVE_SYSCONF_NPROCESSORS_ONLN 1\\n\" )\n        ENDIF()\n    endif()\n    \n\n",
    "version": "2.2.0",
    "source": {
        "remote": {
            "url": "http:\/\/download.savannah.nongnu.org\/releases\/openexr\/openexr-2.2.0.tar.gz"
        }
    },
    "sha256": "b6b63afa03f66236fc75602bab2a116db1f9bc5273cfb6f8659f65508d5cc59b",
    "created": "2016-09-21 18:57:37.223891"
}
