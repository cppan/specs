{
    "project": "pvt.cppan.demo.google.breakpad.client.windows.handler",
    "cppan": "source:\n    git: https:\/\/github.com\/google\/breakpad\n    branch: master\n\nversion: master\n\ntype: library\n\nroot_directory: src\n\nstatic_only: true\n\nfiles:\n    -   client\/windows\/handler\/exception_handler.cc\n    -   client\/windows\/handler\/exception_handler.h\n\ninclude_directories:\n    public:\n        -   .\n        -   client\/windows\/handler\n\noptions:\n    any:\n        definitions:\n            win32:\n                public:\n                    -   UNICODE\n\ndependencies:\n    public:\n        pvt.cppan.demo.google.breakpad.client.windows.crash_generation.client:\n            version: \"*\"\n\npost_sources: |\n    if (NOT WIN32)\n        remove_src_dir(*)\n        file_write_once(${BDIR}\/dummy.cpp \"static void f(){}\")\n        set(src ${src} ${BDIR}\/dummy.cpp)\n    endif()\n\ncheck_function_exists:\n    -   arc4random\n    -   getrandom\n\ncheck_include_exists:\n    -   file: a.out.h\n        variable: HAVE_A_OUT_H\n        cpp: false\n    -   file: stdlib.h\n        variable: HAVE_STDLIB_H\n        cpp: false\n    -   file: sys\/random.h\n        variable: HAVE_SYS_RANDOM_H\n        cpp: false\n\ncheck_c_source_compiles:\n    STDC_HEADERS:\n        text: \"\\n#include <stdlib.h>\\n#include <stdarg.h>\\n#include <string.h>\\n#include <float.h>\\nint main() {return 0;}\\n\"\n        invert: false\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/google\/breakpad",
            "branch": "master"
        }
    },
    "version": "master",
    "hash": "231981c5f8ebef2b9c11c32e0a16c31908524bc5bc213f4dedd9ee6659c91b38",
    "created": "2018-08-23 21:27:38.921429"
}
