{
    "project": "pvt.cppan.demo.google.glog",
    "cppan": "source:\n    git: https:\/\/github.com\/google\/glog\n    branch: master\n\nversion: master\n\ntype: library\n\napi_name: GOOGLE_GLOG_DLL_DECL\n\nfiles:\n    -   src\/.*\\.cc\n    -   src\/.*\\.h\n    -   src\/.*\\.in\n    -   src\/windows\/port.*\n\noptions:\n    any:\n        definitions:\n            public:\n                -   DECLARE_VARIABLE\n                -   HAVE_LIB_GFLAGS\n\nchecks_prefixes:\n    -   ac_cv_\n\ndependencies:\n    public:\n        pvt.cppan.demo.google.gflags:\n            version: 2\n\npost_sources: |\n    remove_src_dir(*test*)\n    \n    set(ac_cv_have_libgflags 1)\n    set(ac_cv_have_systypes_h ${HAVE_SYS_TYPES_H})\n    if (MSVC)\n        set(ac_cv_have___builtin_expect 0)\n    endif()\n    set(ac_google_start_namespace \"namespace google {\")\n    set(ac_google_end_namespace \"} \/\/ namespace google\")\n    set(ac_google_namespace google)\n    \n    set(GOOGLE_NAMESPACE google)\n    set(_START_GOOGLE_NAMESPACE_ \"namespace google {\")\n    set(_END_GOOGLE_NAMESPACE_ \"} \/\/ namespace google\")\n    \n    configure_file(${SDIR}\/src\/config.h.cmake.in ${BDIR}\/config.h)\n    \n    configure_file(${SDIR}\/src\/glog\/logging.h.in ${BDIR}\/glog\/logging.h @ONLY)\n    configure_file(${SDIR}\/src\/glog\/raw_logging.h.in ${BDIR}\/glog\/raw_logging.h @ONLY)\n    configure_file(${SDIR}\/src\/glog\/stl_logging.h.in ${BDIR}\/glog\/stl_logging.h @ONLY)\n    configure_file(${SDIR}\/src\/glog\/vlog_is_on.h.in ${BDIR}\/glog\/vlog_is_on.h @ONLY)\n\npost_target: |\n    if (WIN32)\n        target_include_directories(${this} PUBLIC ${SDIR}\/src\/windows)\n    endif()\n\ncheck_function_exists:\n    -   dladdr\n    -   fcntl\n    -   pread\n    -   pwrite\n    -   sigaction\n    -   sigaltstack\n\ncheck_include_exists:\n    -   file: execinfo.h\n        variable: HAVE_EXECINFO_H\n        cpp: false\n    -   file: glob.h\n        variable: HAVE_GLOB_H\n        cpp: false\n    -   file: inttypes.h\n        variable: HAVE_INTTYPES_H\n        cpp: false\n    -   file: libunwind.h\n        variable: HAVE_LIBUNWIND_H\n        cpp: false\n    -   file: pwd.h\n        variable: HAVE_PWD_H\n        cpp: false\n    -   file: stdint.h\n        variable: HAVE_STDINT_H\n        cpp: false\n    -   file: stdlib.h\n        variable: HAVE_STDLIB_H\n        cpp: false\n    -   file: syscall.h\n        variable: HAVE_SYSCALL_H\n        cpp: false\n    -   file: syslog.h\n        variable: HAVE_SYSLOG_H\n        cpp: false\n    -   file: sys\/syscall.h\n        variable: HAVE_SYS_SYSCALL_H\n        cpp: false\n    -   file: sys\/time.h\n        variable: HAVE_SYS_TIME_H\n        cpp: false\n    -   file: sys\/types.h\n        variable: HAVE_SYS_TYPES_H\n        cpp: false\n    -   file: sys\/utsname.h\n        variable: HAVE_SYS_UTSNAME_H\n        cpp: false\n    -   file: ucontext.h\n        variable: HAVE_UCONTEXT_H\n        cpp: false\n    -   file: unistd.h\n        variable: HAVE_UNISTD_H\n        cpp: false\n    -   file: unwind.h\n        variable: HAVE_UNWIND_H\n        cpp: false\n\ncheck_type_size:\n    -   type: uint16_t\n    -   type: u_int16_t\n    -   type: __uint16\n\ncheck_library_function:\n    -   function: backtrace\n        library: unwind\n    -   function: pthread_self\n        library: pthread\n\ncheck_symbol_exists:\n    -   symbol: snprintf\n        headers:\n            -   stdio.h\n\ncheck_c_source_compiles:\n    STDC_HEADERS:\n        text: \"\\n#include <stdlib.h>\\n#include <stdarg.h>\\n#include <string.h>\\n#include <float.h>\\nint main() {return 0;}\\n\"\n        invert: false\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/google\/glog",
            "branch": "master"
        }
    },
    "version": "master",
    "created": "2017-03-15 20:43:35.526638",
    "hash": "546970e9a39b6080604b73e7d60ce727fad062b18d9af0d9a3ac71f19a983ca0"
}
