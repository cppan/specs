{
    "project": "pvt.cppan.demo.ffmpeg.avformat",
    "version": "3.3.5",
    "cppan": "source:\n    git: https:\/\/github.com\/FFmpeg\/FFmpeg\n    tag: n3.3.5\n\nversion: 3.3.5\n\ntype: library\n\nexport_all_symbols: true\n\nfiles:\n    -   libavformat\/.*\\.c\n    -   libavformat\/.*\\.h\n\noptions:\n    any:\n        link_libraries:\n            win32:\n                public:\n                    -   Secur32\n\ndependencies:\n    public:\n        pvt.cppan.demo.ffmpeg.avcodec:\n            version: \"*\"\n        pvt.cppan.demo.openssl.ssl:\n            version: 1\n\npost_project: |\n    # strip unexisting symbols with \/O1\n    if (MSVC)\n        string(REPLACE \"\/RTC1\" \"\" CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})\n        string(REPLACE \"\/RTC1\" \"\" CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})\n    \n        set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} \/O1\")\n        set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} \/O1\")\n    endif()\n\npost_sources: |\n    remove_src_dir(libavformat\/tests\/*)\n    #remove_src_win32(libavformat\/async.c)\n    #remove_src_win32(libavformat\/fifo.c)\n    remove_src(libavformat\/bluray.c)\n    #remove_src(libavformat\/gopher.c)\n    #remove_src(libavformat\/http.c)\n    remove_src(libavformat\/libgme.c)\n    remove_src(libavformat\/libmodplug.c)\n    remove_src(libavformat\/libssh.c)\n    remove_src(libavformat\/libsmbclient.c)\n    remove_src(libavformat\/libopenmpt.c)\n    remove_src(libavformat\/librtmp.c)\n    remove_src(libavformat\/libnut.c)\n    remove_src(libavformat\/rtmpcrypt.c)\n    #remove_src(libavformat\/rtmpproto.c)\n    remove_src(libavformat\/rtmpdh.c)\n    remove_src(libavformat\/chromaprint.c)\n    #remove_src(libavformat\/network.c)\n    #remove_src(libavformat\/rtpdec.c)\n    #remove_src(libavformat\/rtpdec_asf.c)\n    #remove_src(libavformat\/rtpproto.c)\n    #remove_src(libavformat\/rtsp.c)\n    #remove_src(libavformat\/rtspdec.c)\n    #remove_src(libavformat\/rtspenc.c)\n    #remove_src_dir(libavformat\/tls*)\n    remove_src(libavformat\/tls_gnutls.c)\n    remove_src(libavformat\/tls_securetransport.c)\n    #remove_src(libavformat\/icecast.c)\n    #remove_src(libavformat\/mmst.c)\n    remove_src(libavformat\/sctp.c)\n    #remove_src(libavformat\/tcp.c)\n    #remove_src(libavformat\/udp.c)\n    remove_src_win32(libavformat\/unix.c)\n    #remove_src(libavformat\/sapenc.c)\n    #remove_src(libavformat\/sapdec.c)\n    #remove_src(libavformat\/protocols.c)\n    \n    file_write_once(${BDIR}\/libavformat\/protocol_list.c \"\n    static const URLProtocol *url_protocols[] = {\n        &ff_async_protocol,\n        &ff_cache_protocol,\n        &ff_concat_protocol,\n        &ff_crypto_protocol,\n        &ff_data_protocol,\n        &ff_ffrtmphttp_protocol,\n        &ff_file_protocol,\n        &ff_ftp_protocol,\n        &ff_gopher_protocol,\n        &ff_hls_protocol,\n        &ff_http_protocol,\n        &ff_httpproxy_protocol,\n        &ff_https_protocol,\n        &ff_icecast_protocol,\n        &ff_mmsh_protocol,\n        &ff_mmst_protocol,\n        &ff_md5_protocol,\n        &ff_pipe_protocol,\n        &ff_rtmp_protocol,\n        &ff_rtmps_protocol,\n        &ff_rtmpt_protocol,\n        &ff_rtmpts_protocol,\n        &ff_rtp_protocol,\n        &ff_srtp_protocol,\n        &ff_subfile_protocol,\n        &ff_tee_protocol,\n        &ff_tcp_protocol,\n        &ff_tls_schannel_protocol,\n        &ff_udp_protocol,\n        &ff_udplite_protocol,\n        \/\/&ff_unix_protocol,\n        NULL };\n    \")\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/FFmpeg\/FFmpeg",
            "tag": "n3.3.5"
        }
    },
    "created": "2018-02-07 20:52:30.087907",
    "hash": "fda729e6cfb712403ee11efa2b7dc3c8e6e631c173258d9bc8a036b804648b17"
}
