{
    "project": "pvt.cppan.demo.openssl.crypto",
    "cppan": "source:\n  git: https:\/\/github.com\/openssl\/openssl\n  branch: master\nversion: master\ntype: lib\nfiles:\n  - crypto\/.*\\.c\n  - crypto\/.*\\.h\n  - engines\/.*\\.c\n  - engines\/.*\\.h\n  - include\/.*\n  - e_os.h\nexclude_from_build:\n  - crypto\/md2\/.*\n  - crypto\/rc5\/.*\n  - crypto\/LPdir_.*\n  - crypto\/bn\/asm\/.*\n  - crypto\/aes\/asm\/.*\n  - engines\/afalg\/.*\n  - crypto\/bf\/.*\n  - crypto\/des\/ncbc_enc.c\ninclude_directories:\n  public: include\n  private:\n    - crypto\/include\n    - crypto\/modes\n    - crypto\/asn1\n    - crypto\/evp\n    - crypto\/dsa\n    - .\noptions:\n  any:\n    definitions:\n      public:\n        - WIN32_LEAN_AND_MEAN\n        - OPENSSL_NO_ASM\n      private:\n        - NO_WINDOWS_BRAINDEATH\n        - OPENSSL_NO_DYNAMIC_ENGINE\n    link_libraries:\n      win32:\n        public:\n          - Crypt32.lib\nexport_all_symbols: true\npost_sources: !<!> \"if (WIN32)\\n    add_definitions(-DOPENSSLDIR=\\\"C:\/Program Files\/Common Files\/SSL\/\\\")\\n    add_definitions(-DENGINESDIR=\\\"C:\/Program Files\/OpenSSL\/lib\/engines\/\\\")\\nelse()\\n    add_definitions(-DOPENSSLDIR=\\\"\/usr\/local\/ssl\\\")\\n    add_definitions(-DENGINESDIR=\\\"\/usr\/local\/ssl\/lib\/engines\\\")\\nendif()\\n\\n# arch stuff\\nremove_src(crypto\/armcap.c)\\nremove_src(crypto\/s390xcap.c)\\nremove_src(crypto\/sparcv9cap.c)\\nremove_src(crypto\/ppccap.c)\\nremove_src(crypto\/aes\/aes_x86core.c)\\n\\n# bins\\nremove_src(crypto\/x509v3\/v3conf.c)\\nremove_src(crypto\/x509v3\/v3prin.c)\\nremove_src(crypto\/x509v3\/tabtest.c)\\n\\n#\\nremove_src(crypto\/ec\/ecp_nistz256.c)\\nremove_src(crypto\/ec\/ecp_nistz256_table.c)\\n\\n#\\nremove_src(engines\/e_chil.c)\\n\\n# gcc only?\\nremove_src_win32(crypto\/poly1305\/poly1305_ieee754.c)\\n\\n# add bf\\nadd_src(crypto\/bf\/bf_enc.c)\\nadd_src(crypto\/bf\/bf_skey.c)\\nadd_src(crypto\/bf\/bf_ecb.c)\\nadd_src(crypto\/bf\/bf_cfb64.c)\\nadd_src(crypto\/bf\/bf_ofb64.c)\\n\\n# sys id\\nset(OPENSSL_SYS UNIX)\\n\\nif (LINUX)\\n    set(OPENSSL_SYS LINUX)\\nendif()\\n\\nif (WIN32)\\n    if (CMAKE_SIZEOF_VOID_P EQUAL 8)\\n        set(OPENSSL_SYS WIN64A)\\n    else()\\n        set(OPENSSL_SYS WIN32)\\n    endif()\\nendif()\\n\\nif (CYGWIN)\\n    set(OPENSSL_SYS CYGWIN)\\nendif()\\n\\nif (MINGW)\\n    if (CMAKE_SIZEOF_VOID_P EQUAL 8)\\n        set(OPENSSL_SYS MINGW64)\\n    else()\\n        set(OPENSSL_SYS MINGW32)\\n    endif()\\nendif()\\n\\nif (APPLE)\\n    set(OPENSSL_SYS MACOSX)\\nendif()\\n\\nif (CMAKE_SIZEOF_VOID_P EQUAL 8)\\n    set(SIXTY_FOUR_BIT define)\\n    set(THIRTY_TWO_BIT undef)\\nelse()\\n    set(SIXTY_FOUR_BIT undef)\\n    set(THIRTY_TWO_BIT define)\\nendif()\\n\\nfile_write_once(${BDIR}\/openssl\/opensslconf.h \\\"\\n    \/*\\n     *\\n     * Copyright 2016 The OpenSSL Project Authors. All Rights Reserved.\\n     *\\n     * Licensed under the OpenSSL license (the \\\\\\\"License\\\\\\\").  You may not use\\n     * this file except in compliance with the License.  You can obtain a copy\\n     * in the file LICENSE in the source distribution or at\\n     * https:\/\/www.openssl.org\/source\/license.html\\n     *\/\\n\\n    #ifdef  __cplusplus\\n    extern \\\\\\\"C\\\\\\\" {\\n    #endif\\n\\n    #ifdef OPENSSL_ALGORITHM_DEFINES\\n    # error OPENSSL_ALGORITHM_DEFINES no longer supported\\n    #endif\\n\\n    \/*\\n     * OpenSSL was configured with the following options:\\n     *\/\\n\\n    #ifndef OPENSSL_SYS_${OPENSSL_SYS}\\n    # define OPENSSL_SYS_${OPENSSL_SYS} 1\\n    #endif\\n    #ifndef OPENSSL_NO_MD2\\n    # define OPENSSL_NO_MD2\\n    #endif\\n    #ifndef OPENSSL_NO_RC5\\n    # define OPENSSL_NO_RC5\\n    #endif\\n    #ifndef OPENSSL_THREADS\\n    # define OPENSSL_THREADS\\n    #endif\\n    #ifndef OPENSSL_NO_ASAN\\n    # define OPENSSL_NO_ASAN\\n    #endif\\n    #ifndef OPENSSL_NO_CRYPTO_MDEBUG\\n    # define OPENSSL_NO_CRYPTO_MDEBUG\\n    #endif\\n    #ifndef OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE\\n    # define OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE\\n    #endif\\n    #ifndef OPENSSL_NO_EC_NISTP_64_GCC_128\\n    # define OPENSSL_NO_EC_NISTP_64_GCC_128\\n    #endif\\n    #ifndef OPENSSL_NO_EGD\\n    # define OPENSSL_NO_EGD\\n    #endif\\n    #ifndef OPENSSL_NO_FUZZ_AFL\\n    # define OPENSSL_NO_FUZZ_AFL\\n    #endif\\n    #ifndef OPENSSL_NO_FUZZ_LIBFUZZER\\n    # define OPENSSL_NO_FUZZ_LIBFUZZER\\n    #endif\\n    #ifndef OPENSSL_NO_HEARTBEATS\\n    # define OPENSSL_NO_HEARTBEATS\\n    #endif\\n    #ifndef OPENSSL_NO_MSAN\\n    # define OPENSSL_NO_MSAN\\n    #endif\\n    #ifndef OPENSSL_NO_SCTP\\n    # define OPENSSL_NO_SCTP\\n    #endif\\n    #ifndef OPENSSL_NO_SSL_TRACE\\n    # define OPENSSL_NO_SSL_TRACE\\n    #endif\\n    #ifndef OPENSSL_NO_SSL3\\n    # define OPENSSL_NO_SSL3\\n    #endif\\n    #ifndef OPENSSL_NO_SSL3_METHOD\\n    # define OPENSSL_NO_SSL3_METHOD\\n    #endif\\n    #ifndef OPENSSL_NO_UBSAN\\n    # define OPENSSL_NO_UBSAN\\n    #endif\\n    #ifndef OPENSSL_NO_UNIT_TEST\\n    # define OPENSSL_NO_UNIT_TEST\\n    #endif\\n    #ifndef OPENSSL_NO_WEAK_SSL_CIPHERS\\n    # define OPENSSL_NO_WEAK_SSL_CIPHERS\\n    #endif\\n    #ifndef OPENSSL_NO_AFALGENG\\n    # define OPENSSL_NO_AFALGENG\\n    #endif\\n\\n    \/*\\n     * Sometimes OPENSSSL_NO_xxx ends up with an empty file and some compilers\\n     * don't like that.  This will hopefully silence them.\\n     *\/\\n    #define NON_EMPTY_TRANSLATION_UNIT static void *dummy = &dummy;\\n\\n    \/*\\n     * Applications should use -DOPENSSL_API_COMPAT=<version> to suppress the\\n     * declarations of functions deprecated in or before <version>. Otherwise, they\\n     * still won't see them if the library has been built to disable deprecated\\n     * functions.\\n     *\/\\n    #if defined(OPENSSL_NO_DEPRECATED)\\n    # define DECLARE_DEPRECATED(f)\\n    #elif __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ > 0)\\n    # define DECLARE_DEPRECATED(f)    f __attribute__ ((deprecated));\\n    #else\\n    # define DECLARE_DEPRECATED(f)   f;\\n    #endif\\n\\n    #ifndef OPENSSL_FILE\\n    # ifdef OPENSSL_NO_FILENAMES\\n    #  define OPENSSL_FILE \\\\\\\"\\\\\\\"\\n    #  define OPENSSL_LINE 0\\n    # else\\n    #  define OPENSSL_FILE __FILE__\\n    #  define OPENSSL_LINE __LINE__\\n    # endif\\n    #endif\\n\\n    #ifndef OPENSSL_MIN_API\\n    # define OPENSSL_MIN_API 0\\n    #endif\\n\\n    #if !defined(OPENSSL_API_COMPAT) || OPENSSL_API_COMPAT < OPENSSL_MIN_API\\n    # undef OPENSSL_API_COMPAT\\n    # define OPENSSL_API_COMPAT OPENSSL_MIN_API\\n    #endif\\n\\n    #if OPENSSL_API_COMPAT < 0x10100000L\\n    # define DEPRECATEDIN_1_1_0(f)   DECLARE_DEPRECATED(f)\\n    #else\\n    # define DEPRECATEDIN_1_1_0(f)\\n    #endif\\n\\n    #if OPENSSL_API_COMPAT < 0x10000000L\\n    # define DEPRECATEDIN_1_0_0(f)   DECLARE_DEPRECATED(f)\\n    #else\\n    # define DEPRECATEDIN_1_0_0(f)\\n    #endif\\n\\n    #if OPENSSL_API_COMPAT < 0x00908000L\\n    # define DEPRECATEDIN_0_9_8(f)   DECLARE_DEPRECATED(f)\\n    #else\\n    # define DEPRECATEDIN_0_9_8(f)\\n    #endif\\n\\n    \/\/#define OPENSSL_CPUID_OBJ\\n\\n    \/* Generate 80386 code? *\/\\n    #undef I386_ONLY\\n\\n    #undef OPENSSL_UNISTD\\n    #define OPENSSL_UNISTD <unistd.h>\\n\\n    #define OPENSSL_EXPORT_VAR_AS_FUNCTION\\n\\n    \/*\\n     * The following are cipher-specific, but are part of the public API.\\n     *\/\\n    #if !defined(OPENSSL_SYS_UEFI)\\n    # undef BN_LLONG\\n    \/* Only one for the following should be defined *\/\\n    # undef SIXTY_FOUR_BIT_LONG\\n    # ${SIXTY_FOUR_BIT} SIXTY_FOUR_BIT\\n    # ${THIRTY_TWO_BIT} THIRTY_TWO_BIT\\n    #endif\\n\\n    #define RC4_INT unsigned int\\n\\n    #ifdef  __cplusplus\\n    }\\n    #endif\\n\\\")\\n\\nfile_write_once(${BDIR}\/internal\/bn_conf.h \\\"\\n    \/*\\n     * Copyright 2016 The OpenSSL Project Authors. All Rights Reserved.\\n     *\\n     * Licensed under the OpenSSL license (the \\\\\\\"License\\\\\\\").  You may not use\\n     * this file except in compliance with the License.  You can obtain a copy\\n     * in the file LICENSE in the source distribution or at\\n     * https:\/\/www.openssl.org\/source\/license.html\\n     *\/\\n\\n    #ifndef HEADER_BN_CONF_H\\n    # define HEADER_BN_CONF_H\\n\\n    \/*\\n     * The contents of this file are not used in the UEFI build, as\\n     * both 32-bit and 64-bit builds are supported from a single run\\n     * of the Configure script.\\n     *\/\\n\\n    \/* Should we define BN_DIV2W here? *\/\\n\\n    \/* Only one for the following should be defined *\/\\n    # undef SIXTY_FOUR_BIT_LONG\\n    # ${SIXTY_FOUR_BIT} SIXTY_FOUR_BIT\\n    # ${THIRTY_TWO_BIT} THIRTY_TWO_BIT\\n\\n    #endif\\n\\\")\\n\\nfile_write_once(${BDIR}\/internal\/dso_conf.h \\\"\\n    \/*\\n     * Copyright 2016 The OpenSSL Project Authors. All Rights Reserved.\\n     *\\n     * Licensed under the OpenSSL license (the \\\\\\\"License\\\\\\\").  You may not use\\n     * this file except in compliance with the License.  You can obtain a copy\\n     * in the file LICENSE in the source distribution or at\\n     * https:\/\/www.openssl.org\/source\/license.html\\n     *\/\\n\\n    #ifndef HEADER_DSO_CONF_H\\n    # define HEADER_DSO_CONF_H\\n\\n    # define DSO_EXTENSION \\\\\\\"${CMAKE_SHARED_LIBRARY_SUFFIX}\\\\\\\"\\n    #endif\\n\\\")\\n\"",
    "version": "master",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/openssl\/openssl",
            "branch": "master"
        }
    },
    "sha256": "ce84c47d1beae0afe4d7e93d62c482f7826825e6e94f81e90895c28f606522c6",
    "created": "2016-11-25 10:45:12.330286"
}
