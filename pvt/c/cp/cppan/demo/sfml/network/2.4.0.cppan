{
    "project": "pvt.cppan.demo.sfml.network",
    "cppan": "source:\n  git: https:\/\/github.com\/SFML\/SFML\n  tag: 2.4.0\nfiles:\n  - cmake\/.*\n  - include\/.*\n  - src\/SFML\/Network\/.*\noptions:\n  shared:\n    definitions:\n      private:\n        - SFML_NETWORK_EXPORTS\n  static:\n    definitions:\n      public:\n        - SFML_STATIC\nversion: 2.4.0\ndependencies:\n  public:\n    pvt.cppan.demo.sfml.system: !<!> \"*\"\npost_sources: !<!> \"# define a macro that helps defining an option\\nmacro(sfml_set_option var default type docstring)\\n    if(NOT DEFINED ${var})\\n        set(${var} ${default})\\n    endif()\\n    set(${var} ${${var}} CACHE ${type} ${docstring} FORCE)\\nendmacro()\\n\\n# include the configuration file\\ninclude(${CMAKE_CURRENT_SOURCE_DIR}\/cmake\/Config.cmake)\\n\\n# setup version numbers\\nset(VERSION_MAJOR ${PACKAGE_VERSION_MAJOR})\\nset(VERSION_MINOR ${PACKAGE_VERSION_MINOR})\\nset(VERSION_PATCH ${PACKAGE_VERSION_PATCH})\\n\\n# add an option for choosing the OpenGL implementation\\nsfml_set_option(SFML_OPENGL_ES ${OPENGL_ES} BOOL \\\"TRUE to use an OpenGL ES implementation, FALSE to use a desktop OpenGL implementation\\\")\\n\\n# define SFML_OPENGL_ES if needed\\nif(SFML_OPENGL_ES)\\n    add_definitions(-DSFML_OPENGL_ES)\\n    add_definitions(-DGL_GLEXT_PROTOTYPES)\\nendif()\\n\\nset(INCROOT ${SDIR}\/include\/SFML\/Network)\\nset(SRCROOT ${SDIR}\/src\/SFML\/Network)\\n\\n# all source files\\nset(SRC\\n    ${INCROOT}\/Export.hpp\\n    ${SRCROOT}\/Ftp.cpp\\n    ${INCROOT}\/Ftp.hpp\\n    ${SRCROOT}\/Http.cpp\\n    ${INCROOT}\/Http.hpp\\n    ${SRCROOT}\/IpAddress.cpp\\n    ${INCROOT}\/IpAddress.hpp\\n    ${SRCROOT}\/Packet.cpp\\n    ${INCROOT}\/Packet.hpp\\n    ${SRCROOT}\/Socket.cpp\\n    ${INCROOT}\/Socket.hpp\\n    ${SRCROOT}\/SocketImpl.hpp\\n    ${INCROOT}\/SocketHandle.hpp\\n    ${SRCROOT}\/SocketSelector.cpp\\n    ${INCROOT}\/SocketSelector.hpp\\n    ${SRCROOT}\/TcpListener.cpp\\n    ${INCROOT}\/TcpListener.hpp\\n    ${SRCROOT}\/TcpSocket.cpp\\n    ${INCROOT}\/TcpSocket.hpp\\n    ${SRCROOT}\/UdpSocket.cpp\\n    ${INCROOT}\/UdpSocket.hpp\\n)\\n\\n# add platform specific sources\\nif(SFML_OS_WINDOWS)\\n    set(SRC\\n        ${SRC}\\n        ${SRCROOT}\/Win32\/SocketImpl.cpp\\n        ${SRCROOT}\/Win32\/SocketImpl.hpp\\n    )\\nelse()\\n    set(SRC\\n        ${SRC}\\n        ${SRCROOT}\/Unix\/SocketImpl.cpp\\n        ${SRCROOT}\/Unix\/SocketImpl.hpp\\n    )\\nendif()\\n\\nset(src ${SRC})\\n\"",
    "version": "2.4.0",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/SFML\/SFML",
            "tag": "2.4.0"
        }
    }
}
