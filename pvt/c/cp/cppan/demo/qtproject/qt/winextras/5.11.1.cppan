{
    "project": "pvt.cppan.demo.qtproject.qt.winextras",
    "cppan": "source:\n    git: git:\/\/code.qt.io\/qt\/qtwinextras.git\n    tag: v{v}\n\nversion: 5.11.1\n\ntype: library\n\nexclude_from_package:\n    -   src\/imports\/.*\n    -   src\/winextras\/doc\/.*\n\ninclude_directories:\n    public:\n        -   ${BDIR}\/include\/${module}\n        -   ${BDIR}\/include\/${module}\/${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}\n        -   ${BDIR}\/include\n        -   ${BDIR}\/include\/${module}\/${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}\/${module}\n\noptions:\n    any:\n        definitions:\n            private:\n                -   QT_BUILD_WINEXTRAS_LIB\n            win32:\n                private:\n                    -   UNICODE\n                public:\n                    -   WIN32\n        link_libraries:\n            win32:\n                public:\n                    -   dwmapi\n\ndependencies:\n    public:\n        pvt.cppan.demo.qtproject.qt.base.gui:\n            version: \"*\"\n            reference: GUI\n        pvt.cppan.demo.qtproject.qt.base.core:\n            version: \"*\"\n            reference: CORE\n        pvt.egorpugin.syncqt:\n            version: master\n            reference: syncqt\n        pvt.cppan.demo.qtproject.qt.base.tools.moc:\n            version: \"*\"\n            reference: MOC_COMMAND\n\npost_sources: |\n    if (CPPAN_LOCAL_PROJECT)\n        set(PACKAGE_VERSION_MAJOR 5)\n        set(PACKAGE_VERSION_MINOR 11)\n        set(PACKAGE_VERSION_PATCH 1)\n    endif()\n    \n    set(module QtWinExtras)\n    string(TOLOWER \"${module}\" module_lc)\n    \n    file_write_once(${BDIR}\/${module}\/${module_lc}-config.h \"\n    \")\n    \n    file_write_once(${BDIR}\/${module}\/private\/${module_lc}-config_p.h \"\n    \")\n    \n    file_write_once(${BDIR}\/${module}\/${module}Depends \"\n        #ifdef __cplusplus\n        #include <QtCore\/QtCore>\n        #include <QtGui\/QtGui>\n        #endif\n    \")\n    \n    create_directory(${BDIR}\/include\/${module}\/${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}\/${module})\n    \n    add_custom_command(OUTPUT ${BDIR}\/include\/${module}\/${module}\n        COMMAND ${syncqt}\n            -s ${SDIR}\n            -b ${BDIR}\n            -m ${module}\n            -v ${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}\n        DEPENDS ${syncqt}\n    )\n    set(src ${src} ${BDIR}\/include\/${module}\/${module})\n    \n    remove_src_dir(*.mm)\n    remove_src_dir(*_mac.*)\n    remove_src_dir(*_mac_shared.*)\n    remove_src_dir(*_unix.*)\n    remove_src_dir(*_android.*)\n    remove_src_dir(*_systemv.*)\n    remove_src_dir(*_haiku.*)\n    remove_src_dir(*_nacl.*)\n    remove_src_dir(*_winrt.*)\n    remove_src_dir(*_winrt_p.*)\n    remove_src_dir(*_glib.*)\n    remove_src_dir(*_inotify.*)\n    remove_src_dir(*_kqueue.*)\n    remove_src_dir(*_linux.*)\n    remove_src_dir(*_macx.*)\n    remove_src_dir(*_posix.*)\n    remove_src_dir(*_mips_dsp*)\n    remove_src_dir(*_es2.*)\n    remove_src_dir(*_libproxy.*)\n    #remove_src_dir(*_openssl.*)\n    remove_src_dir(*_qt.*)\n    remove_src_dir(*_generic.*)\n    remove_src_dir(*_dummy.*)\n    remove_src_dir(*pre11.*)\n    \n    #\n    include(${CORE_SDIR}\/src\/corelib\/Qt5CoreMacros.cmake)\n    \n    set(moc ${src})\n    list(FILTER moc INCLUDE REGEX \".h$\")\n    \n    find_moc_targets(moc ${moc})\n    \n    set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})\n    cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})\n    set(src ${src} ${moc})\n    \n    set_src_header_only(\".*moc_qwintaskbarbutton.cpp$\")\n    set_src_header_only(\".*moc_qwinthumbnailtoolbar.cpp$\")\n    set_src_header_only(\".*moc_qwinjumplist.cpp$\")\n\npost_target: |\n    set(dirs)\n    foreach(f ${moc})\n        get_filename_component(f ${f} PATH)\n        list(APPEND dirs ${f})\n    endforeach()\n    list(REMOVE_DUPLICATES dirs)\n    foreach(d ${dirs})\n        target_include_directories(${this} PRIVATE ${d})\n    endforeach()\n\n",
    "source": {
        "git": {
            "url": "git:\/\/code.qt.io\/qt\/qtwinextras.git",
            "tag": "v{v}"
        }
    },
    "version": "5.11.1",
    "hash": "28bb608c8c1d64f7ccac0acdf14cdf5df8758d4f98620943735f7f62323cf678",
    "created": "2018-07-11 14:08:25.570344"
}
