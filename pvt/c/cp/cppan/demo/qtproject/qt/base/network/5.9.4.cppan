{
    "project": "pvt.cppan.demo.qtproject.qt.base.network",
    "cppan": "source:\n    git: https:\/\/github.com\/qt\/qtbase\n    tag: v5.9.4\n\nversion: 5.9.4\n\ntype: library\n\nfiles:\n    -   src\/network\/access\/.*\n    -   src\/network\/bearer\/.*\n    -   src\/network\/kernel\/.*\n    -   src\/network\/socket\/.*\n    -   src\/network\/ssl\/.*\n\nexclude_from_package:\n    -   src\/network\/socket\/qlocalserver_tcp.*\n    -   src\/network\/socket\/qlocalsocket_tcp.*\n    -   src\/network\/socket\/qsctpserver.*\n    -   src\/network\/socket\/qsctpsocket.*\n\ninclude_directories:\n    public:\n        -   ${BDIR}\/include\/${module}\/${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}\n        -   ${BDIR}\/include\/${module}\n        -   ${BDIR}\/include\/${module}\/${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}\/${module}\n        -   ${BDIR}\/include\n\noptions:\n    any:\n        definitions:\n            private:\n                -   QT_BUILD_NETWORK_LIB\n            win32:\n                private:\n                    -   UNICODE\n                public:\n                    -   WIN32\n        link_libraries:\n            win32:\n                public:\n                    -   Crypt32\n                    -   Dnsapi\n                    -   Iphlpapi\n\ndependencies:\n    public:\n        pvt.cppan.demo.libressl.ssl:\n            version: 2\n        pvt.cppan.demo.qtproject.qt.base.core:\n            version: \"*\"\n            reference: CORE\n        pvt.cppan.demo.qtproject.qt.base.tools.moc:\n            version: \"*\"\n            reference: MOC_COMMAND\n        pvt.egorpugin.syncqt:\n            version: master\n            reference: syncqt\n\npost_sources: |\n    if (CPPAN_LOCAL_PROJECT)\n        set(PACKAGE_VERSION_MAJOR 5)\n        set(PACKAGE_VERSION_MINOR 8)\n        set(PACKAGE_VERSION_PATCH 0)\n    endif()\n    \n    set(module QtNetwork)\n    string(TOLOWER \"${module}\" module_lc)\n    \n    file_write_once(${BDIR}\/${module}\/${module_lc}-config.h \"\n        #define QT_FEATURE_networkinterface 1\n        #define QT_FEATURE_bearermanagement 1\n        #define QT_FEATURE_ftp 1\n        #define QT_NO_GETADDRINFO\n        #define QT_NO_GETIFADDRS\n        #define QT_FEATURE_http 1\n        #define QT_NO_IPV6IFNAME\n        #define QT_FEATURE_localserver 1\n        #define QT_FEATURE_networkdiskcache 1\n        #define QT_FEATURE_networkproxy 1\n        #define QT_FEATURE_sctp -1\n        #define QT_NO_SCTP\n        #define QT_FEATURE_socks5 1\n        #define QT_FEATURE_ssl 1\n        #define QT_FEATURE_udpsocket 1\n    \")\n    \n    file_write_once(${BDIR}\/${module}\/private\/${module_lc}-config_p.h \"\n        #define QT_FEATURE_libproxy -1\n        #define QT_FEATURE_securetransport -1\n        #define QT_FEATURE_openssl 1\n        #define QT_FEATURE_openssl_linked -1 \/\/ 1?\n        #define QT_FEATURE_system_proxies 1\n    \")\n    \n    file_write_once(${BDIR}\/${module}\/${module}Depends \"\n        #ifdef __cplusplus\n        #include <QtCore\/QtCore>\n        #endif\n    \")\n    \n    create_directory(${BDIR}\/include\/${module}\/${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}\/${module})\n    \n    add_custom_command(OUTPUT ${BDIR}\/include\/${module}\/${module}\n        COMMAND ${syncqt}\n            -s ${SDIR}\n            -b ${BDIR}\n            -m ${module}\n            -v ${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}\n        DEPENDS ${syncqt}\n    )\n    set(src ${src} ${BDIR}\/include\/${module}\/${module})\n    \n    remove_src_dir(*.mm)\n    remove_src_dir(*_mac.*)\n    remove_src_dir(*_mac_shared.*)\n    remove_src_dir(*_unix.*)\n    remove_src_dir(*_android.*)\n    remove_src_dir(*_systemv.*)\n    remove_src_dir(*_haiku.*)\n    remove_src_dir(*_nacl.*)\n    remove_src_dir(*_winrt.*)\n    remove_src_dir(*_winrt_p.*)\n    remove_src_dir(*_glib.*)\n    remove_src_dir(*_inotify.*)\n    remove_src_dir(*_kqueue.*)\n    remove_src_dir(*_linux.*)\n    remove_src_dir(*_macx.*)\n    remove_src_dir(*_posix.*)\n    remove_src_dir(*_mips_dsp*)\n    remove_src_dir(*_es2.*)\n    remove_src_dir(*_libproxy.*)\n    #remove_src_dir(*_openssl.*)\n    remove_src_dir(*_qt.*)\n    remove_src_dir(*_generic.*)\n    remove_src_dir(*_dummy.*)\n    \n    #\n    include(${CORE_SDIR}\/src\/corelib\/Qt5CoreMacros.cmake)\n    \n    set(moc ${src})\n    list(FILTER moc INCLUDE REGEX \".h$\")\n    \n    find_moc_targets(moc ${moc})\n    \n    set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})\n    qt5_wrap_cpp(moc ${moc} TARGET ${this})\n    set(src ${src} ${moc})\n    \n    set_src_header_only(\".*moc_qftp_p.cpp$\")\n    set_src_header_only(\".*moc_qnetworkaccessmanager.cpp$\")\n    set_src_header_only(\".*moc_qdnslookup.cpp$\")\n    set_src_header_only(\".*moc_qabstractsocket.cpp$\")\n    set_src_header_only(\".*moc_qlocalserver.cpp$\")\n    set_src_header_only(\".*moc_qlocalsocket.cpp$\")\n    set_src_header_only(\".*moc_qsslsocket.cpp$\")\n    \n    set_src_header_only(\".*moc_qnetworkreplydataimpl_p.cpp$\")\n    set_src_header_only(\".*moc_qnetworkreplyimpl_p.cpp$\")\n    set_src_header_only(\".*moc_qbearerengine_p.cpp$\")\n    set_src_header_only(\".*moc_qnetworkconfigmanager.cpp$\")\n    set_src_header_only(\".*moc_qnetworksession.cpp$\")\n    set_src_header_only(\".*moc_qnativesocketengine_winrt_p.cpp$\")\n    set_src_header_only(\".*moc_qtcpserver.cpp$\")\n    set_src_header_only(\".*moc_qhttpnetworkconnection_p.cpp$\")\n    set_src_header_only(\".*moc_qhttpnetworkconnectionchannel_p.cpp$\")\n    set_src_header_only(\".*moc_qnetworkreplyfileimpl_p.cpp$\")\n    \n    moc_cpp_file(src\/network\/access\/qftp.cpp)\n\npost_target: |\n    set(dirs)\n    foreach(f ${moc})\n        get_filename_component(f ${f} PATH)\n        list(APPEND dirs ${f})\n    endforeach()\n    list(REMOVE_DUPLICATES dirs)\n    foreach(d ${dirs})\n        target_include_directories(${this} PRIVATE ${d})\n    endforeach()\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/qt\/qtbase",
            "tag": "v5.9.4"
        }
    },
    "version": "5.9.4",
    "hash": "7fafa061f3d7c0cd828183aef457211c998eba9a386e712ed532964ed407c264",
    "created": "2018-02-07 19:01:39.798285"
}
