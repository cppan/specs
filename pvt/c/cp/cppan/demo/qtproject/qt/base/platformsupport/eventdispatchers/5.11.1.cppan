{
    "project": "pvt.cppan.demo.qtproject.qt.base.platformsupport.eventdispatchers",
    "cppan": "source:\n    git: git:\/\/code.qt.io\/qt\/qtbase.git\n    tag: v{v}\n\nversion: 5.11.1\n\ntype: library\n\nstatic_only: true\n\nfiles:\n    -   src\/platformsupport\/eventdispatchers\/.*\n\noptions:\n    any:\n        definitions:\n            win32:\n                private:\n                    -   UNICODE\n                public:\n                    -   WIN32\n\ndependencies:\n    public:\n        pvt.cppan.demo.qtproject.qt.base.gui:\n            version: \"*\"\n        pvt.cppan.demo.qtproject.qt.base.core:\n            version: \"*\"\n            reference: CORE\n        pvt.cppan.demo.qtproject.qt.base.tools.moc:\n            version: \"*\"\n            reference: MOC_COMMAND\n\npost_sources: |\n    file_write_once(${BDIR}\/QtEventDispatcherSupport\/QtEventDispatcherSupportDepends \"\n        #ifdef __cplusplus\n        #include <QtCore\/QtCore>\n        #include <QtGui\/QtGui>\n        #endif\n    \")\n    \n    syncqt(QtEventDispatcherSupport)\n    \n    remove_src_dir(*glib*)\n    if (WIN32)\n        remove_src_dir(*unix*)\n    else()\n        remove_src_dir(*windows*)\n    endif()\n    \n    include(${CORE_SDIR}\/src\/corelib\/Qt5CoreMacros.cmake)\n    set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})\n    \n    set(moc ${src})\n    list(FILTER moc INCLUDE REGEX \".h$\")\n    \n    find_moc_targets(moc ${moc})\n    \n    cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})\n    set(src ${src} ${moc})\n\n",
    "source": {
        "git": {
            "url": "git:\/\/code.qt.io\/qt\/qtbase.git",
            "tag": "v{v}"
        }
    },
    "version": "5.11.1",
    "hash": "a92869ff708e77fc321037d6067124be5dc38d8464317b29d01ea4198ee5540a",
    "created": "2018-07-30 16:13:06.491245"
}
