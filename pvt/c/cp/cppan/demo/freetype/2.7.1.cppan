{
    "project": "pvt.cppan.demo.freetype",
    "cppan": "source:\n    remote: http:\/\/git.savannah.gnu.org\/cgit\/freetype\/freetype2.git\/snapshot\/VER-2-7.tar.gz\n\nversion: 2.7.1\n\nfiles:\n    -   builds\/.*\\.c\n    -   builds\/.*\\.in\n    -   include\/.*\n    -   src\/.*\\.c\n    -   src\/.*\\.cc\n    -   src\/.*\\.h\n\noptions:\n    any:\n        definitions:\n            private:\n                -   FT2_BUILD_LIBRARY\n    shared:\n        definitions:\n            private:\n                -   freetype_EXPORTS\n\ndependencies:\n    public:\n        pvt.cppan.demo.bzip2:\n            version: 1\n        pvt.cppan.demo.png:\n            version: 1\n        pvt.cppan.demo.zlib:\n            version: 1\n\npost_sources: |\n    # make dllexport api\n    set(dummy_file ${SDIR}\/cfgfix.dummy)\n    if (NOT EXISTS ${dummy_file})\n        file(APPEND \"${SDIR}\/include\/freetype\/config\/ftconfig.h\" \"\n    #ifdef FT_BASE\n    #undef FT_BASE\n    #ifdef __cplusplus\n    #define FT_BASE(x) extern \\\"C\\\" ${LIBRARY_API} x\n    #else\n    #define FT_BASE(x) extern ${LIBRARY_API} x\n    #endif\n    #endif\n    \n    #ifdef FT_EXPORT\n    #undef FT_EXPORT\n    #ifdef __cplusplus\n    #define FT_EXPORT(x) extern \\\"C\\\" ${LIBRARY_API} x\n    #else\n    #define FT_EXPORT(x) extern ${LIBRARY_API} x\n    #endif\n    #endif\n        \")\n        file(WRITE ${dummy_file} \"\")\n    endif()\n    \n    \n    file(MAKE_DIRECTORY \"${BDIR}\/include\/freetype\/config\")\n    \n    # Create the configuration file\n    \n    \n    if (NOT EXISTS ${BDIR}\/include\/freetype\/config\/ftconfig.h)\n    \n    message(STATUS\n    \n      \"Creating file ${BDIR}\/include\/freetype\/config\/ftconfig.h\")\n    if (UNIX)\n      file(READ \"${SDIR}\/builds\/unix\/ftconfig.in\"\n        FTCONFIG_H)\n      if (HAVE_UNISTD_H)\n        string(REGEX REPLACE\n          \"#undef +(HAVE_UNISTD_H)\" \"#define \\\\1\"\n          FTCONFIG_H \"${FTCONFIG_H}\")\n      endif ()\n      if (HAVE_FCNTL_H)\n        string(REGEX REPLACE\n          \"#undef +(HAVE_FCNTL_H)\" \"#define \\\\1\"\n          FTCONFIG_H \"${FTCONFIG_H}\")\n      endif ()\n      if (HAVE_STDINT_H)\n        string(REGEX REPLACE\n          \"#undef +(HAVE_STDINT_H)\" \"#define \\\\1\"\n          FTCONFIG_H \"${FTCONFIG_H}\")\n      endif ()\n      string(REPLACE \"\/undef \" \"#undef \"\n        FTCONFIG_H \"${FTCONFIG_H}\")\n      file(WRITE \"${BDIR}\/include\/freetype\/config\/ftconfig.h-new\"\n        \"${FTCONFIG_H}\")\n    else ()\n      file(READ \"${SDIR}\/include\/freetype\/config\/ftconfig.h\"\n        FTCONFIG_H)\n      file(WRITE \"${BDIR}\/include\/freetype\/config\/ftconfig.h-new\"\n        \"${FTCONFIG_H}\")\n    endif ()\n    \n    execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different\n      \"${BDIR}\/include\/freetype\/config\/ftconfig.h-new\"\n      \"${BDIR}\/include\/freetype\/config\/ftconfig.h\")\n    endif()\n    \n    # Create the options file\n    \n    if (NOT EXISTS ${BDIR}\/include\/freetype\/config\/ftoption.h)\n    message(STATUS\n      \"Creating file ${BDIR}\/include\/freetype\/config\/ftoption.h\")\n    \n    file(READ \"${SDIR}\/include\/freetype\/config\/ftoption.h\"\n      FTOPTION_H)\n    \n      string(REGEX REPLACE\n        \"\/\\\\* +(#define +FT_CONFIG_OPTION_SYSTEM_ZLIB) +\\\\*\/\" \"\\\\1\"\n        FTOPTION_H \"${FTOPTION_H}\")\n    \n    \n      string(REGEX REPLACE\n        \"\/\\\\* +(#define +FT_CONFIG_OPTION_USE_BZIP2) +\\\\*\/\" \"\\\\1\"\n        FTOPTION_H \"${FTOPTION_H}\")\n    \n    \n      string(REGEX REPLACE\n        \"\/\\\\* +(#define +FT_CONFIG_OPTION_USE_PNG) +\\\\*\/\" \"\\\\1\"\n        FTOPTION_H \"${FTOPTION_H}\")\n    \n    if (HARFBUZZ_FOUND)\n      string(REGEX REPLACE\n        \"\/\\\\* +(#define +FT_CONFIG_OPTION_USE_HARFBUZZ) +\\\\*\/\" \"\\\\1\"\n        FTOPTION_H \"${FTOPTION_H}\")\n    endif ()\n    file(WRITE \"${BDIR}\/include\/freetype\/config\/ftoption.h-new\"\n      \"${FTOPTION_H}\")\n    execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different\n      \"${BDIR}\/include\/freetype\/config\/ftoption.h-new\"\n      \"${BDIR}\/include\/freetype\/config\/ftoption.h\")\n    \n    endif()\n    \n    \n    file(GLOB PUBLIC_HEADERS \"include\/ft2build.h\" \"include\/freetype\/*.h\")\n    file(GLOB PUBLIC_CONFIG_HEADERS \"include\/freetype\/config\/*.h\")\n    file(GLOB PRIVATE_HEADERS \"include\/freetype\/internal\/*.h\")\n    \n    \n    set(BASE_SRCS\n      src\/autofit\/autofit.c\n      src\/base\/ftbase.c\n      src\/base\/ftbbox.c\n      src\/base\/ftbdf.c\n      src\/base\/ftbitmap.c\n      src\/base\/ftcid.c\n      src\/base\/ftfntfmt.c\n      src\/base\/ftfstype.c\n      src\/base\/ftgasp.c\n      src\/base\/ftglyph.c\n      src\/base\/ftgxval.c\n      src\/base\/ftinit.c\n      src\/base\/ftlcdfil.c\n      src\/base\/ftmm.c\n      src\/base\/ftotval.c\n      src\/base\/ftpatent.c\n      src\/base\/ftpfr.c\n      src\/base\/ftstroke.c\n      src\/base\/ftsynth.c\n      src\/base\/ftsystem.c\n      src\/base\/fttype1.c\n      src\/base\/ftwinfnt.c\n      src\/bdf\/bdf.c\n      src\/bzip2\/ftbzip2.c\n      src\/cache\/ftcache.c\n      src\/cff\/cff.c\n      src\/cid\/type1cid.c\n      src\/gzip\/ftgzip.c\n      src\/lzw\/ftlzw.c\n      src\/pcf\/pcf.c\n      src\/pfr\/pfr.c\n      src\/psaux\/psaux.c\n      src\/pshinter\/pshinter.c\n      src\/psnames\/psnames.c\n      src\/raster\/raster.c\n      src\/sfnt\/sfnt.c\n      src\/smooth\/smooth.c\n      src\/truetype\/truetype.c\n      src\/type1\/type1.c\n      src\/type42\/type42.c\n      src\/winfonts\/winfnt.c\n    )\n    \n    if (WIN32)\n      set(BASE_SRCS ${BASE_SRCS} builds\/windows\/ftdebug.c)\n    elseif (WINCE)\n      set(BASE_SRCS ${BASE_SRCS} builds\/wince\/ftdebug.c)\n    else ()\n      set(BASE_SRCS ${BASE_SRCS} src\/base\/ftdebug.c)\n    endif ()\n    \n    \n    \n    \n    set(src\n      ${PUBLIC_HEADERS}\n      ${PUBLIC_CONFIG_HEADERS}\n      ${PRIVATE_HEADERS}\n      ${BASE_SRCS}\n    )\n\ncheck_include_exists:\n    -   file: fcntl.h\n        variable: HAVE_FCNTL_H\n        cpp: false\n    -   file: stdint.h\n        variable: HAVE_STDINT_H\n        cpp: false\n    -   file: unistd.h\n        variable: HAVE_UNISTD_H\n        cpp: false\n\n",
    "version": "2.7.1",
    "source": {
        "remote": {
            "url": "http:\/\/git.savannah.gnu.org\/cgit\/freetype\/freetype2.git\/snapshot\/VER-2-7.tar.gz"
        }
    },
    "sha256": "38cb19cb192b9dafedcdb5f3767dbb99516cd1bfe6ec39ebaed87915424507e6",
    "created": "2017-01-01 08:50:38.250249"
}
