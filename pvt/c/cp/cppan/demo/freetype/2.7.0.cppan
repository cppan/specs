{
    "project": "pvt.cppan.demo.freetype",
    "cppan": "version: 2.7.0\ncheck_include_exists:\n  - unistd.h\n  - fcntl.h\n  - stdint.h\nsource:\n  remote: http:\/\/git.savannah.gnu.org\/cgit\/freetype\/freetype2.git\/snapshot\/VER-2-7.tar.gz\npost_sources: !<!> \"# make dllexport api\\nset(dummy_file ${SDIR}\/cfgfix.dummy)\\nif (NOT EXISTS ${dummy_file})\\n    file(APPEND \\\"${SDIR}\/include\/freetype\/config\/ftconfig.h\\\" \\\"\\n#ifdef FT_BASE\\n#undef FT_BASE\\n#ifdef __cplusplus\\n#define FT_BASE(x) extern \\\\\\\"C\\\\\\\" ${LIBRARY_API} x\\n#else\\n#define FT_BASE(x) extern ${LIBRARY_API} x\\n#endif\\n#endif\\n\\n#ifdef FT_EXPORT\\n#undef FT_EXPORT\\n#ifdef __cplusplus\\n#define FT_EXPORT(x) extern \\\\\\\"C\\\\\\\" ${LIBRARY_API} x\\n#else\\n#define FT_EXPORT(x) extern ${LIBRARY_API} x\\n#endif\\n#endif\\n    \\\")\\n    file(WRITE ${dummy_file} \\\"\\\")\\nendif()\\n\\n\\nfile(MAKE_DIRECTORY \\\"${BDIR}\/include\/freetype\/config\\\")\\n\\n# Create the configuration file\\n\\n\\nif (NOT EXISTS ${BDIR}\/include\/freetype\/config\/ftconfig.h)\\n\\nmessage(STATUS\\n\\n  \\\"Creating file ${BDIR}\/include\/freetype\/config\/ftconfig.h\\\")\\nif (UNIX)\\n  file(READ \\\"${SDIR}\/builds\/unix\/ftconfig.in\\\"\\n    FTCONFIG_H)\\n  if (HAVE_UNISTD_H)\\n    string(REGEX REPLACE\\n      \\\"#undef +(HAVE_UNISTD_H)\\\" \\\"#define \\\\\\\\1\\\"\\n      FTCONFIG_H \\\"${FTCONFIG_H}\\\")\\n  endif ()\\n  if (HAVE_FCNTL_H)\\n    string(REGEX REPLACE\\n      \\\"#undef +(HAVE_FCNTL_H)\\\" \\\"#define \\\\\\\\1\\\"\\n      FTCONFIG_H \\\"${FTCONFIG_H}\\\")\\n  endif ()\\n  if (HAVE_STDINT_H)\\n    string(REGEX REPLACE\\n      \\\"#undef +(HAVE_STDINT_H)\\\" \\\"#define \\\\\\\\1\\\"\\n      FTCONFIG_H \\\"${FTCONFIG_H}\\\")\\n  endif ()\\n  string(REPLACE \\\"\/undef \\\" \\\"#undef \\\"\\n    FTCONFIG_H \\\"${FTCONFIG_H}\\\")\\n  file(WRITE \\\"${BDIR}\/include\/freetype\/config\/ftconfig.h-new\\\"\\n    \\\"${FTCONFIG_H}\\\")\\nelse ()\\n  file(READ \\\"${SDIR}\/include\/freetype\/config\/ftconfig.h\\\"\\n    FTCONFIG_H)\\n  file(WRITE \\\"${BDIR}\/include\/freetype\/config\/ftconfig.h-new\\\"\\n    \\\"${FTCONFIG_H}\\\")\\nendif ()\\n\\nexecute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different\\n  \\\"${BDIR}\/include\/freetype\/config\/ftconfig.h-new\\\"\\n  \\\"${BDIR}\/include\/freetype\/config\/ftconfig.h\\\")\\nendif()\\n\\n# Create the options file\\n\\nif (NOT EXISTS ${BDIR}\/include\/freetype\/config\/ftoption.h)\\nmessage(STATUS\\n  \\\"Creating file ${BDIR}\/include\/freetype\/config\/ftoption.h\\\")\\n\\nfile(READ \\\"${SDIR}\/include\/freetype\/config\/ftoption.h\\\"\\n  FTOPTION_H)\\n\\n  string(REGEX REPLACE\\n    \\\"\/\\\\\\\\* +(#define +FT_CONFIG_OPTION_SYSTEM_ZLIB) +\\\\\\\\*\/\\\" \\\"\\\\\\\\1\\\"\\n    FTOPTION_H \\\"${FTOPTION_H}\\\")\\n\\n\\n  string(REGEX REPLACE\\n    \\\"\/\\\\\\\\* +(#define +FT_CONFIG_OPTION_USE_BZIP2) +\\\\\\\\*\/\\\" \\\"\\\\\\\\1\\\"\\n    FTOPTION_H \\\"${FTOPTION_H}\\\")\\n\\n\\n  string(REGEX REPLACE\\n    \\\"\/\\\\\\\\* +(#define +FT_CONFIG_OPTION_USE_PNG) +\\\\\\\\*\/\\\" \\\"\\\\\\\\1\\\"\\n    FTOPTION_H \\\"${FTOPTION_H}\\\")\\n\\nif (HARFBUZZ_FOUND)\\n  string(REGEX REPLACE\\n    \\\"\/\\\\\\\\* +(#define +FT_CONFIG_OPTION_USE_HARFBUZZ) +\\\\\\\\*\/\\\" \\\"\\\\\\\\1\\\"\\n    FTOPTION_H \\\"${FTOPTION_H}\\\")\\nendif ()\\nfile(WRITE \\\"${BDIR}\/include\/freetype\/config\/ftoption.h-new\\\"\\n  \\\"${FTOPTION_H}\\\")\\nexecute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different\\n  \\\"${BDIR}\/include\/freetype\/config\/ftoption.h-new\\\"\\n  \\\"${BDIR}\/include\/freetype\/config\/ftoption.h\\\")\\n\\nendif()\\n\\n\\nfile(GLOB PUBLIC_HEADERS \\\"include\/ft2build.h\\\" \\\"include\/freetype\/*.h\\\")\\nfile(GLOB PUBLIC_CONFIG_HEADERS \\\"include\/freetype\/config\/*.h\\\")\\nfile(GLOB PRIVATE_HEADERS \\\"include\/freetype\/internal\/*.h\\\")\\n\\n\\nset(BASE_SRCS\\n  src\/autofit\/autofit.c\\n  src\/base\/ftbase.c\\n  src\/base\/ftbbox.c\\n  src\/base\/ftbdf.c\\n  src\/base\/ftbitmap.c\\n  src\/base\/ftcid.c\\n  src\/base\/ftfntfmt.c\\n  src\/base\/ftfstype.c\\n  src\/base\/ftgasp.c\\n  src\/base\/ftglyph.c\\n  src\/base\/ftgxval.c\\n  src\/base\/ftinit.c\\n  src\/base\/ftlcdfil.c\\n  src\/base\/ftmm.c\\n  src\/base\/ftotval.c\\n  src\/base\/ftpatent.c\\n  src\/base\/ftpfr.c\\n  src\/base\/ftstroke.c\\n  src\/base\/ftsynth.c\\n  src\/base\/ftsystem.c\\n  src\/base\/fttype1.c\\n  src\/base\/ftwinfnt.c\\n  src\/bdf\/bdf.c\\n  src\/bzip2\/ftbzip2.c\\n  src\/cache\/ftcache.c\\n  src\/cff\/cff.c\\n  src\/cid\/type1cid.c\\n  src\/gzip\/ftgzip.c\\n  src\/lzw\/ftlzw.c\\n  src\/pcf\/pcf.c\\n  src\/pfr\/pfr.c\\n  src\/psaux\/psaux.c\\n  src\/pshinter\/pshinter.c\\n  src\/psnames\/psnames.c\\n  src\/raster\/raster.c\\n  src\/sfnt\/sfnt.c\\n  src\/smooth\/smooth.c\\n  src\/truetype\/truetype.c\\n  src\/type1\/type1.c\\n  src\/type42\/type42.c\\n  src\/winfonts\/winfnt.c\\n)\\n\\nif (WIN32)\\n  set(BASE_SRCS ${BASE_SRCS} builds\/windows\/ftdebug.c)\\nelseif (WINCE)\\n  set(BASE_SRCS ${BASE_SRCS} builds\/wince\/ftdebug.c)\\nelse ()\\n  set(BASE_SRCS ${BASE_SRCS} src\/base\/ftdebug.c)\\nendif ()\\n\\n\\n\\n\\nset(src\\n  ${PUBLIC_HEADERS}\\n  ${PUBLIC_CONFIG_HEADERS}\\n  ${PRIVATE_HEADERS}\\n  ${BASE_SRCS}\\n)\"\nfiles:\n  - include\/.*\n  - src\/.*\\.c\n  - src\/.*\\.cc\n  - src\/.*\\.h\n  - builds\/.*\\.c\ndependencies:\n  pvt.cppan.demo.zlib: 1\n  pvt.cppan.demo.png: 1\n  pvt.cppan.demo.bzip2: 1\noptions:\n  any:\n    definitions:\n      private:\n        - FT2_BUILD_LIBRARY\n  shared:\n    definitions:\n      private:\n        - freetype_EXPORTS",
    "version": "2.7.0",
    "source": {
        "remote": {
            "url": "http:\/\/git.savannah.gnu.org\/cgit\/freetype\/freetype2.git\/snapshot\/VER-2-7.tar.gz"
        }
    }
}
