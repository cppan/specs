{
    "project": "pvt.cppan.demo.pcre.pcre16",
    "cppan": "source:\n    remote: https:\/\/ftp.pcre.org\/pub\/pcre\/pcre2-{M}.{m}.tar.bz2\n\nversion: 10.31.0\n\nlicense: COPYING\n\ntype: library\n\nfiles:\n    -   config-cmake.h.in\n    -   src\/.*\n\nexclude_from_package:\n    -   src\/dftables.c\n    -   src\/pcre2_fuzzsupport.c\n    -   src\/pcre2_jit_test.c\n    -   src\/pcre2demo.c\n    -   src\/pcre2grep.c\n    -   src\/pcre2posix.*\n\nexclude_from_build:\n    -   src\/pcre2_jit_match.c\n    -   src\/pcre2_jit_misc.c\n    -   src\/pcre2_printint.c\n    -   src\/pcre2test.c\n\noptions:\n    any:\n        definitions:\n            public:\n                -   HAVE_CONFIG_H\n                -   PCRE2_CODE_UNIT_WIDTH=16\n                -   SUPPORT_UCP\n    static:\n        definitions:\n            public:\n                -   PCRE2_STATIC\n\npre_sources: |\n    if (NOT EXISTS ${SDIR}\/src\/pcre2_chartables.c)\n        configure_file(${SDIR}\/src\/pcre2_chartables.c.dist ${SDIR}\/src\/pcre2_chartables.c COPYONLY)\n    endif()\n\npost_sources: |\n    ADD_DEFINITIONS(-DHAVE_CONFIG_H)\n    \n    OPTION(PCRE2_BUILD_PCRE2_8 \"Build 8 bit PCRE2 library\" OFF)\n    \n    OPTION(PCRE2_BUILD_PCRE2_16 \"Build 16 bit PCRE2 library\" ON)\n    \n    OPTION(PCRE2_BUILD_PCRE2_32 \"Build 32 bit PCRE2 library\" OFF)\n    \n    OPTION(PCRE2_DEBUG \"Include debugging code\" OFF)\n    \n    SET(PCRE2_HEAP_LIMIT \"20000000\" CACHE STRING\n        \"Default limit on heap memory (kilobytes). See HEAP_LIMIT in config.h.in for details.\")\n    \n    SET(PCRE2_MATCH_LIMIT \"10000000\" CACHE STRING\n        \"Default limit on internal looping. See MATCH_LIMIT in config.h.in for details.\")\n    \n    SET(PCRE2_MATCH_LIMIT_DEPTH \"MATCH_LIMIT\" CACHE STRING\n        \"Default limit on internal depth of search. See MATCH_LIMIT_DEPTH in config.h.in for details.\")\n        \n    SET(PCRE2_EBCDIC OFF CACHE BOOL\n        \"Use EBCDIC coding instead of ASCII. (This is rarely used outside of mainframe systems.)\")\n    \n    SET(PCRE2_EBCDIC_NL25 OFF CACHE BOOL\n        \"Use 0x25 as EBCDIC NL character instead of 0x15; implies EBCDIC.\")\n    \n    SET(PCRE2_LINK_SIZE \"2\" CACHE STRING\n        \"Internal link size (2, 3 or 4 allowed). See LINK_SIZE in config.h.in for details.\")\n    \n    SET(PCRE2_PARENS_NEST_LIMIT \"250\" CACHE STRING\n        \"Default nested parentheses limit. See PARENS_NEST_LIMIT in config.h.in for details.\")\n    \n    SET(PCRE2_MATCH_LIMIT \"10000000\" CACHE STRING\n        \"Default limit on internal looping. See MATCH_LIMIT in config.h.in for details.\")\n    \n    SET(PCRE2_MATCH_LIMIT_RECURSION \"MATCH_LIMIT\" CACHE STRING\n        \"Default limit on internal recursion. See MATCH_LIMIT_RECURSION in config.h.in for details.\")\n    \n    SET(PCRE2GREP_BUFSIZE \"20480\" CACHE STRING\n        \"Buffer starting size parameter for pcre2grep. See PCRE2GREP_BUFSIZE in config.h.in for details.\")\n    \n    SET(PCRE2GREP_MAX_BUFSIZE \"1048576\" CACHE STRING\n        \"Buffer maximum size parameter for pcre2grep. See PCRE2GREP_MAX_BUFSIZE in config.h.in for details.\")\n    \n    SET(PCRE2_NEWLINE \"LF\" CACHE STRING\n        \"What to recognize as a newline (one of CR, LF, CRLF, ANY, ANYCRLF).\")\n    \n    SET(PCRE2_HEAP_MATCH_RECURSE OFF CACHE BOOL\n        \"If ON, then don't use stack recursion when matching. See HEAP_MATCH_RECURSE in config.h.in for details.\")\n    \n    SET(PCRE2_SUPPORT_JIT OFF CACHE BOOL\n        \"Enable support for Just-in-time compiling.\")\n    \n    SET(PCRE2_SUPPORT_PCRE2GREP_JIT ON CACHE BOOL\n        \"Enable use of Just-in-time compiling in pcre2grep.\")\n    \n    SET(PCRE2_SUPPORT_PCRE2GREP_CALLOUT ON CACHE BOOL\n        \"Enable callout string support in pcre2grep.\")\n    \n    SET(PCRE2_SUPPORT_UNICODE ON CACHE BOOL\n        \"Enable support for Unicode and UTF-8\/UTF-16\/UTF-32 encoding.\")\n    \n    SET(PCRE2_SUPPORT_BSR_ANYCRLF OFF CACHE BOOL\n        \"ON=Backslash-R matches only LF CR and CRLF, OFF=Backslash-R matches all Unicode Linebreaks\")\n    \n    SET(PCRE2_NEVER_BACKSLASH_C OFF CACHE BOOL\n        \"If ON, backslash-C (upper case C) is locked out.\")\n    \n    SET(PCRE2_SUPPORT_VALGRIND OFF CACHE BOOL\n        \"Enable Valgrind support.\")\n    \n    # Prepare build configuration\n    \n    IF(NOT PCRE2_BUILD_PCRE2_8 AND NOT PCRE2_BUILD_PCRE2_16 AND NOT PCRE2_BUILD_PCRE2_32)\n            MESSAGE(FATAL_ERROR \"At least one of PCRE2_BUILD_PCRE2_8, PCRE2_BUILD_PCRE2_16 or PCRE2_BUILD_PCRE2_32 must be enabled\")\n    ENDIF(NOT PCRE2_BUILD_PCRE2_8 AND NOT PCRE2_BUILD_PCRE2_16 AND NOT PCRE2_BUILD_PCRE2_32)\n    \n    IF(PCRE2_BUILD_PCRE2_8)\n            SET(SUPPORT_PCRE2_8 1)\n    ENDIF(PCRE2_BUILD_PCRE2_8)\n    \n    IF(PCRE2_BUILD_PCRE2_16)\n            SET(SUPPORT_PCRE2_16 1)\n    ENDIF(PCRE2_BUILD_PCRE2_16)\n    \n    IF(PCRE2_BUILD_PCRE2_32)\n            SET(SUPPORT_PCRE2_32 1)\n    ENDIF(PCRE2_BUILD_PCRE2_32)\n    \n    IF(PCRE2_SUPPORT_LIBREADLINE AND PCRE2_SUPPORT_LIBEDIT)\n            MESSAGE(FATAL_ERROR \"Only one of libreadline or libeditline can be specified\")\n    ENDIF(PCRE2_SUPPORT_LIBREADLINE AND PCRE2_SUPPORT_LIBEDIT)\n    \n    IF(PCRE2_SUPPORT_BSR_ANYCRLF)\n            SET(BSR_ANYCRLF 1)\n    ENDIF(PCRE2_SUPPORT_BSR_ANYCRLF)\n    \n    IF(PCRE2_NEVER_BACKSLASH_C)\n            SET(NEVER_BACKSLASH_C 1)\n    ENDIF(PCRE2_NEVER_BACKSLASH_C)\n    \n    IF(PCRE2_SUPPORT_UNICODE)\n            SET(SUPPORT_UNICODE 1)\n    ENDIF(PCRE2_SUPPORT_UNICODE)\n    \n    IF(PCRE2_SUPPORT_JIT)\n            SET(SUPPORT_JIT 1)\n    ENDIF(PCRE2_SUPPORT_JIT)\n    \n    IF(PCRE2_SUPPORT_PCRE2GREP_JIT)\n            SET(SUPPORT_PCRE2GREP_JIT 1)\n    ENDIF(PCRE2_SUPPORT_PCRE2GREP_JIT)\n    \n    IF(PCRE2_SUPPORT_PCRE2GREP_CALLOUT)\n            SET(SUPPORT_PCRE2GREP_CALLOUT 1)\n    ENDIF(PCRE2_SUPPORT_PCRE2GREP_CALLOUT)\n    \n    IF(PCRE2_SUPPORT_VALGRIND)\n            SET(SUPPORT_VALGRIND 1)\n    ENDIF(PCRE2_SUPPORT_VALGRIND)\n    \n    # This next one used to reference ${READLINE_LIBRARY})\n    # but I was advised to add the NCURSES test as well, along with\n    # some modifications to cmake\/FindReadline.cmake which should\n    # make it possible to override the default if necessary. PH\n    \n    IF(PCRE2_SUPPORT_LIBREADLINE)\n            SET(SUPPORT_LIBREADLINE 1)\n            SET(PCRE2TEST_LIBS ${READLINE_LIBRARY} ${NCURSES_LIBRARY})\n    ENDIF(PCRE2_SUPPORT_LIBREADLINE)\n    \n    # libedit is a plug-compatible alternative to libreadline\n    \n    IF(PCRE2_SUPPORT_LIBEDIT)\n            SET(SUPPORT_LIBEDIT 1)\n            SET(PCRE2TEST_LIBS ${EDITLINE_LIBRARY} ${NCURSES_LIBRARY})\n    ENDIF(PCRE2_SUPPORT_LIBEDIT)\n    \n    IF(PCRE2_SUPPORT_LIBZ)\n            SET(SUPPORT_LIBZ 1)\n            SET(PCRE2GREP_LIBS ${PCRE2GREP_LIBS} ${ZLIB_LIBRARIES})\n    ENDIF(PCRE2_SUPPORT_LIBZ)\n    \n    IF(PCRE2_SUPPORT_LIBBZ2)\n            SET(SUPPORT_LIBBZ2 1)\n            SET(PCRE2GREP_LIBS ${PCRE2GREP_LIBS} ${BZIP2_LIBRARIES})\n    ENDIF(PCRE2_SUPPORT_LIBBZ2)\n    \n    SET(NEWLINE_DEFAULT \"\")\n    \n    IF(PCRE2_NEWLINE STREQUAL \"CR\")\n            SET(NEWLINE_DEFAULT \"1\")\n    ENDIF(PCRE2_NEWLINE STREQUAL \"CR\")\n    IF(PCRE2_NEWLINE STREQUAL \"LF\")\n            SET(NEWLINE_DEFAULT \"2\")\n    ENDIF(PCRE2_NEWLINE STREQUAL \"LF\")\n    IF(PCRE2_NEWLINE STREQUAL \"CRLF\")\n            SET(NEWLINE_DEFAULT \"3\")\n    ENDIF(PCRE2_NEWLINE STREQUAL \"CRLF\")\n    IF(PCRE2_NEWLINE STREQUAL \"ANY\")\n            SET(NEWLINE_DEFAULT \"4\")\n    ENDIF(PCRE2_NEWLINE STREQUAL \"ANY\")\n    IF(PCRE2_NEWLINE STREQUAL \"ANYCRLF\")\n            SET(NEWLINE_DEFAULT \"5\")\n    ENDIF(PCRE2_NEWLINE STREQUAL \"ANYCRLF\")\n    IF(PCRE2_NEWLINE STREQUAL \"NUL\")\n            SET(NEWLINE_DEFAULT \"6\")\n    ENDIF(PCRE2_NEWLINE STREQUAL \"NUL\")\n    \n    IF(NEWLINE_DEFAULT STREQUAL \"\")\n            MESSAGE(FATAL_ERROR \"The PCRE2_NEWLINE variable must be set to one of the following values: \\\"LF\\\", \\\"CR\\\", \\\"CRLF\\\", \\\"ANY\\\", \\\"ANYCRLF\\\".\")\n    ENDIF(NEWLINE_DEFAULT STREQUAL \"\")\n    \n    IF(PCRE2_EBCDIC)\n            SET(EBCDIC 1)\n    ENDIF(PCRE2_EBCDIC)\n    \n    IF(PCRE2_EBCDIC_NL25)\n            SET(EBCDIC 1)\n            SET(EBCDIC_NL25 1)\n    ENDIF(PCRE2_EBCDIC_NL25)\n    \n    IF(PCRE2_HEAP_MATCH_RECURSE)\n            SET(HEAP_MATCH_RECURSE 1)\n    ENDIF(PCRE2_HEAP_MATCH_RECURSE)\n    \n    set(PCRE2_MAJOR ${PACKAGE_VERSION_MAJOR})\n    set(PCRE2_MINOR ${PACKAGE_VERSION_MINOR})\n    set(PCRE2_PRERELEASE \\\"\\\")\n    set(PCRE2_DATE \\\"\\\")\n    \n    # Output files\n    CONFIGURE_FILE(${SDIR}\/config-cmake.h.in\n                   ${BDIR}\/config.h\n                   )\n    \n    CONFIGURE_FILE(${SDIR}\/src\/pcre2.h.in\n                   ${BDIR}\/pcre2.h\n                   )\n    \n    file(GLOB rm \"${SDIR}\/src\/sljit\/*\")\n    list(REMOVE_ITEM src ${rm})\n\ncheck_function_exists:\n    -   bcopy\n    -   memmove\n    -   strerror\n    -   strtoll\n    -   strtoq\n    -   _strtoi64\n\ncheck_include_exists:\n    -   file: bits\/type_traits.h\n        variable: HAVE_BITS_TYPE_TRAITS_H\n        cpp: false\n    -   file: dirent.h\n        variable: HAVE_DIRENT_H\n        cpp: false\n    -   file: inttypes.h\n        variable: HAVE_INTTYPES_H\n        cpp: false\n    -   file: stdint.h\n        variable: HAVE_STDINT_H\n        cpp: false\n    -   file: sys\/stat.h\n        variable: HAVE_SYS_STAT_H\n        cpp: false\n    -   file: sys\/types.h\n        variable: HAVE_SYS_TYPES_H\n        cpp: false\n    -   file: type_traits.h\n        variable: HAVE_TYPE_TRAITS_H\n        cpp: false\n    -   file: unistd.h\n        variable: HAVE_UNISTD_H\n        cpp: false\n    -   file: windows.h\n        variable: HAVE_WINDOWS_H\n        cpp: false\n\ncheck_type_size:\n    -   type: long long\n    -   type: unsigned long long\n\n",
    "source": {
        "remote": {
            "url": "https:\/\/ftp.pcre.org\/pub\/pcre\/pcre2-{M}.{m}.tar.bz2"
        }
    },
    "version": "10.31.0",
    "hash": "7afeaffb1258683ab170defc2047dbe6944378c8b776e4c9dc062bbc0a2892ba",
    "created": "2018-06-11 11:58:26.334235"
}
