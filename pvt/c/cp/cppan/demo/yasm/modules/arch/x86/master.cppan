{
    "project": "pvt.cppan.demo.yasm.modules.arch.x86",
    "cppan": "source:\n    git: https:\/\/github.com\/yasm\/yasm\n    branch: master\n\nversion: master\n\ntype: library\n\nstatic_only: true\n\nfiles:\n    -   libyasm-stdint.h.cmake\n    -   modules\/arch\/x86\/.*\n\nexclude_from_package:\n    -   .*\/tests\/.*\n\nexclude_from_build:\n    -   .*\/tests\/.*\n\ndependencies:\n    public:\n        pvt.cppan.demo.python.data:\n            version: 3\n            reference: python_data\n        pvt.cppan.demo.yasm.libyasm:\n            version: \"*\"\n            include_directories_only: true\n        pvt.cppan.demo.gnu.gperf:\n            version: 3\n        pvt.cppan.demo.python.exe:\n            version: 3\n            reference: python\n\npost_sources: |\n    configure_file(${SDIR}\/libyasm-stdint.h.cmake ${BDIR}\/libyasm-stdint.h)\n    \n    macro (YASM_GENPERF _in_NAME _out_NAME)\n        add_custom_command(\n            OUTPUT ${_out_NAME}\n            COMMAND pvt.cppan.demo.gnu.gperf --output-file=${_out_NAME} ${_in_NAME}\n            DEPENDS pvt.cppan.demo.gnu.gperf\n            MAIN_DEPENDENCY ${_in_NAME}\n            )\n        set(src ${src} ${_out_NAME})\n    endmacro (YASM_GENPERF)\n    \n    push_front_to_file_once(${SDIR}\/modules\/arch\/x86\/x86cpu.gperf \"\/*\")\n    replace_in_file_once(${SDIR}\/modules\/arch\/x86\/x86cpu.gperf \"%{\" \"*\/\\n%{\")\n    \n    push_front_to_file_once(${SDIR}\/modules\/arch\/x86\/x86regtmod.gperf \"\/*\")\n    replace_in_file_once(${SDIR}\/modules\/arch\/x86\/x86regtmod.gperf \"%{\" \"*\/\\n%{\")\n    \n    YASM_GENPERF(\n        ${SDIR}\/modules\/arch\/x86\/x86cpu.gperf\n        ${BDIR}\/x86cpu.c\n        )\n    \n    YASM_GENPERF(\n        ${SDIR}\/modules\/arch\/x86\/x86regtmod.gperf\n        ${BDIR}\/x86regtmod.c\n        )\n    \n    ADD_CUSTOM_COMMAND(\n        OUTPUT\n            ${BDIR}\/x86insns.c\n            ${BDIR}\/x86insn_gas.gperf\n            ${BDIR}\/x86insn_nasm.gperf\n        COMMAND ${CMAKE_COMMAND} -E env\n                PYTHONPATH=${python_data_SDIR}\/Lib\n                $<TARGET_FILE:${python}> ${SDIR}\/modules\/arch\/x86\/gen_x86_insn.py\n                    ${BDIR}\/x86insns.c\n                    ${BDIR}\/x86insn_gas.gperf\n                    ${BDIR}\/x86insn_nasm.gperf\n        MAIN_DEPENDENCY ${SDIR}\/modules\/arch\/x86\/gen_x86_insn.py\n    )\n    set(src ${src} ${BDIR}\/x86insns.c)\n    set_source_files_properties(${BDIR}\/x86insns.c PROPERTIES HEADER_FILE_ONLY TRUE)\n    \n    YASM_GENPERF(\n        ${BDIR}\/x86insn_nasm.gperf\n        ${BDIR}\/x86insn_nasm.c\n        )\n        set_source_files_properties(${BDIR}\/x86insn_nasm.c PROPERTIES HEADER_FILE_ONLY TRUE)\n    \n    YASM_GENPERF(\n        ${BDIR}\/x86insn_gas.gperf\n        ${BDIR}\/x86insn_gas.c\n        )\n        set_source_files_properties(${BDIR}\/x86insn_gas.c PROPERTIES HEADER_FILE_ONLY TRUE)\n\ncheck_function_exists:\n    -   mergesort\n    -   popen\n    -   strcasecmp\n    -   strcmpi\n    -   stricmp\n    -   strsep\n    -   _popen\n    -   _stricmp\n\ncheck_include_exists:\n    -   file: libgen.h\n        variable: HAVE_LIBGEN_H\n        cpp: false\n    -   file: locale.h\n        variable: HAVE_LOCALE_H\n        cpp: false\n    -   file: strings.h\n        variable: HAVE_STRINGS_H\n        cpp: false\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/yasm\/yasm",
            "branch": "master"
        }
    },
    "version": "master",
    "hash": "e1e58777a3b045e8c92d3c04a5de29d38f1824dbaddfca94ca5043f7b799914f",
    "created": "2018-07-12 11:47:30.606992"
}
