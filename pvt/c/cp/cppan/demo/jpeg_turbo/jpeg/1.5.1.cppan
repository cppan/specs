{
    "project": "pvt.cppan.demo.jpeg_turbo.jpeg",
    "cppan": "source:\n    tag: 1.5.1\n    git: https:\/\/github.com\/libjpeg-turbo\/libjpeg-turbo\n\nversion: 1.5.1\n\ntype: lib\n\nfiles:\n    -   .*\\.h\n    -   simd\/.*\n    -   win\/.*\\.inc\n    -   win\/jpeg62.def\n    -   jcapimin.c\n    -   jcapistd.c\n    -   jccoefct.c\n    -   jccolor.c\n    -   jcdctmgr.c\n    -   jchuff.c\n    -   jcinit.c\n    -   jcmainct.c\n    -   jcmarker.c\n    -   jcmaster.c\n    -   jcomapi.c\n    -   jcparam.c\n    -   jcphuff.c\n    -   jcprepct.c\n    -   jcsample.c\n    -   jctrans.c\n    -   jdapimin.c\n    -   jdapistd.c\n    -   jdatadst.c\n    -   jdatasrc.c\n    -   jdcoefct.c\n    -   jdcolor.c\n    -   jddctmgr.c\n    -   jdhuff.c\n    -   jdinput.c\n    -   jdmainct.c\n    -   jdmarker.c\n    -   jdmaster.c\n    -   jdmerge.c\n    -   jdphuff.c\n    -   jdpostct.c\n    -   jdsample.c\n    -   jdtrans.c\n    -   jerror.c\n    -   jfdctflt.c\n    -   jfdctfst.c\n    -   jfdctint.c\n    -   jidctflt.c\n    -   jidctfst.c\n    -   jidctint.c\n    -   jidctred.c\n    -   jquant1.c\n    -   jquant2.c\n    -   jutils.c\n    -   jmemmgr.c\n    -   jmemnobs.c\n    -   rdbmp.c\n    -   rdtarga.c\n    -   wrbmp.c\n    -   wrtarga.c\n\nexclude_from_build:\n    -   simd\/.*\n\noptions:\n    any:\n        definitions:\n            public:\n                -   BMP_SUPPORTED\n                -   GIF_SUPPORTED\n                -   PPM_SUPPORTED\n                -   TARGA_SUPPORTED\n                -   USE_SETMODE\n                -   WITH_SIMD\n\ndependencies:\n    public:\n        pvt.cppan.demo.nasm.nasm: 2\n\npost_sources: |\n    if (NOT EXISTS ${SDIR}\/jpegfix.dummy)\n        file(READ ${SDIR}\/jmorecfg.h f)\n        string(REPLACE\n            \"#define EXTERN(type)\t\textern type\"\n            \"#define EXTERN(type)\t\textern ${LIBRARY_API} type\"\n            f \"${f}\")\n        file(WRITE ${SDIR}\/jmorecfg.h \"${f}\")\n        file_write_once(${SDIR}\/jpegfix.dummy \"\")\n    endif()\n    \n    string(TIMESTAMP BUILD \"%Y%m%d\")\n    set(VERSION ${PACKAGE_VERSION})\n    \n    set(JPEG_LIB_VERSION 62)\n    set(BITS_IN_JSAMPLE 8)\n    set(DLL_VERSION ${JPEG_LIB_VERSION})\n    \n    add_src_win32(win\/jpeg${DLL_VERSION}.def)\n    \n    # Detect whether compiler is 64-bit\n    if(MSVC AND CMAKE_CL_64)\n      set(SIMD_X86_64 1)\n      set(64BIT 1)\n    elseif(CMAKE_SIZEOF_VOID_P MATCHES 8)\n      set(SIMD_X86_64 1)\n      set(64BIT 1)\n    endif()\n    \n    configure_file(${SDIR}\/win\/jconfig.h.in ${BDIR}\/jconfig.h @ONLY)\n    configure_file(${SDIR}\/win\/jconfigint.h.in ${BDIR}\/jconfigint.h @ONLY)\n    \n    if(SIMD_X86_64)\n        add_src(simd\/jsimd_x86_64.c)\n    else()\n        add_src(simd\/jsimd_i386.c)\n    endif()\n    \n    if(SIMD_X86_64)\n      set(NAFLAGS -fwin64 -DWIN64 -D__x86_64__)\n    else()\n      if(BORLAND)\n        set(NAFLAGS -fobj -DOBJ32)\n      else()\n        set(NAFLAGS -fwin32 -DWIN32)\n      endif()\n    endif()\n    set(NAFLAGS ${NAFLAGS} -I${BDIR} -I${SDIR}\/simd\/ -I${SDIR}\/win\/)\n    \n    if(SIMD_X86_64)\n      set(SIMD_BASENAMES jfdctflt-sse-64 jccolor-sse2-64 jcgray-sse2-64\n        jchuff-sse2-64 jcsample-sse2-64 jdcolor-sse2-64 jdmerge-sse2-64\n        jdsample-sse2-64 jfdctfst-sse2-64 jfdctint-sse2-64 jidctflt-sse2-64\n        jidctfst-sse2-64 jidctint-sse2-64 jidctred-sse2-64 jquantf-sse2-64\n        jquanti-sse2-64)\n    else()\n      set(SIMD_BASENAMES jsimdcpu jfdctflt-3dn jidctflt-3dn jquant-3dn jccolor-mmx\n        jcgray-mmx jcsample-mmx jdcolor-mmx jdmerge-mmx jdsample-mmx jfdctfst-mmx\n        jfdctint-mmx jidctfst-mmx jidctint-mmx jidctred-mmx jquant-mmx jfdctflt-sse\n        jidctflt-sse jquant-sse jccolor-sse2 jcgray-sse2 jchuff-sse2 jcsample-sse2\n        jdcolor-sse2 jdmerge-sse2 jdsample-sse2 jfdctfst-sse2 jfdctint-sse2\n        jidctflt-sse2 jidctfst-sse2 jidctint-sse2 jidctred-sse2 jquantf-sse2\n        jquanti-sse2)\n    endif()\n    \n    file(GLOB INC_FILES ${SDIR}\/simd\/*.inc)\n    \n    foreach(file ${SIMD_BASENAMES})\n      set(DEPFILE \"\")\n      set(SIMD_SRC ${SDIR}\/simd\/${file}.asm)\n      if(${file} MATCHES jccolor)\n        set(DEPFILE ${file})\n        string(REGEX REPLACE \"jccolor\" \"jccolext\" DEPFILE ${DEPFILE})\n        set(DEPFILE ${SDIR}\/simd\/${DEPFILE}.asm)\n      endif()\n      if(${file} MATCHES jcgray)\n        set(DEPFILE ${file})\n        string(REGEX REPLACE \"jcgray\" \"jcgryext\" DEPFILE ${DEPFILE})\n        set(DEPFILE ${SDIR}\/simd\/${DEPFILE}.asm)\n      endif()\n      if(${file} MATCHES jdcolor)\n        set(DEPFILE ${file})\n        string(REGEX REPLACE \"jdcolor\" \"jdcolext\" DEPFILE ${DEPFILE})\n        set(DEPFILE ${SDIR}\/simd\/${DEPFILE}.asm)\n      endif()\n      if(${file} MATCHES jdmerge)\n        set(DEPFILE ${file})\n        string(REGEX REPLACE \"jdmerge\" \"jdmrgext\" DEPFILE ${DEPFILE})\n        set(DEPFILE ${SDIR}\/simd\/${DEPFILE}.asm)\n      endif()\n      set(SIMD_OBJ ${BDIR}\/${file}.obj)\n      add_custom_command(OUTPUT ${SIMD_OBJ}\n        DEPENDS ${SIMD_SRC} ${DEPFILE} ${INC_FILES}\n        COMMAND pvt.cppan.demo.nasm.nasm ${NAFLAGS} ${SIMD_SRC} -o${SIMD_OBJ})\n      set(SIMD_OBJS ${SIMD_OBJS} ${SIMD_OBJ})\n    endforeach()\n    \n    add_custom_target(simd DEPENDS ${SIMD_OBJS})\n    \n    # This tells CMake that the \"source\" files haven't been generated yet\n    set_source_files_properties(${SIMD_OBJS} PROPERTIES GENERATED 1)\n    \n    set(src ${src} ${SIMD_OBJS})\n    \n\n",
    "version": "1.5.1",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/libjpeg-turbo\/libjpeg-turbo",
            "tag": "1.5.1"
        }
    },
    "created": "2016-11-14 20:14:17.343535",
    "hash": "be3c28b882108e4e67b71349b2dfd4a33908501b64989b4c47508a7bf81d6c3d"
}
