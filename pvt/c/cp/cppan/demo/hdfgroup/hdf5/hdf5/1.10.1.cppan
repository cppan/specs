{
    "project": "pvt.cppan.demo.hdfgroup.hdf5.hdf5",
    "cppan": "source:\n    remote: https:\/\/support.hdfgroup.org\/ftp\/HDF5\/releases\/hdf5-{M}.{m}\/hdf5-{v}\/src\/hdf5-{v}.tar.bz2\n\nversion: 1.10.1\n\ntype: library\n\nfiles:\n    -   config\/cmake\/H5pubconf.h.in\n    -   src\/.*\\.c\n    -   src\/.*\\.h\n\nexclude_from_build:\n    -   src\/H5detect.c\n    -   src\/H5make_libsettings.c\n\noptions:\n    any:\n        definitions:\n            msvc:\n                public:\n                    -   H5_HAVE_VISUAL_STUDIO\n    shared:\n        definitions:\n            private:\n                -   hdf5_shared_EXPORTS\n            public:\n                -   H5_BUILT_AS_DYNAMIC_LIB\n\nchecks_prefixes:\n    -   H5_\n\npost_sources: |\n    if (WIN32)\n        set(H5_DEFAULT_PLUGINDIR \"%ALLUSERSPROFILE%\\\\\\\\hdf5\\\\\\\\lib\\\\\\\\plugin\")\n        set(H5_HAVE_WIN32_API 1)\n    else()\n        set(H5_DEFAULT_PLUGINDIR \"\/usr\/local\/hdf5\/lib\/plugin\")\n    endif()\n    set(H5_PRINTF_LL_WIDTH \"\\\"ll\\\"\")\n    set(H5_FC_FUNC  \"H5_FC_FUNC(name,NAME) name ## _\")\n    set(H5_FC_FUNC_ \"H5_FC_FUNC_(name,NAME) name ## _\")\n    \n    configure_file(${SDIR}\/config\/cmake\/H5pubconf.h.in ${BDIR}\/H5pubconf.h)\n    \n    add_executable (H5detect ${SDIR}\/src\/H5detect.c)\n    target_include_directories(H5detect PRIVATE ${BDIR})\n    if (MSVC OR MINGW)\n      target_link_libraries (H5detect \"ws2_32.lib\")\n    endif (MSVC OR MINGW)\n    \n    set (CMD $<TARGET_FILE:H5detect>)\n    add_custom_command (\n        OUTPUT ${BDIR}\/H5Tinit.c\n        COMMAND ${CMD}\n        ARGS > ${BDIR}\/H5Tinit.c\n        DEPENDS H5detect\n    )\n    set(src ${src} ${BDIR}\/H5Tinit.c)\n    \n    add_executable (H5make_libsettings ${SDIR}\/src\/H5make_libsettings.c)\n    target_include_directories(H5make_libsettings PRIVATE ${BDIR})\n    if (MSVC OR MINGW)\n      target_link_libraries (H5make_libsettings \"ws2_32.lib\")\n    endif (MSVC OR MINGW)\n    \n    set (CMD $<TARGET_FILE:H5make_libsettings>)\n    add_custom_command (\n        OUTPUT ${BDIR}\/H5lib_settings.c\n        COMMAND ${CMD}\n        ARGS > ${BDIR}\/H5lib_settings.c\n        DEPENDS H5make_libsettings\n        WORKING_DIRECTORY ${BDIR}\n    )\n    set(src ${src} ${BDIR}\/H5lib_settings.c)\n\ncheck_function_exists:\n    -   alarm\n    -   asprintf\n    -   clock_gettime\n    -   compress2\n    -   difftime\n    -   fcntl\n    -   flock\n    -   fork\n    -   frexpf\n    -   frexpl\n    -   GetConsoleScreenBufferInfo\n    -   gethostname\n    -   getpwuid\n    -   getrusage\n    -   gettextinfo\n    -   gettimeofday\n    -   ioctl\n    -   longjmp\n    -   lstat\n    -   posix_memalign\n    -   random\n    -   rand_r\n    -   setjmp\n    -   setsysinfo\n    -   siglongjmp\n    -   signal\n    -   sigprocmask\n    -   sigsetjmp\n    -   srandom\n    -   strdup\n    -   symlink\n    -   system\n    -   tmpfile\n    -   vasprintf\n    -   vsnprintf\n    -   waitpid\n    -   _getvideoconfig\n    -   _scrsize\n\ncheck_include_exists:\n    -   file: dirent.h\n        variable: HAVE_DIRENT_H\n        cpp: false\n    -   file: dmalloc.h\n        variable: HAVE_DMALLOC_H\n        cpp: false\n    -   file: features.h\n        variable: HAVE_FEATURES_H\n        cpp: false\n    -   file: io.h\n        variable: HAVE_IO_H\n        cpp: false\n    -   file: mach\/mach_time.h\n        variable: HAVE_MACH_MACH_TIME_H\n        cpp: false\n    -   file: mpe.h\n        variable: HAVE_MPE_H\n        cpp: false\n    -   file: pthread.h\n        variable: HAVE_PTHREAD_H\n        cpp: false\n    -   file: quadmath.h\n        variable: HAVE_QUADMATH_H\n        cpp: false\n    -   file: setjmp.h\n        variable: HAVE_SETJMP_H\n        cpp: false\n    -   file: stdbool.h\n        variable: HAVE_STDBOOL_H\n        cpp: false\n    -   file: sys\/file.h\n        variable: HAVE_SYS_FILE_H\n        cpp: false\n    -   file: sys\/ioctl.h\n        variable: HAVE_SYS_IOCTL_H\n        cpp: false\n    -   file: sys\/resource.h\n        variable: HAVE_SYS_RESOURCE_H\n        cpp: false\n    -   file: sys\/socket.h\n        variable: HAVE_SYS_SOCKET_H\n        cpp: false\n    -   file: sys\/timeb.h\n        variable: HAVE_SYS_TIMEB_H\n        cpp: false\n    -   file: sys\/time.h\n        variable: HAVE_SYS_TIME_H\n        cpp: false\n    -   file: szlib.h\n        variable: HAVE_SZLIB_H\n        cpp: false\n    -   file: time.h\n        variable: HAVE_TIME_H\n        cpp: false\n    -   file: winsock2.h\n        variable: HAVE_WINSOCK2_H\n        cpp: false\n    -   file: zlib.h\n        variable: HAVE_ZLIB_H\n        cpp: false\n\ncheck_type_size:\n    -   type: bool\n    -   type: char\n    -   type: double\n    -   type: float\n    -   type: int\n    -   type: int16_t\n    -   type: int32_t\n    -   type: int64_t\n    -   type: int8_t\n    -   type: int_fast16_t\n    -   type: int_fast32_t\n    -   type: int_fast64_t\n    -   type: int_fast8_t\n    -   type: int_least16_t\n    -   type: int_least32_t\n    -   type: int_least64_t\n    -   type: int_least8_t\n    -   type: long\n    -   type: long double\n    -   type: long long\n    -   type: off_t\n    -   type: ptrdiff_t\n    -   type: short\n    -   type: ssize_t\n    -   type: uint16_t\n    -   type: uint32_t\n    -   type: uint64_t\n    -   type: uint8_t\n    -   type: uint_fast16_t\n    -   type: uint_fast32_t\n    -   type: uint_fast64_t\n    -   type: uint_fast8_t\n    -   type: uint_least16_t\n    -   type: uint_least32_t\n    -   type: uint_least64_t\n    -   type: uint_least8_t\n    -   type: unsigned\n    -   type: _Quad\n    -   type: __float128\n    -   type: __int64\n\ncheck_library_function:\n    -   function: ceil\n        library: m\n    -   function: compress2\n        library: z\n    -   function: dlopen\n        library: dl\n    -   function: dmalloc_shutdown\n        library: dmalloc\n    -   function: MPE_Init_log\n        library: mpe\n    -   function: pthread_self\n        library: pthread\n    -   function: SZ_BufftoBuffCompress\n        library: sz\n\ncheck_symbol_exists:\n    -   symbol: snprintf\n        headers:\n            -   stdio.h\n\ncheck_c_source_compiles:\n    DEV_T_IS_SCALAR:\n        text: \"\\n#ifdef HAVE_SYS_TYPES_H\\n#include <sys\/types.h>\\n#endif\\n  \\n\\n int main() { \\n\\ndev_t d1, d2; if(d1==d2) return 0;\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_ATTRIBUTE:\n        text: \"\\n\\n int main() { \\n\\nint __attribute__((unused)) x\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_C99_DESIGNATED_INITIALIZER:\n        text: \"\\n\\n int main() { \\n\\n\\n                typedef struct {\\n                    int x;\\n                    union {\\n                        int i;\\n                        double d;\\n                    } u;\\n                } di_struct_t;\\n                di_struct_t x = {0, { .d = 0.0}}; \\n\\n ; return 0; }\"\n        invert: false\n    HAVE_C99_FUNC:\n        text: \"\\n\\n int main() { \\n\\n const char *fname = __func__; \\n\\n ; return 0; }\"\n        invert: false\n    HAVE_FUNCTION:\n        text: \"\\n\\n int main() { \\n\\n const char *fname = __FUNCTION__; \\n\\n ; return 0; }\"\n        invert: false\n    HAVE_INLINE:\n        text: static inline void f(void){return;};\n        invert: false\n    HAVE_MPI_MULTI_LANG_Comm:\n        text: \"\\n    #include <mpi.h>\\n    \\n\\n int main() { \\n\\nMPI_Comm c_comm; MPI_Comm_c2f(c_comm)\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_MPI_MULTI_LANG_Info:\n        text: \"#include <mpi.h>\\n\\n int main() { \\n\\nMPI_Info c_info; MPI_Info_c2f(c_info)\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_STRUCT_TEXT_INFO:\n        text: \"\\n\\n int main() { \\n\\nstruct text_info w; w.screenwidth=0;\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_STRUCT_VIDEOCONFIG:\n        text: \"\\n\\n int main() { \\n\\nstruct videoconfig w; w.numtextcols=0;\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_TIMEZONE:\n        text: \"\\n    #include <sys\/time.h>\\n    #include <time.h>\\n\\n int main() { \\n\\ntimezone=0;\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_TIME_WITH_SYS_TIME:\n        text: \"\\n#include <time.h>\\n#include <sys\/time.h>\\nint main() {return 0;}\\n\"\n        invert: false\n    HAVE_TIOCGETD:\n        text: \"\\n#include <sys\/ioctl.h>\\n\\n\\n int main() { \\n\\nint w=TIOCGETD;\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_TIOCGWINSZ:\n        text: \"\\n#include <sys\/ioctl.h>\\n\\n\\n int main() { \\n\\nint w=TIOCGWINSZ;\\n\\n ; return 0; }\"\n        invert: false\n    HAVE_TM_GMTOFF:\n        text: \"\\n  #include <sys\/time.h>\\n  #include <time.h>\\n\\n\\n int main() { \\n\\nstruct tm tm; tm.tm_gmtoff=0;\\n\\n ; return 0; }\"\n        invert: false\n    HAVE___INLINE:\n        text: static __inline void f(void){return;};\n        invert: false\n    HAVE___INLINE__:\n        text: static __inline__ void f(void){return;};\n        invert: false\n\ncheck_decl_exists:\n    -   decl: decl\n        headers:\n            -   CLOCK_MONOTONIC\n    -   decl: decl\n        headers:\n            -   O_DIRECT\n\n",
    "source": {
        "remote": {
            "url": "https:\/\/support.hdfgroup.org\/ftp\/HDF5\/releases\/hdf5-{M}.{m}\/hdf5-{v}\/src\/hdf5-{v}.tar.bz2"
        }
    },
    "version": "1.10.1",
    "hash": "58bd1cd13f61a7e3cf725d1c93ba7529f5cbe76c76c8b6bd1f508f2ea831ec37",
    "created": "2018-02-28 21:18:21.885087"
}
