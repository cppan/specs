{
    "project": "pvt.cppan.demo.python.lib",
    "cppan": "source:\n    remote: https:\/\/www.python.org\/ftp\/python\/3.6.0\/Python-3.6.0.tar.xz\n\nversion: 3.6.0\n\nfiles:\n    -   Include\/.*\n    -   Parser\/.*\\.h\n    -   Objects\/.*\\.h\n    -   Objects\/.*\\.inc\n    -   Python\/.*\\.h\n    -   PC\/.*\\.h\n    -   Modules\/.*\\.h\n    -   Modules\/_bisectmodule.c\n    -   Modules\/_codecsmodule.c\n    -   Modules\/_collectionsmodule.c\n    -   Modules\/_csv.c\n    -   Modules\/_datetimemodule.c\n    -   Modules\/_functoolsmodule.c\n    -   Modules\/_heapqmodule.c\n    -   Modules\/_io\/.*\\.c\n    -   Modules\/_io\/.*\\.h\n    -   Modules\/_blake2\/.*\\.c\n    -   Modules\/_blake2\/.*\\.h\n    -   Modules\/_sha3\/.*\\.c\n    -   Modules\/_sha3\/.*\\.h\n    -   Modules\/_sha3\/.*\\.inc\n    -   Modules\/_sha3\/.*\\.macros\n    -   Modules\/_json.c\n    -   Modules\/_localemodule.c\n    -   Modules\/_lsprof.c\n    -   Modules\/_math.c\n    -   Modules\/_opcode.c\n    -   Modules\/_operator.c\n    -   Modules\/_pickle.c\n    -   Modules\/_randommodule.c\n    -   Modules\/_sre.c\n    -   Modules\/_stat.c\n    -   Modules\/_struct.c\n    -   Modules\/_threadmodule.c\n    -   Modules\/_tracemalloc.c\n    -   Modules\/_weakref.c\n    -   Modules\/_winapi.c\n    -   Modules\/arraymodule.c\n    -   Modules\/atexitmodule.c\n    -   Modules\/audioop.c\n    -   Modules\/binascii.c\n    -   Modules\/cjkcodecs\/_codecs_cn.c\n    -   Modules\/cjkcodecs\/_codecs_hk.c\n    -   Modules\/cjkcodecs\/_codecs_iso2022.c\n    -   Modules\/cjkcodecs\/_codecs_jp.c\n    -   Modules\/cjkcodecs\/_codecs_kr.c\n    -   Modules\/cjkcodecs\/_codecs_tw.c\n    -   Modules\/cjkcodecs\/multibytecodec.c\n    -   Modules\/cmathmodule.c\n    -   Modules\/errnomodule.c\n    -   Modules\/faulthandler.c\n    -   Modules\/gcmodule.c\n    -   Modules\/getbuildinfo.c\n    -   Modules\/getpath.c\n    -   Modules\/hashtable.c\n    -   Modules\/itertoolsmodule.c\n    -   Modules\/main.c\n    -   Modules\/mathmodule.c\n    -   Modules\/md5module.c\n    -   Modules\/mmapmodule.c\n    -   Modules\/parsermodule.c\n    -   Modules\/posixmodule.c\n    -   Modules\/pwdmodule.c\n    -   Modules\/rotatingtree.c\n    -   Modules\/sha1module.c\n    -   Modules\/sha256module.c\n    -   Modules\/sha512module.c\n    -   Modules\/signalmodule.c\n    -   Modules\/symtablemodule.c\n    -   Modules\/timemodule.c\n    -   Modules\/xxsubtype.c\n    -   Modules\/zipimport.c\n    -   Modules\/zlibmodule.c\n    -   Modules\/config.c.in\n    -   Objects\/abstract.c\n    -   Objects\/accu.c\n    -   Objects\/boolobject.c\n    -   Objects\/bytearrayobject.c\n    -   Objects\/bytes_methods.c\n    -   Objects\/bytesobject.c\n    -   Objects\/capsule.c\n    -   Objects\/cellobject.c\n    -   Objects\/classobject.c\n    -   Objects\/codeobject.c\n    -   Objects\/complexobject.c\n    -   Objects\/descrobject.c\n    -   Objects\/dictobject.c\n    -   Objects\/enumobject.c\n    -   Objects\/exceptions.c\n    -   Objects\/fileobject.c\n    -   Objects\/floatobject.c\n    -   Objects\/frameobject.c\n    -   Objects\/funcobject.c\n    -   Objects\/genobject.c\n    -   Objects\/iterobject.c\n    -   Objects\/listobject.c\n    -   Objects\/longobject.c\n    -   Objects\/memoryobject.c\n    -   Objects\/methodobject.c\n    -   Objects\/moduleobject.c\n    -   Objects\/namespaceobject.c\n    -   Objects\/object.c\n    -   Objects\/obmalloc.c\n    -   Objects\/odictobject.c\n    -   Objects\/rangeobject.c\n    -   Objects\/setobject.c\n    -   Objects\/sliceobject.c\n    -   Objects\/structseq.c\n    -   Objects\/tupleobject.c\n    -   Objects\/typeobject.c\n    -   Objects\/unicodectype.c\n    -   Objects\/unicodeobject.c\n    -   Objects\/weakrefobject.c\n    -   PC\/config.c\n    -   PC\/dl_nt.c\n    -   PC\/getpathp.c\n    -   PC\/invalid_parameter_handler.c\n    -   PC\/msvcrtmodule.c\n    -   PC\/winreg.c\n    -   Parser\/acceler.c\n    -   Parser\/bitset.c\n    -   Parser\/firstsets.c\n    -   Parser\/grammar.c\n    -   Parser\/grammar1.c\n    -   Parser\/listnode.c\n    -   Parser\/metagrammar.c\n    -   Parser\/myreadline.c\n    -   Parser\/node.c\n    -   Parser\/parser.c\n    -   Parser\/parsetok.c\n    -   Parser\/tokenizer.c\n    -   Python\/Python-ast.c\n    -   Python\/_warnings.c\n    -   Python\/asdl.c\n    -   Python\/ast.c\n    -   Python\/bltinmodule.c\n    -   Python\/ceval.c\n    -   Python\/codecs.c\n    -   Python\/compile.c\n    -   Python\/dtoa.c\n    -   Python\/dynamic_annotations.c\n    -   Python\/dynload_.*\n    -   Python\/errors.c\n    -   Python\/fileutils.c\n    -   Python\/formatter_unicode.c\n    -   Python\/frozen.c\n    -   Python\/future.c\n    -   Python\/getargs.c\n    -   Python\/getcompiler.c\n    -   Python\/getcopyright.c\n    -   Python\/getopt.c\n    -   Python\/getplatform.c\n    -   Python\/getversion.c\n    -   Python\/graminit.c\n    -   Python\/import.c\n    -   Python\/importdl.c\n    -   Python\/marshal.c\n    -   Python\/modsupport.c\n    -   Python\/mysnprintf.c\n    -   Python\/mystrtoul.c\n    -   Python\/peephole.c\n    -   Python\/pyarena.c\n    -   Python\/pyctype.c\n    -   Python\/pyfpe.c\n    -   Python\/pyhash.c\n    -   Python\/pylifecycle.c\n    -   Python\/pymath.c\n    -   Python\/pystate.c\n    -   Python\/pystrcmp.c\n    -   Python\/pystrhex.c\n    -   Python\/pystrtod.c\n    -   Python\/pythonrun.c\n    -   Python\/pytime.c\n    -   Python\/random.c\n    -   Python\/structmember.c\n    -   Python\/symtable.c\n    -   Python\/sysmodule.c\n    -   Python\/thread.c\n    -   Python\/traceback.c\n\ninclude_directories:\n    private:\n        -   PC\n    public:\n        -   Include\n\noptions:\n    static:\n        definitions:\n            public:\n                -   Py_NO_ENABLE_SHARED\n    any:\n        link_libraries:\n            win32:\n                public:\n                    -   Shlwapi\n                    -   Mincore\n        definitions:\n            unix:\n                public:\n                    -   _GNU_SOURCE=1\n                    -   _ALL_SOURCE=1\n                    -   _POSIX_PTHREAD_SEMANTICS=1\n                    -   _TANDEM_SOURCE=1\n                    -   __EXTENSIONS__=1\n                    -   WITH_THREAD\n                    -   _POSIX_THREADS\n                    -   PY_FORMAT_LONG_LONG=\"ll\"\n                    -   PY_FORMAT_SIZE_T=\"z\"\n                    -   _LARGEFILE_SOURCE=1\n                    -   _FILE_OFFSET_BITS=64\n                    -   _BSD_TYPES\n                    -   _DARWIN_C_SOURCE\n                    -   _NETBSD_SOURCE\n                    -   __BSD_VISIBLE\n            linux:\n                public:\n                    -   _XOPEN_SOURCE=700\n                    -   _XOPEN_SOURCE_EXTENDED=1\n                    -   _POSIX_C_SOURCE=200809L\n            bsd:\n                public:\n                    -   _BSD_SOURCE\n            cygwin:\n                public:\n                    -   HAVE_BROKEN_PTHREAD_SIGMASK=1\n            win32:\n                public:\n                    -   MS_WINDOWS\n                    -   NT_THREADS\n            private:\n                -   Py_BUILD_CORE\n                -   PREFIX=\"\"\n                -   EXEC_PREFIX=\"\"\n                -   VERSION=\"${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}\"\n                -   VPATH=\"\"\n                -   PYTHONPATH=\"\"\n            apple:\n                public:\n                    -   WITH_DYLD\n            aix:\n                public:\n                    -   _LARGE_FILES\n            public:\n                -   SOABI=\"\"\n                -   PLATFORM=\"\"\n                -   ABIFLAGS=\"\"\n                -   RETSIGTYPE=void\n                -   STDC_HEADERS=1\n                -   USE_INLINE\n                -   HAVE_STDARG_PROTOTYPES\n                -   WITH_PYMALLOC\n                -   WITH_DOC_STRINGS=1\n                -   ENABLE_IPV6\n                -   HAVE_ZLIB_COPY\n                -   STDC_HEADERS=1\n                -   HAVE_DYNAMIC_LOADING\n                -   HAVE_GCC_UINT128_T=HAVE___UINT128_T\n\ndependencies:\n    pvt.cppan.demo.zlib: 1\n\npre_sources: |\n    if (UNIX)\n        if (NOT EXISTS ${SDIR}\/config.c.fix)\n            file(READ ${SDIR}\/Modules\/config.c.in f)\n            string(REPLACE \"\/* -- ADDMODULE MARKER 1 -- *\/\" \"\n                extern PyObject* PyInit__thread(void);\n                extern PyObject* PyInit__signal(void);\n                extern PyObject* PyInit_posix(void);\n                extern PyObject* PyInit_errno(void);\n                extern PyObject* PyInit_pwd(void);\n                extern PyObject* PyInit__sre(void);\n                extern PyObject* PyInit__codecs(void);\n                extern PyObject* PyInit__weakref(void);\n                extern PyObject* PyInit__functools(void);\n                extern PyObject* PyInit__operator(void);\n                extern PyObject* PyInit__collections(void);\n                extern PyObject* PyInit_itertools(void);\n                extern PyObject* PyInit_atexit(void);\n                extern PyObject* PyInit__stat(void);\n                extern PyObject* PyInit_time(void);\n                extern PyObject* PyInit__locale(void);\n                extern PyObject* PyInit__io(void);\n                extern PyObject* PyInit_zipimport(void);\n                extern PyObject* PyInit_faulthandler(void);\n                extern PyObject* PyInit__tracemalloc(void);\n                extern PyObject* PyInit__symtable(void);\n                extern PyObject* PyInit_xxsubtype(void);\n                \" f \"${f}\")\n            string(REPLACE \"\/* -- ADDMODULE MARKER 2 -- *\/\" \"\n                \t{\\\"_thread\\\", PyInit__thread},\n                    {\\\"_signal\\\", PyInit__signal},\n                    {\\\"posix\\\", PyInit_posix},\n                    {\\\"errno\\\", PyInit_errno},\n                    {\\\"pwd\\\", PyInit_pwd},\n                    {\\\"_sre\\\", PyInit__sre},\n                    {\\\"_codecs\\\", PyInit__codecs},\n                    {\\\"_weakref\\\", PyInit__weakref},\n                    {\\\"_functools\\\", PyInit__functools},\n                    {\\\"_operator\\\", PyInit__operator},\n                    {\\\"_collections\\\", PyInit__collections},\n                    {\\\"itertools\\\", PyInit_itertools},\n                    {\\\"atexit\\\", PyInit_atexit},\n                    {\\\"_stat\\\", PyInit__stat},\n                    {\\\"time\\\", PyInit_time},\n                    {\\\"_locale\\\", PyInit__locale},\n                    {\\\"_io\\\", PyInit__io},\n                    {\\\"zipimport\\\", PyInit_zipimport},\n                    {\\\"faulthandler\\\", PyInit_faulthandler},\n                    {\\\"_tracemalloc\\\", PyInit__tracemalloc},\n                    {\\\"_symtable\\\", PyInit__symtable},\n                    {\\\"xxsubtype\\\", PyInit_xxsubtype},\n                \" f \"${f}\")\n            file(WRITE ${SDIR}\/Modules\/config.c \"${f}\")\n    \n            file_write_once(${SDIR}\/config.c.fix \"\")\n        endif()\n    endif()\n\npost_sources: |\n    if (NOT MSVC)\n        remove_src(PC\/invalid_parameter_handler.c)\n    endif()\n    \n    remove_src_dir(Modules\/_sha3\/kcp\/*)\n    remove_src_dir(Modules\/_blake2\/impl\/*)\n    \n    remove_src(Python\/dynload_aix.c)\n    remove_src(Python\/dynload_dl.c)\n    remove_src(Python\/dynload_hpux.c)\n    remove_src(Python\/dynload_next.c)\n    remove_src(Python\/dynload_shlib.c)\n    remove_src(Python\/dynload_stub.c)\n    remove_src(Python\/dynload_win.c)\n    \n    if (UNIX AND HAVE_DLOPEN)\n        add_src(Python\/dynload_shlib.c)\n    endif()\n    \n    if (MSVC)\n        add_src(Python\/dynload_win.c)\n    endif()\n    \n    remove_src_win32(Modules\/pwdmodule.c)\n    remove_src_win32(Modules\/getpath.c)\n    \n    remove_src_unix(Modules\/_winapi.c)\n    remove_src_unix(PC\/config.c)\n    remove_src_unix(PC\/winreg.c)\n    remove_src_unix(PC\/msvcrtmodule.c)\n    remove_src_unix(PC\/getpathp.c)\n    remove_src_unix(PC\/dl_nt.c)\n    \n    if (NOT EXISTS ${BDIR}\/pyconfig.h.fix)\n        if (WIN32)\n            configure_file(${SDIR}\/PC\/pyconfig.h ${BDIR}\/pyconfig.h COPYONLY)\n            file(READ ${BDIR}\/pyconfig.h f)\n            string(REPLACE \"#ifdef MS_COREDLL\" \"#if 0\" f \"${f}\")\n            string(REPLACE \"#ifdef _DEBUG\" \"#ifndef NDEBUG\" f \"${f}\")\n            file(WRITE ${BDIR}\/pyconfig.h \"${f}\")\n        else()\n            file_write_once(${BDIR}\/pyconfig.h \"#pragma once\n    \n            \/* Define the macros needed if on a UnixWare 7.x system. *\/\n            #if defined(__USLC__) && defined(__SCO_VERSION__)\n            #define STRICT_SYSV_CURSES \/* Don't use ncurses extensions *\/\n            #endif\n            \")\n        endif()\n    \n        file(WRITE ${BDIR}\/pyconfig.h.fix \"\")\n    endif()\n    \n    if (NOT HAVE_WCHAR_T_SIGNED AND \"${SIZEOF_WCHAR_T}\" GREATER 1)\n        add_definitions(-DHAVE_USABLE_WCHAR_T=1)\n    endif()\n    \n    # Python library should be always shared on some systems (windows, apple)\n    # because it uses cross-dll variables that will have multiple instances\n    # in case of static linking.\n    # With dynamic linking only one copy of each variable will live in dll instance.\n    if (WIN32 OR APPLE)\n        set(LIBRARY_TYPE SHARED)\n    endif()\n    \n\ncheck_function_exists:\n    -   accept4\n    -   acosh\n    -   alarm\n    -   asinh\n    -   atanh\n    -   bind_textdomain_codeset\n    -   chflags\n    -   chown\n    -   chroot\n    -   clock\n    -   clock_getres\n    -   clock_gettime\n    -   confstr\n    -   copysign\n    -   ctermid\n    -   ctermid_r\n    -   is_term_resized\n    -   resizeterm\n    -   resize_term\n    -   isfinite\n    -   isinf\n    -   isnan\n    -   tzname\n    -   dirfd\n    -   dup2\n    -   dup3\n    -   epoll\n    -   epoll_create1\n    -   erf\n    -   erfc\n    -   execv\n    -   expm1\n    -   faccessat\n    -   fchdir\n    -   fchmod\n    -   fchmodat\n    -   fchown\n    -   fchownat\n    -   fdopendir\n    -   fexecve\n    -   finite\n    -   flock\n    -   fork\n    -   forkpty\n    -   fpathconf\n    -   fseek64\n    -   fseeko\n    -   fstatat\n    -   fstatvfs\n    -   fsync\n    -   ftell64\n    -   ftello\n    -   ftime\n    -   ftruncate\n    -   futimens\n    -   futimes\n    -   futimesat\n    -   gai_strerror\n    -   gamma\n    -   getaddrinfo\n    -   flockfile\n    -   getc_unlocked\n    -   funlockfile\n    -   getentropy\n    -   getgrouplist\n    -   getgroups\n    -   gethostbyname\n    -   gethostbyname_r\n    -   getitimer\n    -   getloadavg\n    -   getlogin\n    -   getnameinfo\n    -   getpagesize\n    -   getpeername\n    -   getpgid\n    -   getpgrp\n    -   getpid\n    -   getpriority\n    -   getpwent\n    -   getrandom\n    -   getresgid\n    -   getresuid\n    -   getsid\n    -   getspent\n    -   getspnam\n    -   gettimeofday\n    -   getwd\n    -   hstrerror\n    -   le64toh\n    -   htole64\n    -   hypot\n    -   if_nameindex\n    -   inet_aton\n    -   inet_pton\n    -   initgroups\n    -   kill\n    -   killpg\n    -   kqueue\n    -   lchflags\n    -   lchmod\n    -   lchown\n    -   lgamma\n    -   link\n    -   linkat\n    -   lockf\n    -   log1p\n    -   log2\n    -   lstat\n    -   lutimes\n    -   mbrtowc\n    -   memmove\n    -   memrchr\n    -   mkdirat\n    -   mkfifo\n    -   mkfifoat\n    -   mknod\n    -   mknodat\n    -   mktime\n    -   mmap\n    -   mremap\n    -   nice\n    -   openat\n    -   openpty\n    -   pathconf\n    -   pause\n    -   pipe2\n    -   plock\n    -   poll\n    -   posix_fadvise\n    -   posix_fallocate\n    -   pread\n    -   prlimit\n    -   pthread_atfork\n    -   pthread_init\n    -   pthread_kill\n    -   pthread_sigmask\n    -   putenv\n    -   pwrite\n    -   readlink\n    -   readlinkat\n    -   readv\n    -   realpath\n    -   renameat\n    -   round\n    -   sched_get_priority_max\n    -   sched_rr_get_interval\n    -   sched_setaffinity\n    -   sched_setparam\n    -   sched_setscheduler\n    -   select\n    -   sem_getvalue\n    -   sem_open\n    -   sem_timedwait\n    -   sem_unlink\n    -   sendfile\n    -   setegid\n    -   seteuid\n    -   setgid\n    -   setgroups\n    -   sethostname\n    -   setitimer\n    -   setlocale\n    -   setpgid\n    -   setpgrp\n    -   setpriority\n    -   setregid\n    -   setresgid\n    -   setresuid\n    -   setreuid\n    -   setsid\n    -   setuid\n    -   setvbuf\n    -   sigaction\n    -   sigaltstack\n    -   siginterrupt\n    -   sigpending\n    -   sigrelse\n    -   sigtimedwait\n    -   sigwait\n    -   sigwaitinfo\n    -   socketpair\n    -   statvfs\n    -   strdup\n    -   strftime\n    -   strlcpy\n    -   symlink\n    -   symlinkat\n    -   sync\n    -   sysconf\n    -   tcgetpgrp\n    -   tcsetpgrp\n    -   tempnam\n    -   tgamma\n    -   timegm\n    -   times\n    -   tmpfile\n    -   tmpnam\n    -   tmpnam_r\n    -   truncate\n    -   uname\n    -   unlinkat\n    -   unsetenv\n    -   utimensat\n    -   utimes\n    -   wait3\n    -   wait4\n    -   waitid\n    -   waitpid\n    -   wcscoll\n    -   wcsftime\n    -   wcsxfrm\n    -   wmemcmp\n    -   writev\n    -   _getpty\n\ncheck_include_exists:\n    -   alloca.h\n    -   asm\/types.h\n    -   bluetooth\/bluetooth.h\n    -   bluetooth.h\n    -   conio.h\n    -   curses.h\n    -   direct.h\n    -   dirent.h\n    -   dlfcn.h\n    -   endian.h\n    -   errno.h\n    -   fcntl.h\n    -   grp.h\n    -   ieeefp.h\n    -   inttypes.h\n    -   io.h\n    -   langinfo.h\n    -   libintl.h\n    -   libutil.h\n    -   linux\/can\/bcm.h\n    -   linux\/can.h\n    -   linux\/can\/raw.h\n    -   linux\/netlink.h\n    -   linux\/tipc.h\n    -   linux\/random.h\n    -   memory.h\n    -   ncurses.h\n    -   ndir.h\n    -   netpacket\/packet.h\n    -   net\/if.h\n    -   poll.h\n    -   process.h\n    -   pthread.h\n    -   pty.h\n    -   sched.h\n    -   shadow.h\n    -   signal.h\n    -   spawn.h\n    -   stdatomic.h\n    -   stdint.h\n    -   stdlib.h\n    -   strings.h\n    -   string.h\n    -   stropts.h\n    -   sysexits.h\n    -   sys\/audioio.h\n    -   sys\/bsdtty.h\n    -   sys\/devpoll.h\n    -   sys\/dir.h\n    -   sys\/endian.h\n    -   sys\/epoll.h\n    -   sys\/event.h\n    -   sys\/file.h\n    -   sys\/ioctl.h\n    -   sys\/kern_control.h\n    -   sys\/loadavg.h\n    -   sys\/lock.h\n    -   sys\/mkdev.h\n    -   sys\/modem.h\n    -   sys\/ndir.h\n    -   sys\/param.h\n    -   sys\/poll.h\n    -   sys\/resource.h\n    -   sys\/select.h\n    -   sys\/sendfile.h\n    -   sys\/socket.h\n    -   sys\/statvfs.h\n    -   sys\/stat.h\n    -   sys\/syscall.h\n    -   sys\/sys_domain.h\n    -   sys\/termio.h\n    -   sys\/times.h\n    -   sys\/time.h\n    -   sys\/types.h\n    -   sys\/uio.h\n    -   sys\/un.h\n    -   sys\/utsname.h\n    -   sys\/wait.h\n    -   sys\/xattr.h\n    -   termios.h\n    -   term.h\n    -   unistd.h\n    -   util.h\n    -   utime.h\n    -   wchar.h\n\ncheck_type_size:\n    -   int32_t\n    -   int64_t\n    -   long double\n    -   long long\n    -   ssize_t\n    -   uint32_t\n    -   uint64_t\n    -   uintptr_t\n    -   double\n    -   float\n    -   fpos_t\n    -   int\n    -   long\n    -   off_t\n    -   pid_t\n    -   pthread_t\n    -   short\n    -   size_t\n    -   time_t\n    -   uintptr_t\n    -   void *\n    -   wchar_t\n    -   _Bool\n    -   __uint128_t\n\ncheck_library_exists:\n    -   dl\n    -   dld\n    -   ieee\n    -   readline\n    -   resolv\n    -   sendfile\n\ncheck_symbol_exists:\n    snprintf: stdio.h\n\ncheck_c_source_compiles:\n    HAVE_GCC_ASM_FOR_X64: \"int main()\\n{\\n    __asm__ __volatile__ (\\\"movq %rcx, %rax\\\");\\n    return 0;\\n}\\n\"\n    HAVE_BROKEN_UNSETENV: \"#include <stdlib.h>\\nint main()\\n{\\n    int res = unsetenv(\\\"DUMMY\\\");\\n    return 0;\\n}\\n\"\n    HAVE_ADDRINFO: \"#include <netdb.h>\\nint main()\\n{\\n    struct addrinfo a;\\n    return 0;\\n}\\n\"\n    HAVE_DEVICE_MACROS: \"#if defined(MAJOR_IN_MKDEV)\\n#include <sys\/mkdev.h>\\n#elif defined(MAJOR_IN_SYSMACROS)\\n#include <sys\/sysmacros.h>\\n#else\\n#include <sys\/types.h>\\n#endif\\nint main()\\n{\\n    makedev(major(0),minor(0));\\n    return 0;\\n}\\n\"\n    HAVE_STAT_TV_NSEC2: \"#include <sys\/stat.h>\\nint main()\\n{\\n    struct stat st;\\n    st.st_mtimespec.tv_nsec = 1;\\n    return 0;\\n}\\n\"\n    HAVE_GCC_ASM_FOR_MC68881: \"int main()\\n{  unsigned int fpcr;\\n  __asm__ __volatile__ (\\\"fmove.l %%fpcr,%0\\\" : \\\"=g\\\" (fpcr));\\n  __asm__ __volatile__ (\\\"fmove.l %0,%%fpcr\\\" : : \\\"g\\\" (fpcr));\\n    return 0;\\n}\\n\"\n    HAVE_STAT_TV_NSEC: \"#include <sys\/stat.h>\\nint main()\\n{\\n    struct stat st;\\n    st.st_mtim.tv_nsec = 1;\\n    return 0;\\n}\\n\"\n    HAVE_ALTZONE: \"#include <time.h>\\nint main()\\n{\\n    return altzone;\\n}\\n\"\n    GETPGRP_HAVE_ARG: \"#include <unistd.h>\\nint main()\\n{\\n    getpgrp(0);\\n    return 0;\\n}\\n\"\n    HAVE_LINUX_CAN_RAW_FD_FRAMES: \"#include <linux\/can\/raw.h>\\nint main()\\n{\\n    int can_raw_fd_frames = CAN_RAW_FD_FRAMES;\\n    return 0;\\n}\\n\"\n    HAVE_SOCKADDR_STORAGE: \"#\\t\\tinclude <sys\/types.h>\\n#\\t\\tinclude <sys\/socket.h>\\nint main()\\n{\\n    struct sockaddr_storage s;\\n    return 0;\\n}\\n\"\n    GETTIMEOFDAY_NO_TZ:\n        invert: true\n        text: \"#include <sys\/time.h>\\nint main()\\n{\\n    gettimeofday((struct timeval*)0,(struct timezone*)0);\\n    return 0;\\n}\\n\"\n    HAVE_C99_BOOL: \"int main()\\n{\\n    _Bool x;\\n    x = (_Bool)0;\\n    return 0;\\n}\\n\"\n    HAVE_STDARG_PROTOTYPES: \"#include <stdarg.h>\\nint foo(int x, ...) {\\nva_list va;\\nva_start(va, x);\\nva_arg(va, int);\\nva_arg(va, char *);\\nva_arg(va, double);\\nreturn 0;\\n}\\nint main()\\n{\\n    return foo(10, \\\"\\\", 3.14);\\n}\\n\"\n    HAVE_BUILTIN_ATOMIC: \"volatile int val = 1;\\nint main() {\\n  __atomic_load_n(&val, __ATOMIC_SEQ_CST);\\n  return 0;\\n}\\n\"\n    HAVE_PROTOTYPES: \"int foo(int x) { return 0; }\\nint main()\\n{\\n    return foo(10);\\n}\\n\"\n    HAVE_GETRANDOM_SYSCALL: \"#include <unistd.h>\\n#include <sys\/syscall.h>\\n#include <linux\/random.h>\\n\\nint main() {\\n    char buffer[1];\\n    const size_t buflen = sizeof(buffer);\\n    const int flags = GRND_NONBLOCK;\\n    \/* ignore the result, Python checks for ENOSYS and EAGAIN at runtime *\/\\n    (void)syscall(SYS_getrandom, buffer, buflen, flags);\\n    return 0;\\n}\\n\"\n    HAVE_SOCKADDR_SA_LEN: \"#include <sys\/types.h>\\n#include <sys\/socket.h>\\nint main()\\n{\\n    struct sockaddr x;\\n    x.sa_len = 0;\\n    return 0;\\n}\\n\"\n    HAVE_DIRENT_D_TYPE: \"#include <dirent.h>\\n\\nint main() {\\n  struct dirent entry;\\n  return entry.d_type == DT_UNKNOWN;\\n}\\n\"\n    HAVE_UCS4_TCL: \"#include <tcl.h>\\n#if TCL_UTF_MAX != 6\\n# error \\\"NOT UCS4_TCL\\\"\\n#endif\\nint main()\\n{\\n    return 0;\\n}\\n\"\n    HAVE_MAKEDEV: \"#if defined(MAJOR_IN_MKDEV)\\n#include <sys\/mkdev.h>\\n#elif defined(MAJOR_IN_SYSMACROS)\\n#include <sys\/sysmacros.h>\\n#else\\n#include <sys\/types.h>\\n#endif\\nint main()\\n{\\n    makedev(0, 0);\\n    return 0;\\n}\\n\"\n    HAVE_GCC_ASM_FOR_X87: \"int main()\\n{\\n      unsigned short cw;\\n  __asm__ __volatile__ (\\\"fnstcw %0\\\" : \\\"=m\\\" (cw));\\n  __asm__ __volatile__ (\\\"fldcw %0\\\" : : \\\"m\\\" (cw));\\n    return 0;\\n}\\n\"\n    HAVE_OSX105_SDK: \"#include <Carbon\/Carbon.h>\\nint main()\\n{\\n    FSIORefNum fRef = 0;\\n    return 0;\\n}\\n\"\n    HAVE_STD_ATOMIC: \"#include <stdatomic.h>\\natomic_int value = ATOMIC_VAR_INIT(1);\\n_Atomic void *py_atomic_address = (void*) &value;\\nint main() {\\n  int loaded_value = atomic_load(&value);\\n  return 0;\\n}\\n\"\n    TIME_WITH_SYS_TIME: \"#include <time.h>\\n#include <sys\/time.h>\\nint main()\\n{\\n    return 0;\\n}\\n\"\n    HAVE_WCHAR_T_SIGNED: \"#include <wchar.h>\\nint main()\\n{\\n\/* Success: exit code 0 *\/\\n    exit((((wchar_t) -1) < ((wchar_t) 0)) ? 0 : 1);\\n}\\n\"\n    SYS_SELECT_WITH_SYS_TIME: \"#include <sys\/types.h>\\n#include <sys\/select.h>\\n#include <sys\/time.h>\\nint main()\\n{\\n    return 0;\\n}\\n\"\n    MVWDELCH_IS_EXPRESSION: \"#include <curses.h>\\nint main()\\n{\\n      int rtn;\\n    rtn = mvwdelch(0,0,0);\\n    return 0;\\n}\\n\"\n    HAVE_FDATASYNC: \"#include <unistd.h>\\nint main()\\n{\\n    void *x=fdatasync;\\n    return 0;\\n}\\n\"\n    SETPGRP_HAVE_ARG: \"#include <unistd.h>\\nint main()\\n{\\n    setpgrp(0,0);\\n    return 0;\\n}\\n\"\n    VA_LIST_IS_ARRAY:\n        text: \"#if ${HAVE_STDARG_PROTOTYPES}\\n#include <stdarg.h>\\n#else\\n#include <varargs.h>\\n#endif\\nint main()\\n{\\n    va_list list1, list2; list1 = list2;\\n    return 0;\\n}\\n\"\n        invert: true\n    WINDOW_HAS_FLAGS: \"#include <curses.h>\\nint main()\\n{\\n    WINDOW *w;\\n    w->_flags = 0;\\n    return 0;\\n}\\n\"\n    TM_IN_SYS_TIME:\n        text: \"\\n#include <time.h>\\nint main() { struct tm t; return 0; }\\n\"\n        invert: true\n\ncheck_c_source_runs:\n    DOUBLE_IS_ARM_MIXED_ENDIAN_IEEE754: \"#include <string.h>\\nint main() {\\n    double x = 9006104071832581.0;\\n    if (memcmp(&x, \\\"\\\\x01\\\\xff\\\\x3f\\\\x43\\\\x05\\\\x04\\\\x03\\\\x02\\\", 8) == 0)\\n        return 0;\\n    else\\n        return 1;\\n}\\n\"\n    DOUBLE_IS_LITTLE_ENDIAN_IEEE754: \"#include <string.h>\\nint main() {\\n    double x = 9006104071832581.0;\\n    if (memcmp(&x, \\\"\\\\x05\\\\x04\\\\x03\\\\x02\\\\x01\\\\xff\\\\x3f\\\\x43\\\", 8) == 0)\\n        return 0;\\n    else\\n        return 1;\\n}\\n\"\n    X87_DOUBLE_ROUNDING:\n        text: \"#include <stdlib.h>\\n#include <math.h>\\nint main() {\\n    volatile double x, y, z;\\n    \/* 1.\/(1-2**-53) -> 1+2**-52 (correct), 1.0 (double rounding) *\/\\n    x = 0.99999999999999989; \/* 1-2**-53 *\/\\n    y = 1.\/x;\\n    if (y != 1.)\\n        exit(0);\\n    \/* 1e16+2.99999 -> 1e16+2. (correct), 1e16+4. (double rounding) *\/\\n    x = 1e16;\\n    y = 2.99999;\\n    z = x + y;\\n    if (z != 1e16+4.)\\n        exit(0);\\n    \/* both tests show evidence of double rounding *\/\\n    exit(1);\\n}\\n\"\n        invert: true\n    HAVE_BROKEN_MBSTOWCS:\n        invert: true\n        text: \"#include <stdio.h>\\n#include <stdlib.h>\\nint main() {\\n    size_t len = -1;\\n    const char *str = \\\"text\\\";\\n    len = mbstowcs(NULL, str, 0);\\n    return (len != 4);\\n}\\n\"\n    DOUBLE_IS_BIG_ENDIAN_IEEE754: \"#include <string.h>\\nint main() {\\n    double x = 9006104071832581.0;\\n    if (memcmp(&x, \\\"\\\\x43\\\\x3f\\\\xff\\\\x01\\\\x02\\\\x03\\\\x04\\\\x05\\\", 8) == 0)\\n        return 0;\\n    else\\n        return 1;\\n}\\n\"\n    POSIX_SEMAPHORES_NOT_ENABLED:\n        text: \"#include <unistd.h>\\n#include <fcntl.h>\\n#include <stdio.h>\\n#include <semaphore.h>\\n#include <sys\/stat.h>\\n\\nint main(void) {\\n  sem_t *a = sem_open(\\\"\/autoconf\\\", O_CREAT, S_IRUSR|S_IWUSR, 0);\\n  if (a == SEM_FAILED) {\\n    perror(\\\"sem_open\\\");\\n    return 1;\\n  }\\n  sem_close(a);\\n  sem_unlink(\\\"\/autoconf\\\");\\n  return 0;\\n}\\n\"\n        invert: true\n    HAVE_COMPUTED_GOTOS: \"int main(int argc, char **argv)\\n{\\n    static void *targets[1] = { &&LABEL1 };\\n    goto LABEL2;\\nLABEL1:\\n    return 0;\\nLABEL2:\\n    goto *targets[0];\\n    return 1;\\n}\\n\"\n    HAVE_BROKEN_POLL: \"#include <poll.h>\\n\\nint main()\\n{\\n    struct pollfd poll_struct = { 42, POLLIN|POLLPRI|POLLOUT, 0 };\\n    int poll_test;\\n\\n    close (42);\\n\\n    poll_test = poll(&poll_struct, 1, 0);\\n    if (poll_test < 0)\\n        return 0;\\n    else if (poll_test == 0 && poll_struct.revents != POLLNVAL)\\n        return 0;\\n    else\\n        return 1;\\n}\\n\"\n    SIGNED_RIGHT_SHIFT_ZERO_FILLS:\n        text: \"int main()\\n{\\n    exit(((-1)>>3 == -1) ? 0 : 1);\\n}\\n\"\n        invert: true\n    HAVE_BROKEN_NICE: \"int main()\\n{\\n    int val1 = nice(1);\\n    if (val1 != -1 && val1 == nice(2))\\n        exit(0);\\n    exit(1);\\n}\\n\"\n    HAVE_ALIGNED_REQUIRED: \"int main()\\n{\\n    char s[16];\\n    int i, *p1, *p2;\\n    for (i=0; i < 16; i++)\\n        s[i] = i;\\n    p1 = (int*)(s+1);\\n    p2 = (int*)(s+2);\\n    if (*p1 == *p2)\\n        return 1;\\n    return 0;\\n}\\n\"\n    HAVE_BROKEN_SEM_GETVALUE:\n        invert: true\n        text: \"#include <unistd.h>\\n#include <fcntl.h>\\n#include <stdio.h>\\n#include <semaphore.h>\\n#include <sys\/stat.h>\\n\\nint main(void){\\n  sem_t *a = sem_open(\\\"\/autocftw\\\", O_CREAT, S_IRUSR|S_IWUSR, 0);\\n  int count;\\n  int res;\\n  if(a==SEM_FAILED){\\n    perror(\\\"sem_open\\\");\\n    return 1;\\n\\n  }\\n  res = sem_getvalue(a, &count);\\n  sem_close(a);\\n  sem_unlink(\\\"\/autocftw\\\");\\n  return res==-1 ? 1 : 0;\\n}\\n\"\n    HAVE_WORKING_TZSET: \"#include <stdlib.h>\\n#include <time.h>\\n#include <string.h>\\n\\n#if HAVE_TZNAME\\nextern char *tzname[];\\n#endif\\n\\nint main()\\n{\\n    \/* Note that we need to ensure that not only does tzset(3)\\n       do 'something' with localtime, but it works as documented\\n       in the library reference and as expected by the test suite.\\n       This includes making sure that tzname is set properly if\\n       tm->tm_zone does not exist since it is the alternative way\\n       of getting timezone info.\\n\\n       Red Hat 6.2 doesn't understand the southern hemisphere\\n       after New Year's Day.\\n    *\/\\n\\n    time_t groundhogday = 1044144000; \/* GMT-based *\/\\n    time_t midyear = groundhogday + (365 * 24 * 3600 \/ 2);\\n\\n    putenv(\\\"TZ=UTC+0\\\");\\n    tzset();\\n    if (localtime(&groundhogday)->tm_hour != 0)\\n        exit(1);\\n#if HAVE_TZNAME\\n    \/* For UTC, tzname[1] is sometimes \\\"\\\", sometimes \\\"   \\\" *\/\\n    if (strcmp(tzname[0], \\\"UTC\\\") ||\\n        (tzname[1][0] != 0 && tzname[1][0] != ' '))\\n        exit(1);\\n#endif\\n\\n    putenv(\\\"TZ=EST+5EDT,M4.1.0,M10.5.0\\\");\\n    tzset();\\n    if (localtime(&groundhogday)->tm_hour != 19)\\n        exit(1);\\n#if HAVE_TZNAME\\n    if (strcmp(tzname[0], \\\"EST\\\") || strcmp(tzname[1], \\\"EDT\\\"))\\n        exit(1);\\n#endif\\n\\n    putenv(\\\"TZ=AEST-10AEDT-11,M10.5.0,M3.5.0\\\");\\n    tzset();\\n    if (localtime(&groundhogday)->tm_hour != 11)\\n        exit(1);\\n#if HAVE_TZNAME\\n    if (strcmp(tzname[0], \\\"AEST\\\") || strcmp(tzname[1], \\\"AEDT\\\"))\\n        exit(1);\\n#endif\\n\\n#if HAVE_STRUCT_TM_TM_ZONE\\n    if (strcmp(localtime(&groundhogday)->tm_zone, \\\"AEDT\\\"))\\n        exit(1);\\n    if (strcmp(localtime(&midyear)->tm_zone, \\\"AEST\\\"))\\n        exit(1);\\n#endif\\n\\n    exit(0);\\n}\\n\"\n    PTHREAD_SYSTEM_SCHED_SUPPORTED: \"#include <stdio.h>\\n#include <pthread.h>\\nvoid *foo(void *parm) {\\nreturn NULL;\\n}\\nmain() {\\npthread_attr_t attr;\\npthread_t id;\\nif (pthread_attr_init(&attr)) exit(-1);\\nif (pthread_attr_setscope(&attr, PTHREAD_SCOPE_SYSTEM)) exit(-1);\\nif (pthread_create(&id, &attr, foo, NULL)) exit(-1);\\nexit(0);\\n\"\n    TANH_PRESERVES_ZERO_SIGN: \"#include <math.h>\\n#include <stdlib.h>\\nint main() {\\n    \/* return 0 if either negative zeros don't exist\\n       on this platform or if negative zeros exist\\n       and tanh(-0.) == -0. *\/\\n  if (atan2(0., -1.) == atan2(-0., -1.) ||\\n      atan2(tanh(-0.), -1.) == atan2(-0., -1.)) exit(0);\\n  else exit(1);\\n}\\n\"\n\nchecks:\n    HAVE_DEV_PTC: \"if (EXISTS \\\"\/dev\/ptc\\\")\\n    set(HAVE_DEV_PTC 1)\\nendif()\\n\"\n    HAVE_STRUCT_STAT_ST_BLOCKS: \"CHECK_STRUCT_HAS_MEMBER(\\\"struct stat\\\" st_blocks sys\/stat.h HAVE_STRUCT_STAT_ST_BLOCKS)\\n\"\n    HAVE_DEV_PTMX: \"if (EXISTS \\\"\/dev\/ptmx\\\")\\n    set(HAVE_DEV_PTMX 1)\\nendif()\\n\"\n    HAVE_STRUCT_STAT_ST_GEN: \"CHECK_STRUCT_HAS_MEMBER(\\\"struct stat\\\" st_gen sys\/stat.h HAVE_STRUCT_STAT_ST_GEN)\\n\"\n    HAVE_STRUCT_STAT_ST_FLAGS: \"CHECK_STRUCT_HAS_MEMBER(\\\"struct stat\\\" st_flags sys\/stat.h HAVE_STRUCT_STAT_ST_FLAGS)\\n\"\n    HAVE_STRUCT_STAT_ST_BLKSIZE: \"CHECK_STRUCT_HAS_MEMBER(\\\"struct stat\\\" st_blksize sys\/stat.h HAVE_STRUCT_STAT_ST_BLKSIZE)\\n\"\n    HAVE_STRUCT_STAT_ST_BIRTHTIME: \"CHECK_STRUCT_HAS_MEMBER(\\\"struct stat\\\" st_birthtime sys\/stat.h HAVE_STRUCT_STAT_ST_BIRTHTIME)\\n\"\n    HAVE_DLOPEN: \"CHECK_LIBRARY_EXISTS(dl dlopen \\\"\\\" HAVE_DLOPEN)\\n\"\n    HAVE_RAND_EGD: \"CHECK_LIBRARY_EXISTS(crypto RAND_egd \\\"\\\" HAVE_RAND_EGD)\\n\"\n    HAVE_TM_ZONE: \"CHECK_STRUCT_HAS_MEMBER(\\\"struct tm\\\" tm_zone sys\/stat.h HAVE_TM_ZONE)\\n\"\n    HAVE_TZNAME: \"CHECK_STRUCT_HAS_MEMBER(\\\"struct tm\\\" tm_zone sys\/stat.h HAVE_STRUCT_TM_TM_ZONE)\\nif (NOT HAVE_STRUCT_TM_TM_ZONE)\\n    check_symbol_exists(tzname \\\"time.h\\\" HAVE_TZNAME)\\nendif()\\n\"\n    HAVE_STRUCT_TM_TM_ZONE: \"CHECK_STRUCT_HAS_MEMBER(\\\"struct tm\\\" tm_zone sys\/stat.h HAVE_STRUCT_TM_TM_ZONE)\\n\"\n    HAVE_STRUCT_STAT_ST_RDEV: \"CHECK_STRUCT_HAS_MEMBER(\\\"struct stat\\\" st_rdev sys\/stat.h HAVE_STRUCT_STAT_ST_RDEV)\\n\"\n\n",
    "source": {
        "remote": {
            "url": "https:\/\/www.python.org\/ftp\/python\/3.6.0\/Python-3.6.0.tar.xz"
        }
    },
    "version": "3.6.0",
    "created": "2016-12-23 17:57:48.045958",
    "hash": "87800d50817eb1644b8e53661a71978cca14c8bd3e0add65e94d791f006623bb"
}
