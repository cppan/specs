{
    "project": "pvt.cppan.demo.sqlcipher.sqlcipher",
    "cppan": "source:\n    git: https:\/\/github.com\/sqlcipher\/sqlcipher\n    tag: v{v}\n\nversion: 3.4.2\n\ntype: library\n\napi_name:\n    -   SQLITE_API\n\nfiles:\n    -   VERSION\n    -   ext\/async\/.*\n    -   ext\/fts3\/.*\n    -   ext\/fts5\/.*\n    -   ext\/rtree\/.*\n    -   ext\/session\/.*\n    -   ext\/userauth\/.*\n    -   manifest.*\n    -   src\/.*\n    -   tool\/.*\n\nexclude_from_build:\n    -   .*rc$\n    -   ext\/session\/.*test.*\n    -   ext\/session\/changeset.*\n    -   src\/shell.c\n    -   src\/tcl.*\n    -   src\/test.*\n    -   tool\/.*\n\ninclude_directories:\n    public:\n        -   src\n        -   ext\/fts3\n        -   ext\/rtree\n        -   ext\/fts5\n\noptions:\n    any:\n        definitions:\n            private:\n                -   BUILD_sqlite\n                -   SQLCIPHER_CRYPTO_OPENSSL\n                -   SQLITE_CORE\n                -   SQLITE_ENABLE_ASYNCIO\n                -   SQLITE_ENABLE_FTS3\n                -   SQLITE_ENABLE_FTS5\n                -   SQLITE_ENABLE_RTREE\n                -   SQLITE_ENABLE_SESSION\n                -   SQLITE_HAS_CODEC\n                -   SQLITE_THREADSAFE\n                -   SQLITE_USER_AUTHENTICATION\n        link_libraries:\n            unix:\n                public:\n                    -   dl\n\ndependencies:\n    public:\n        pvt.cppan.demo.sqlcipher.mkkeywordhash:\n            version: \"*\"\n            reference: mkkeywordhash\n        pvt.cppan.demo.tcl.lib:\n            version: 8\n            reference: tcl\n        pvt.cppan.demo.tcl.sh:\n            version: 8\n            reference: tclsh\n        pvt.cppan.demo.openssl.crypto:\n            version: 1\n        pvt.cppan.demo.sqlcipher.lemon:\n            version: \"*\"\n            reference: lemon\n\npost_sources: |\n    add_custom_command(OUTPUT ${BDIR_PRIVATE}\/parse2.y\n        COMMAND ${CMAKE_COMMAND} -E copy_if_different ${SDIR}\/src\/parse.y ${BDIR_PRIVATE}\/parse2.y\n        DEPENDS ${SDIR}\/src\/parse.y\n    )\n    add_custom_command(OUTPUT ${BDIR_PRIVATE}\/parse.c ${BDIR_PRIVATE}\/parse2.h\n        COMMAND ${lemon} -T${lemon_SDIR}\/tool\/lempar.c ${BDIR_PRIVATE}\/parse2.y\n        COMMAND ${CMAKE_COMMAND} -E copy_if_different ${BDIR_PRIVATE}\/parse2.c ${BDIR_PRIVATE}\/parse.c\n        DEPENDS ${BDIR_PRIVATE}\/parse2.y\n        WORKING_DIRECTORY ${BDIR_PRIVATE}\n    )\n    set(src ${src} ${BDIR_PRIVATE}\/parse.c)\n    \n    add_custom_command(OUTPUT ${BDIR_PRIVATE}\/parse.h\n        COMMAND ${CMAKE_COMMAND} -E env TCL_LIBRARY=${tcl_DIR}\/library\n                $<TARGET_FILE:${tclsh}>\n                ${SDIR}\/tool\/addopcodes.tcl ${BDIR_PRIVATE}\/parse2.h > ${BDIR_PRIVATE}\/parse.h\n        DEPENDS ${BDIR_PRIVATE}\/parse2.h\n    )\n    \n    file(TO_NATIVE_PATH ${BDIR_PRIVATE}\/parse.h p)\n    file(TO_NATIVE_PATH ${SDIR}\/src\/vdbe.c v)\n    \n    set(cat cat)\n    if (WIN32)\n        set(cat type)\n    endif()\n    \n    add_custom_command(OUTPUT ${BDIR_PRIVATE}\/opcodes.h\n        COMMAND\n            ${cat} ${p} ${v} |\n            \"\\\"${CMAKE_COMMAND}\\\"\" -E env TCL_LIBRARY=${tcl_DIR}\/library\n                \"\\\"$<TARGET_FILE:${tclsh}>\\\"\" ${SDIR}\/tool\/mkopcodeh.tcl > ${BDIR_PRIVATE}\/opcodes.h\n        DEPENDS ${BDIR_PRIVATE}\/parse.h ${SDIR}\/src\/vdbe.c\n        WORKING_DIRECTORY ${BDIR_PRIVATE}\n    )\n    add_custom_command(OUTPUT ${BDIR_PRIVATE}\/opcodes.c\n        COMMAND ${CMAKE_COMMAND} -E env TCL_LIBRARY=${tcl_DIR}\/library\n                $<TARGET_FILE:${tclsh}>\n                ${SDIR}\/tool\/mkopcodec.tcl ${BDIR_PRIVATE}\/opcodes.h > ${BDIR_PRIVATE}\/opcodes.c\n        DEPENDS ${BDIR_PRIVATE}\/opcodes.h\n        WORKING_DIRECTORY ${BDIR_PRIVATE}\n    )\n    set(src ${src} ${BDIR_PRIVATE}\/opcodes.c ${BDIR_PRIVATE}\/opcodes.h)\n    \n    add_custom_command(OUTPUT ${BDIR_PRIVATE}\/keywordhash.h\n        COMMAND ${mkkeywordhash} > ${BDIR_PRIVATE}\/keywordhash.h\n        WORKING_DIRECTORY ${BDIR_PRIVATE}\n    )\n    set(src ${src} ${BDIR_PRIVATE}\/keywordhash.h)\n    \n    add_custom_command(OUTPUT ${BDIR}\/sqlite3.h\n        COMMAND ${CMAKE_COMMAND} -E env TCL_LIBRARY=${tcl_DIR}\/library\n                $<TARGET_FILE:${tclsh}>\n                ${SDIR}\/tool\/mksqlite3h.tcl ${SDIR} > ${BDIR}\/sqlite3.h\n        DEPENDS ${SDIR}\/src\/sqlite.h.in\n    )\n    set(src ${src} ${BDIR}\/sqlite3.h)\n    \n    #\n    add_custom_command(OUTPUT ${BDIR_PRIVATE}\/fts5parse2.y\n        COMMAND ${CMAKE_COMMAND} -E copy_if_different ${SDIR}\/ext\/fts5\/fts5parse.y ${BDIR_PRIVATE}\/fts5parse2.y\n        DEPENDS ${SDIR}\/src\/parse.y\n    )\n    add_custom_command(OUTPUT ${BDIR_PRIVATE}\/fts5parse.c ${BDIR_PRIVATE}\/fts5parse.h\n        COMMAND ${lemon} -T${lemon_SDIR}\/tool\/lempar.c ${BDIR_PRIVATE}\/fts5parse2.y\n        COMMAND ${CMAKE_COMMAND} -E copy_if_different ${BDIR_PRIVATE}\/fts5parse2.c ${BDIR_PRIVATE}\/fts5parse.c\n        COMMAND ${CMAKE_COMMAND} -E copy_if_different ${BDIR_PRIVATE}\/fts5parse2.h ${BDIR_PRIVATE}\/fts5parse.h\n        DEPENDS ${BDIR_PRIVATE}\/fts5parse2.y\n        WORKING_DIRECTORY ${BDIR_PRIVATE}\n    )\n    set(src ${src} ${BDIR_PRIVATE}\/fts5parse.c ${BDIR_PRIVATE}\/fts5parse.h)\n\npost_target: |\n    target_compile_options(${this} PRIVATE $<$<CONFIG:Debug>:-DSQLITE_DEBUG=1>)\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/sqlcipher\/sqlcipher",
            "tag": "v{v}"
        }
    },
    "version": "3.4.2",
    "hash": "674d604cd87e6d9971c71fd9c6acc1c30d70f21295a4fda6f637fa5876f1174d",
    "created": "2018-07-23 15:49:24.204071"
}
