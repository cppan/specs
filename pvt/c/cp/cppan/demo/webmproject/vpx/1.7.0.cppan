{
    "project": "pvt.cppan.demo.webmproject.vpx",
    "cppan": "source:\n    git: https:\/\/github.com\/webmproject\/libvpx\n    tag: v{v}\n\nversion: 1.7.0\n\ntype: library\n\nstatic_only: true\n\nfiles:\n    -   third_party\/x86inc\/x86inc.asm\n    -   vp8\/.*\n    -   vp9\/.*\n    -   vpx\/.*\n    -   vpx_.*\n\nexclude_from_build:\n    -   .*\/arm\/.*\n    -   .*\/mips\/.*\n    -   .*\/ppc\/.*\n    -   error_concealment.c\n    -   highbd_.*\n    -   mr_dissim.c\n    -   vp9_denoiser.c\n    -   vp9_mfqe.c\n    -   vpx_ports.*\n\noptions:\n    shared:\n        definitions:\n            public:\n                -   CONFIG_SHARED\n    static:\n        definitions:\n            public:\n                -   CONFIG_STATIC\n\ndependencies:\n    public:\n        pvt.cppan.demo.yasm.yasm:\n            version: master\n\npost_sources: |\n    set(ARCH_X86 0)\n    set(ARCH_X86_64 0)\n    if (${CMAKE_SIZEOF_VOID_P} EQUAL 4)\n        set(ARCH_X86 1)\n        set(asm win32)\n    else()\n        set(ARCH_X86_64 1)\n        set(asm win64)\n    endif()\n    \n    set(CONFIG_GCC 0)\n    set(CONFIG_MSVS 0)\n    set(CONFIG_BIG_ENDIAN ${WORDS_BIGENDIAN})\n    \n    if (GNU)\n        set(CONFIG_GCC ${GNU})\n    endif()\n    \n    if (MSVC)\n        set(CONFIG_MSVS ${MSVC})\n    endif()\n    \n    file_write_once(${BDIR}\/vpx_config.h.in \"\n        #pragma once\n    \n        #define INLINE inline\n        #define RESTRICT\n    \n        #cmakedefine01 ARCH_X86\n        #cmakedefine01 ARCH_X86_64\n    \n        #define ARCH_ARM 0\n        #define ARCH_MIPS 0\n        #define ARCH_PPC 0\n        #define HAVE_NEON 0\n        #define HAVE_NEON_ASM 0\n        #define HAVE_MIPS32 0\n        #define HAVE_DSPR2 0\n        #define HAVE_MSA 0\n        #define HAVE_MIPS64 0\n        #define HAVE_MMX 1\n        #define HAVE_SSE 1\n        #define HAVE_SSE2 1\n        #define HAVE_SSE3 1\n        #define HAVE_SSSE3 1\n        #define HAVE_SSE4_1 1\n        #define HAVE_AVX 0\n        #define HAVE_AVX2 0\n        #define HAVE_AVX512 0\n        #define HAVE_VSX 0\n        #define HAVE_MMI 0\n        #define HAVE_VPX_PORTS 1\n    \n        #cmakedefine01 CONFIG_GCC\n        #cmakedefine01 CONFIG_MSVS\n        #cmakedefine01 CONFIG_BIG_ENDIAN\n    \n        #define CONFIG_DEPENDENCY_TRACKING 1\n        #define CONFIG_EXTERNAL_BUILD 0\n        #define CONFIG_INSTALL_DOCS 0\n        #define CONFIG_INSTALL_BINS 1\n        #define CONFIG_INSTALL_LIBS 1\n        #define CONFIG_INSTALL_SRCS 0\n        #define CONFIG_DEBUG 0\n        #define CONFIG_GPROF 0\n        #define CONFIG_GCOV 0\n        #define CONFIG_RVCT 0\n        #define CONFIG_PIC 0\n        #define CONFIG_CODEC_SRCS 0\n        #define CONFIG_DEBUG_LIBS 0\n        #define CONFIG_DEQUANT_TOKENS 0\n        #define CONFIG_DC_RECON 0\n        #define CONFIG_RUNTIME_CPU_DETECT 1\n        #define CONFIG_POSTPROC 1\n        #define CONFIG_VP9_POSTPROC 0\n        #define CONFIG_MULTITHREAD 1\n        #define CONFIG_INTERNAL_STATS 0\n        #define CONFIG_VP8_ENCODER 1\n        #define CONFIG_VP8_DECODER 1\n        #define CONFIG_VP9_ENCODER 1\n        #define CONFIG_VP9_DECODER 1\n        #define CONFIG_VP8 1\n        #define CONFIG_VP9 1\n        #define CONFIG_ENCODERS 1\n        #define CONFIG_DECODERS 1\n        #define CONFIG_STATIC_MSVCRT 0\n        #define CONFIG_SPATIAL_RESAMPLING 1\n        #define CONFIG_REALTIME_ONLY 0\n        #define CONFIG_ONTHEFLY_BITPACKING 0\n        #define CONFIG_ERROR_CONCEALMENT 0\n        #define CONFIG_SMALL 0\n        #define CONFIG_POSTPROC_VISUALIZER 0\n        #define CONFIG_OS_SUPPORT 1\n        #define CONFIG_UNIT_TESTS 1\n        #define CONFIG_WEBM_IO 1\n        #define CONFIG_LIBYUV 1\n        #define CONFIG_DECODE_PERF_TESTS 0\n        #define CONFIG_ENCODE_PERF_TESTS 0\n        #define CONFIG_MULTI_RES_ENCODING 0\n        #define CONFIG_TEMPORAL_DENOISING 1\n        #define CONFIG_VP9_TEMPORAL_DENOISING 0\n        #define CONFIG_CONSISTENT_RECODE 0\n        #define CONFIG_COEFFICIENT_RANGE_CHECKING 0\n        #define CONFIG_VP9_HIGHBITDEPTH 0\n        #define CONFIG_BETTER_HW_COMPATIBILITY 0\n        #define CONFIG_EXPERIMENTAL 0\n        #define CONFIG_SIZE_LIMIT 0\n        #define CONFIG_ALWAYS_ADJUST_BPM 0\n        #define CONFIG_FP_MB_STATS 0\n        #define CONFIG_EMULATE_HARDWARE 0\n    \")\n    configure_file(${BDIR}\/vpx_config.h.in ${BDIR}\/vpx_config.h)\n    \n    file_write_once(${BDIR}\/vpx_config.asm.in \"\n        ARCH_ARM equ 0\n        ARCH_MIPS equ 0\n        ARCH_X86 equ ${ARCH_X86}\n        ARCH_X86_64 equ ${ARCH_X86_64}\n        ARCH_PPC equ 0\n        HAVE_NEON equ 0\n        HAVE_NEON_ASM equ 0\n        HAVE_MIPS32 equ 0\n        HAVE_DSPR2 equ 0\n        HAVE_MSA equ 0\n        HAVE_MIPS64 equ 0\n        HAVE_MMX equ 1\n        HAVE_SSE equ 1\n        HAVE_SSE2 equ 1\n        HAVE_SSE3 equ 1\n        HAVE_SSSE3 equ 1\n        HAVE_SSE4_1 equ 1\n        HAVE_AVX equ 0\n        HAVE_AVX2 equ 0\n        HAVE_AVX512 equ 0\n        HAVE_VSX equ 0\n        HAVE_MMI equ 0\n        HAVE_VPX_PORTS equ 1\n        HAVE_PTHREAD_H equ ${HAVE_PTHREAD_H}\n        HAVE_UNISTD_H equ ${HAVE_UNISTD_H}\n        CONFIG_DEPENDENCY_TRACKING equ 1\n        CONFIG_EXTERNAL_BUILD equ 0\n        CONFIG_INSTALL_DOCS equ 0\n        CONFIG_INSTALL_BINS equ 1\n        CONFIG_INSTALL_LIBS equ 1\n        CONFIG_INSTALL_SRCS equ 0\n        CONFIG_DEBUG equ 0\n        CONFIG_GPROF equ 0\n        CONFIG_GCOV equ 0\n        CONFIG_RVCT equ 0\n        CONFIG_GCC equ ${CONFIG_GCC}\n        CONFIG_MSVS equ ${CONFIG_MSVS}\n        CONFIG_PIC equ 0\n        CONFIG_BIG_ENDIAN equ ${CONFIG_BIG_ENDIAN}\n        CONFIG_CODEC_SRCS equ 0\n        CONFIG_DEBUG_LIBS equ 0\n        CONFIG_DEQUANT_TOKENS equ 0\n        CONFIG_DC_RECON equ 0\n        CONFIG_RUNTIME_CPU_DETECT equ 1\n        CONFIG_POSTPROC equ 1\n        CONFIG_VP9_POSTPROC equ 0\n        CONFIG_MULTITHREAD equ 1\n        CONFIG_INTERNAL_STATS equ 0\n        CONFIG_VP8_ENCODER equ 1\n        CONFIG_VP8_DECODER equ 1\n        CONFIG_VP9_ENCODER equ 1\n        CONFIG_VP9_DECODER equ 1\n        CONFIG_VP8 equ 1\n        CONFIG_VP9 equ 1\n        CONFIG_ENCODERS equ 1\n        CONFIG_DECODERS equ 1\n        CONFIG_STATIC_MSVCRT equ 0\n        CONFIG_SPATIAL_RESAMPLING equ 1\n        CONFIG_REALTIME_ONLY equ 0\n        CONFIG_ONTHEFLY_BITPACKING equ 0\n        CONFIG_ERROR_CONCEALMENT equ 0\n        CONFIG_SMALL equ 0\n        CONFIG_POSTPROC_VISUALIZER equ 0\n        CONFIG_OS_SUPPORT equ 1\n        CONFIG_UNIT_TESTS equ 1\n        CONFIG_WEBM_IO equ 1\n        CONFIG_LIBYUV equ 1\n        CONFIG_DECODE_PERF_TESTS equ 0\n        CONFIG_ENCODE_PERF_TESTS equ 0\n        CONFIG_MULTI_RES_ENCODING equ 0\n        CONFIG_TEMPORAL_DENOISING equ 1\n        CONFIG_VP9_TEMPORAL_DENOISING equ 0\n        CONFIG_CONSISTENT_RECODE equ 0\n        CONFIG_COEFFICIENT_RANGE_CHECKING equ 0\n        CONFIG_VP9_HIGHBITDEPTH equ 0\n        CONFIG_BETTER_HW_COMPATIBILITY equ 0\n        CONFIG_EXPERIMENTAL equ 0\n        CONFIG_SIZE_LIMIT equ 0\n        CONFIG_ALWAYS_ADJUST_BPM equ 0\n        CONFIG_FP_MB_STATS equ 0\n        CONFIG_EMULATE_HARDWARE equ 0\n    \")\n    configure_file(${BDIR}\/vpx_config.asm.in ${BDIR}\/vpx_config.asm)\n    set(src ${src} ${BDIR}\/vpx_config.asm)\n    \n    \n    file(GLOB_RECURSE asm \"${SDIR}\/*.asm\")\n    list(FILTER asm EXCLUDE REGEX \".*arm.asm$\")\n    list(FILTER asm EXCLUDE REGEX \".*neon.asm$\")\n    list(FILTER asm EXCLUDE REGEX \".*neon_asm.asm$\")\n    if (${CMAKE_SIZEOF_VOID_P} EQUAL 4)\n        set(format win32)\n        list(FILTER asm EXCLUDE REGEX \".*x86_64.asm$\")\n    else()\n        set(format win64)\n    endif()\n    foreach(a ${asm})\n        get_filename_component(f \"${a}\" NAME)\n        set(o ${BDIR}\/${f}.obj)\n        add_custom_command(OUTPUT ${o}\n            COMMAND pvt.cppan.demo.yasm.yasm ${a} -f ${format} -I${SDIR} -I${BDIR} -o${o}\n            DEPENDS ${a}\n        )\n        set(src ${src} ${a} ${o})\n    endforeach()\n    \n    file_write_once(${BDIR}\/vpx_version.h \"\n        \/\/ This file is generated. Do not edit.\n        #define VERSION_MAJOR  ${PACKAGE_VERSION_MAJOR}\n        #define VERSION_MINOR  ${PACKAGE_VERSION_MINOR}\n        #define VERSION_PATCH  ${PACKAGE_VERSION_PATCH}\n        #define VERSION_EXTRA  \\\"\\\"\n        #define VERSION_PACKED ((VERSION_MAJOR<<16)|(VERSION_MINOR<<8)|(VERSION_PATCH))\n        #define VERSION_STRING_NOSP \\\"\\\"\n        #define VERSION_STRING      \\\"\\\"\n    \")\n    \n    file_write_once(${BDIR}\/vp8_rtcd.h \"\n        \/\/ This file is generated. Do not edit.\n        #ifndef VP8_RTCD_H_\n        #define VP8_RTCD_H_\n    \n        #ifdef RTCD_C\n        #define RTCD_EXTERN\n        #else\n        #define RTCD_EXTERN extern\n        #endif\n    \n        \/*\n         * VP8\n         *\/\n    \n        struct blockd;\n        struct macroblockd;\n        struct loop_filter_info;\n    \n        \/* Encoder forward decls *\/\n        struct block;\n        struct macroblock;\n        struct variance_vtable;\n        union int_mv;\n        struct yv12_buffer_config;\n    \n        #ifdef __cplusplus\n        extern \\\"C\\\" {\n        #endif\n    \n        void vp8_bilinear_predict16x16_c(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_bilinear_predict16x16_sse2(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_bilinear_predict16x16_ssse3(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        RTCD_EXTERN void (*vp8_bilinear_predict16x16)(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n    \n        void vp8_bilinear_predict4x4_c(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_bilinear_predict4x4_mmx(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        #define vp8_bilinear_predict4x4 vp8_bilinear_predict4x4_mmx\n    \n        void vp8_bilinear_predict8x4_c(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_bilinear_predict8x4_mmx(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        #define vp8_bilinear_predict8x4 vp8_bilinear_predict8x4_mmx\n    \n        void vp8_bilinear_predict8x8_c(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_bilinear_predict8x8_sse2(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_bilinear_predict8x8_ssse3(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        RTCD_EXTERN void (*vp8_bilinear_predict8x8)(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n    \n        void vp8_blend_b_c(unsigned char *y, unsigned char *u, unsigned char *v, int y1, int u1, int v1, int alpha, int stride);\n        #define vp8_blend_b vp8_blend_b_c\n    \n        void vp8_blend_mb_inner_c(unsigned char *y, unsigned char *u, unsigned char *v, int y1, int u1, int v1, int alpha, int stride);\n        #define vp8_blend_mb_inner vp8_blend_mb_inner_c\n    \n        void vp8_blend_mb_outer_c(unsigned char *y, unsigned char *u, unsigned char *v, int y1, int u1, int v1, int alpha, int stride);\n        #define vp8_blend_mb_outer vp8_blend_mb_outer_c\n    \n        int vp8_block_error_c(short *coeff, short *dqcoeff);\n        int vp8_block_error_sse2(short *coeff, short *dqcoeff);\n        #define vp8_block_error vp8_block_error_sse2\n    \n        void vp8_copy32xn_c(const unsigned char *src_ptr, int source_stride, unsigned char *dst_ptr, int dst_stride, int n);\n        void vp8_copy32xn_sse2(const unsigned char *src_ptr, int source_stride, unsigned char *dst_ptr, int dst_stride, int n);\n        void vp8_copy32xn_sse3(const unsigned char *src_ptr, int source_stride, unsigned char *dst_ptr, int dst_stride, int n);\n        RTCD_EXTERN void (*vp8_copy32xn)(const unsigned char *src_ptr, int source_stride, unsigned char *dst_ptr, int dst_stride, int n);\n    \n        void vp8_copy_mem16x16_c(unsigned char *src, int src_pitch, unsigned char *dst, int dst_pitch);\n        void vp8_copy_mem16x16_sse2(unsigned char *src, int src_pitch, unsigned char *dst, int dst_pitch);\n        #define vp8_copy_mem16x16 vp8_copy_mem16x16_sse2\n    \n        void vp8_copy_mem8x4_c(unsigned char *src, int src_pitch, unsigned char *dst, int dst_pitch);\n        void vp8_copy_mem8x4_mmx(unsigned char *src, int src_pitch, unsigned char *dst, int dst_pitch);\n        #define vp8_copy_mem8x4 vp8_copy_mem8x4_mmx\n    \n        void vp8_copy_mem8x8_c(unsigned char *src, int src_pitch, unsigned char *dst, int dst_pitch);\n        void vp8_copy_mem8x8_mmx(unsigned char *src, int src_pitch, unsigned char *dst, int dst_pitch);\n        #define vp8_copy_mem8x8 vp8_copy_mem8x8_mmx\n    \n        void vp8_dc_only_idct_add_c(short input, unsigned char *pred, int pred_stride, unsigned char *dst, int dst_stride);\n        void vp8_dc_only_idct_add_mmx(short input, unsigned char *pred, int pred_stride, unsigned char *dst, int dst_stride);\n        #define vp8_dc_only_idct_add vp8_dc_only_idct_add_mmx\n    \n        int vp8_denoiser_filter_c(unsigned char *mc_running_avg_y, int mc_avg_y_stride, unsigned char *running_avg_y, int avg_y_stride, unsigned char *sig, int sig_stride, unsigned int motion_magnitude, int increase_denoising);\n        int vp8_denoiser_filter_sse2(unsigned char *mc_running_avg_y, int mc_avg_y_stride, unsigned char *running_avg_y, int avg_y_stride, unsigned char *sig, int sig_stride, unsigned int motion_magnitude, int increase_denoising);\n        #define vp8_denoiser_filter vp8_denoiser_filter_sse2\n    \n        int vp8_denoiser_filter_uv_c(unsigned char *mc_running_avg, int mc_avg_stride, unsigned char *running_avg, int avg_stride, unsigned char *sig, int sig_stride, unsigned int motion_magnitude, int increase_denoising);\n        int vp8_denoiser_filter_uv_sse2(unsigned char *mc_running_avg, int mc_avg_stride, unsigned char *running_avg, int avg_stride, unsigned char *sig, int sig_stride, unsigned int motion_magnitude, int increase_denoising);\n        #define vp8_denoiser_filter_uv vp8_denoiser_filter_uv_sse2\n    \n        void vp8_dequant_idct_add_c(short *input, short *dq, unsigned char *output, int stride);\n        void vp8_dequant_idct_add_mmx(short *input, short *dq, unsigned char *output, int stride);\n        #define vp8_dequant_idct_add vp8_dequant_idct_add_mmx\n    \n        void vp8_dequant_idct_add_uv_block_c(short *q, short *dq, unsigned char *dst_u, unsigned char *dst_v, int stride, char *eobs);\n        void vp8_dequant_idct_add_uv_block_sse2(short *q, short *dq, unsigned char *dst_u, unsigned char *dst_v, int stride, char *eobs);\n        #define vp8_dequant_idct_add_uv_block vp8_dequant_idct_add_uv_block_sse2\n    \n        void vp8_dequant_idct_add_y_block_c(short *q, short *dq, unsigned char *dst, int stride, char *eobs);\n        void vp8_dequant_idct_add_y_block_sse2(short *q, short *dq, unsigned char *dst, int stride, char *eobs);\n        #define vp8_dequant_idct_add_y_block vp8_dequant_idct_add_y_block_sse2\n    \n        void vp8_dequantize_b_c(struct blockd*, short *dqc);\n        void vp8_dequantize_b_mmx(struct blockd*, short *dqc);\n        #define vp8_dequantize_b vp8_dequantize_b_mmx\n    \n        int vp8_diamond_search_sad_c(struct macroblock *x, struct block *b, struct blockd *d, union int_mv *ref_mv, union int_mv *best_mv, int search_param, int sad_per_bit, int *num00, struct variance_vtable *fn_ptr, int *mvcost[2], union int_mv *center_mv);\n        int vp8_diamond_search_sadx4(struct macroblock *x, struct block *b, struct blockd *d, union int_mv *ref_mv, union int_mv *best_mv, int search_param, int sad_per_bit, int *num00, struct variance_vtable *fn_ptr, int *mvcost[2], union int_mv *center_mv);\n        #define vp8_diamond_search_sad vp8_diamond_search_sadx4\n    \n        void vp8_fast_quantize_b_c(struct block *, struct blockd *);\n        void vp8_fast_quantize_b_sse2(struct block *, struct blockd *);\n        void vp8_fast_quantize_b_ssse3(struct block *, struct blockd *);\n        RTCD_EXTERN void (*vp8_fast_quantize_b)(struct block *, struct blockd *);\n    \n        void vp8_filter_by_weight16x16_c(unsigned char *src, int src_stride, unsigned char *dst, int dst_stride, int src_weight);\n        void vp8_filter_by_weight16x16_sse2(unsigned char *src, int src_stride, unsigned char *dst, int dst_stride, int src_weight);\n        #define vp8_filter_by_weight16x16 vp8_filter_by_weight16x16_sse2\n    \n        void vp8_filter_by_weight4x4_c(unsigned char *src, int src_stride, unsigned char *dst, int dst_stride, int src_weight);\n        #define vp8_filter_by_weight4x4 vp8_filter_by_weight4x4_c\n    \n        void vp8_filter_by_weight8x8_c(unsigned char *src, int src_stride, unsigned char *dst, int dst_stride, int src_weight);\n        void vp8_filter_by_weight8x8_sse2(unsigned char *src, int src_stride, unsigned char *dst, int dst_stride, int src_weight);\n        #define vp8_filter_by_weight8x8 vp8_filter_by_weight8x8_sse2\n    \n        int vp8_full_search_sad_c(struct macroblock *x, struct block *b, struct blockd *d, union int_mv *ref_mv, int sad_per_bit, int distance, struct variance_vtable *fn_ptr, int *mvcost[2], union int_mv *center_mv);\n        int vp8_full_search_sadx3(struct macroblock *x, struct block *b, struct blockd *d, union int_mv *ref_mv, int sad_per_bit, int distance, struct variance_vtable *fn_ptr, int *mvcost[2], union int_mv *center_mv);\n        int vp8_full_search_sadx8(struct macroblock *x, struct block *b, struct blockd *d, union int_mv *ref_mv, int sad_per_bit, int distance, struct variance_vtable *fn_ptr, int *mvcost[2], union int_mv *center_mv);\n        RTCD_EXTERN int (*vp8_full_search_sad)(struct macroblock *x, struct block *b, struct blockd *d, union int_mv *ref_mv, int sad_per_bit, int distance, struct variance_vtable *fn_ptr, int *mvcost[2], union int_mv *center_mv);\n    \n        void vp8_loop_filter_bh_c(unsigned char *y, unsigned char *u, unsigned char *v, int ystride, int uv_stride, struct loop_filter_info *lfi);\n        void vp8_loop_filter_bh_sse2(unsigned char *y, unsigned char *u, unsigned char *v, int ystride, int uv_stride, struct loop_filter_info *lfi);\n        #define vp8_loop_filter_bh vp8_loop_filter_bh_sse2\n    \n        void vp8_loop_filter_bv_c(unsigned char *y, unsigned char *u, unsigned char *v, int ystride, int uv_stride, struct loop_filter_info *lfi);\n        void vp8_loop_filter_bv_sse2(unsigned char *y, unsigned char *u, unsigned char *v, int ystride, int uv_stride, struct loop_filter_info *lfi);\n        #define vp8_loop_filter_bv vp8_loop_filter_bv_sse2\n    \n        void vp8_loop_filter_mbh_c(unsigned char *y, unsigned char *u, unsigned char *v, int ystride, int uv_stride, struct loop_filter_info *lfi);\n        void vp8_loop_filter_mbh_sse2(unsigned char *y, unsigned char *u, unsigned char *v, int ystride, int uv_stride, struct loop_filter_info *lfi);\n        #define vp8_loop_filter_mbh vp8_loop_filter_mbh_sse2\n    \n        void vp8_loop_filter_mbv_c(unsigned char *y, unsigned char *u, unsigned char *v, int ystride, int uv_stride, struct loop_filter_info *lfi);\n        void vp8_loop_filter_mbv_sse2(unsigned char *y, unsigned char *u, unsigned char *v, int ystride, int uv_stride, struct loop_filter_info *lfi);\n        #define vp8_loop_filter_mbv vp8_loop_filter_mbv_sse2\n    \n        void vp8_loop_filter_bhs_c(unsigned char *y, int ystride, const unsigned char *blimit);\n        void vp8_loop_filter_bhs_sse2(unsigned char *y, int ystride, const unsigned char *blimit);\n        #define vp8_loop_filter_simple_bh vp8_loop_filter_bhs_sse2\n    \n        void vp8_loop_filter_bvs_c(unsigned char *y, int ystride, const unsigned char *blimit);\n        void vp8_loop_filter_bvs_sse2(unsigned char *y, int ystride, const unsigned char *blimit);\n        #define vp8_loop_filter_simple_bv vp8_loop_filter_bvs_sse2\n    \n        void vp8_loop_filter_simple_horizontal_edge_c(unsigned char *y, int ystride, const unsigned char *blimit);\n        void vp8_loop_filter_simple_horizontal_edge_sse2(unsigned char *y, int ystride, const unsigned char *blimit);\n        #define vp8_loop_filter_simple_mbh vp8_loop_filter_simple_horizontal_edge_sse2\n    \n        void vp8_loop_filter_simple_vertical_edge_c(unsigned char *y, int ystride, const unsigned char *blimit);\n        void vp8_loop_filter_simple_vertical_edge_sse2(unsigned char *y, int ystride, const unsigned char *blimit);\n        #define vp8_loop_filter_simple_mbv vp8_loop_filter_simple_vertical_edge_sse2\n    \n        int vp8_mbblock_error_c(struct macroblock *mb, int dc);\n        int vp8_mbblock_error_sse2(struct macroblock *mb, int dc);\n        #define vp8_mbblock_error vp8_mbblock_error_sse2\n    \n        int vp8_mbuverror_c(struct macroblock *mb);\n        int vp8_mbuverror_sse2(struct macroblock *mb);\n        #define vp8_mbuverror vp8_mbuverror_sse2\n    \n        int vp8_refining_search_sad_c(struct macroblock *x, struct block *b, struct blockd *d, union int_mv *ref_mv, int sad_per_bit, int distance, struct variance_vtable *fn_ptr, int *mvcost[2], union int_mv *center_mv);\n        int vp8_refining_search_sadx4(struct macroblock *x, struct block *b, struct blockd *d, union int_mv *ref_mv, int sad_per_bit, int distance, struct variance_vtable *fn_ptr, int *mvcost[2], union int_mv *center_mv);\n        #define vp8_refining_search_sad vp8_refining_search_sadx4\n    \n        void vp8_regular_quantize_b_c(struct block *, struct blockd *);\n        void vp8_regular_quantize_b_sse2(struct block *, struct blockd *);\n        void vp8_regular_quantize_b_sse4_1(struct block *, struct blockd *);\n        RTCD_EXTERN void (*vp8_regular_quantize_b)(struct block *, struct blockd *);\n    \n        void vp8_short_fdct4x4_c(short *input, short *output, int pitch);\n        void vp8_short_fdct4x4_sse2(short *input, short *output, int pitch);\n        #define vp8_short_fdct4x4 vp8_short_fdct4x4_sse2\n    \n        void vp8_short_fdct8x4_c(short *input, short *output, int pitch);\n        void vp8_short_fdct8x4_sse2(short *input, short *output, int pitch);\n        #define vp8_short_fdct8x4 vp8_short_fdct8x4_sse2\n    \n        void vp8_short_idct4x4llm_c(short *input, unsigned char *pred, int pitch, unsigned char *dst, int dst_stride);\n        void vp8_short_idct4x4llm_mmx(short *input, unsigned char *pred, int pitch, unsigned char *dst, int dst_stride);\n        #define vp8_short_idct4x4llm vp8_short_idct4x4llm_mmx\n    \n        void vp8_short_inv_walsh4x4_c(short *input, short *output);\n        void vp8_short_inv_walsh4x4_sse2(short *input, short *output);\n        #define vp8_short_inv_walsh4x4 vp8_short_inv_walsh4x4_sse2\n    \n        void vp8_short_inv_walsh4x4_1_c(short *input, short *output);\n        #define vp8_short_inv_walsh4x4_1 vp8_short_inv_walsh4x4_1_c\n    \n        void vp8_short_walsh4x4_c(short *input, short *output, int pitch);\n        void vp8_short_walsh4x4_sse2(short *input, short *output, int pitch);\n        #define vp8_short_walsh4x4 vp8_short_walsh4x4_sse2\n    \n        void vp8_sixtap_predict16x16_c(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_sixtap_predict16x16_sse2(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_sixtap_predict16x16_ssse3(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        RTCD_EXTERN void (*vp8_sixtap_predict16x16)(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n    \n        void vp8_sixtap_predict4x4_c(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_sixtap_predict4x4_mmx(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_sixtap_predict4x4_ssse3(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        RTCD_EXTERN void (*vp8_sixtap_predict4x4)(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n    \n        void vp8_sixtap_predict8x4_c(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_sixtap_predict8x4_sse2(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_sixtap_predict8x4_ssse3(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        RTCD_EXTERN void (*vp8_sixtap_predict8x4)(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n    \n        void vp8_sixtap_predict8x8_c(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_sixtap_predict8x8_sse2(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        void vp8_sixtap_predict8x8_ssse3(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n        RTCD_EXTERN void (*vp8_sixtap_predict8x8)(unsigned char *src, int src_pitch, int xofst, int yofst, unsigned char *dst, int dst_pitch);\n    \n        void vp8_temporal_filter_apply_c(unsigned char *frame1, unsigned int stride, unsigned char *frame2, unsigned int block_size, int strength, int filter_weight, unsigned int *accumulator, unsigned short *count);\n        void vp8_temporal_filter_apply_sse2(unsigned char *frame1, unsigned int stride, unsigned char *frame2, unsigned int block_size, int strength, int filter_weight, unsigned int *accumulator, unsigned short *count);\n        #define vp8_temporal_filter_apply vp8_temporal_filter_apply_sse2\n    \n        void vp8_rtcd(void);\n    \n        #ifdef RTCD_C\n        #include \\\"vpx_ports\/x86.h\\\"\n        static void setup_rtcd_internal(void)\n        {\n            int flags = x86_simd_caps();\n    \n            (void)flags;\n    \n            vp8_bilinear_predict16x16 = vp8_bilinear_predict16x16_sse2;\n            if (flags & HAS_SSSE3) vp8_bilinear_predict16x16 = vp8_bilinear_predict16x16_ssse3;\n            vp8_bilinear_predict8x8 = vp8_bilinear_predict8x8_sse2;\n            if (flags & HAS_SSSE3) vp8_bilinear_predict8x8 = vp8_bilinear_predict8x8_ssse3;\n            vp8_copy32xn = vp8_copy32xn_sse2;\n            if (flags & HAS_SSE3) vp8_copy32xn = vp8_copy32xn_sse3;\n            vp8_fast_quantize_b = vp8_fast_quantize_b_sse2;\n            if (flags & HAS_SSSE3) vp8_fast_quantize_b = vp8_fast_quantize_b_ssse3;\n            vp8_full_search_sad = vp8_full_search_sad_c;\n            if (flags & HAS_SSE3) vp8_full_search_sad = vp8_full_search_sadx3;\n            if (flags & HAS_SSE4_1) vp8_full_search_sad = vp8_full_search_sadx8;\n            vp8_regular_quantize_b = vp8_regular_quantize_b_sse2;\n            if (flags & HAS_SSE4_1) vp8_regular_quantize_b = vp8_regular_quantize_b_sse4_1;\n            vp8_sixtap_predict16x16 = vp8_sixtap_predict16x16_sse2;\n            if (flags & HAS_SSSE3) vp8_sixtap_predict16x16 = vp8_sixtap_predict16x16_ssse3;\n            vp8_sixtap_predict4x4 = vp8_sixtap_predict4x4_mmx;\n            if (flags & HAS_SSSE3) vp8_sixtap_predict4x4 = vp8_sixtap_predict4x4_ssse3;\n            vp8_sixtap_predict8x4 = vp8_sixtap_predict8x4_sse2;\n            if (flags & HAS_SSSE3) vp8_sixtap_predict8x4 = vp8_sixtap_predict8x4_ssse3;\n            vp8_sixtap_predict8x8 = vp8_sixtap_predict8x8_sse2;\n            if (flags & HAS_SSSE3) vp8_sixtap_predict8x8 = vp8_sixtap_predict8x8_ssse3;\n        }\n        #endif\n    \n        #ifdef __cplusplus\n        }  \/\/ extern \\\"C\\\"\n        #endif\n    \n        #endif\n    \")\n    \n    file_write_once(${BDIR}\/vp9_rtcd.h \"\n        \/\/ This file is generated. Do not edit.\n        #ifndef VP9_RTCD_H_\n        #define VP9_RTCD_H_\n    \n        #ifdef RTCD_C\n        #define RTCD_EXTERN\n        #else\n        #define RTCD_EXTERN extern\n        #endif\n    \n        \/*\n         * VP9\n         *\/\n    \n        #include \\\"vpx\/vpx_integer.h\\\"\n        #include \\\"vp9\/common\/vp9_common.h\\\"\n        #include \\\"vp9\/common\/vp9_enums.h\\\"\n        #include \\\"vp9\/common\/vp9_filter.h\\\"\n    \n        struct macroblockd;\n    \n        \/* Encoder forward decls *\/\n        struct macroblock;\n        struct vp9_variance_vtable;\n        struct search_site_config;\n        struct mv;\n        union int_mv;\n        struct yv12_buffer_config;\n    \n        #ifdef __cplusplus\n        extern \\\"C\\\" {\n        #endif\n    \n        int64_t vp9_block_error_c(const tran_low_t *coeff, const tran_low_t *dqcoeff, intptr_t block_size, int64_t *ssz);\n        int64_t vp9_block_error_sse2(const tran_low_t *coeff, const tran_low_t *dqcoeff, intptr_t block_size, int64_t *ssz);\n        int64_t vp9_block_error_avx2(const tran_low_t *coeff, const tran_low_t *dqcoeff, intptr_t block_size, int64_t *ssz);\n        RTCD_EXTERN int64_t (*vp9_block_error)(const tran_low_t *coeff, const tran_low_t *dqcoeff, intptr_t block_size, int64_t *ssz);\n    \n        int64_t vp9_block_error_fp_c(const tran_low_t *coeff, const tran_low_t *dqcoeff, int block_size);\n        int64_t vp9_block_error_fp_sse2(const tran_low_t *coeff, const tran_low_t *dqcoeff, int block_size);\n        int64_t vp9_block_error_fp_avx2(const tran_low_t *coeff, const tran_low_t *dqcoeff, int block_size);\n        RTCD_EXTERN int64_t (*vp9_block_error_fp)(const tran_low_t *coeff, const tran_low_t *dqcoeff, int block_size);\n    \n        int vp9_diamond_search_sad_c(const struct macroblock *x, const struct search_site_config *cfg,  struct mv *ref_mv, struct mv *best_mv, int search_param, int sad_per_bit, int *num00, const struct vp9_variance_vtable *fn_ptr, const struct mv *center_mv);\n        int vp9_diamond_search_sad_avx(const struct macroblock *x, const struct search_site_config *cfg,  struct mv *ref_mv, struct mv *best_mv, int search_param, int sad_per_bit, int *num00, const struct vp9_variance_vtable *fn_ptr, const struct mv *center_mv);\n        RTCD_EXTERN int (*vp9_diamond_search_sad)(const struct macroblock *x, const struct search_site_config *cfg,  struct mv *ref_mv, struct mv *best_mv, int search_param, int sad_per_bit, int *num00, const struct vp9_variance_vtable *fn_ptr, const struct mv *center_mv);\n    \n        void vp9_fdct8x8_quant_c(const int16_t *input, int stride, tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        void vp9_fdct8x8_quant_sse2(const int16_t *input, int stride, tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        void vp9_fdct8x8_quant_ssse3(const int16_t *input, int stride, tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        RTCD_EXTERN void (*vp9_fdct8x8_quant)(const int16_t *input, int stride, tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n    \n        void vp9_fht16x16_c(const int16_t *input, tran_low_t *output, int stride, int tx_type);\n        void vp9_fht16x16_sse2(const int16_t *input, tran_low_t *output, int stride, int tx_type);\n        #define vp9_fht16x16 vp9_fht16x16_sse2\n    \n        void vp9_fht4x4_c(const int16_t *input, tran_low_t *output, int stride, int tx_type);\n        void vp9_fht4x4_sse2(const int16_t *input, tran_low_t *output, int stride, int tx_type);\n        #define vp9_fht4x4 vp9_fht4x4_sse2\n    \n        void vp9_fht8x8_c(const int16_t *input, tran_low_t *output, int stride, int tx_type);\n        void vp9_fht8x8_sse2(const int16_t *input, tran_low_t *output, int stride, int tx_type);\n        #define vp9_fht8x8 vp9_fht8x8_sse2\n    \n        void vp9_fwht4x4_c(const int16_t *input, tran_low_t *output, int stride);\n        void vp9_fwht4x4_sse2(const int16_t *input, tran_low_t *output, int stride);\n        #define vp9_fwht4x4 vp9_fwht4x4_sse2\n    \n        void vp9_iht16x16_256_add_c(const tran_low_t *input, uint8_t *output, int pitch, int tx_type);\n        void vp9_iht16x16_256_add_sse2(const tran_low_t *input, uint8_t *output, int pitch, int tx_type);\n        #define vp9_iht16x16_256_add vp9_iht16x16_256_add_sse2\n    \n        void vp9_iht4x4_16_add_c(const tran_low_t *input, uint8_t *dest, int stride, int tx_type);\n        void vp9_iht4x4_16_add_sse2(const tran_low_t *input, uint8_t *dest, int stride, int tx_type);\n        #define vp9_iht4x4_16_add vp9_iht4x4_16_add_sse2\n    \n        void vp9_iht8x8_64_add_c(const tran_low_t *input, uint8_t *dest, int stride, int tx_type);\n        void vp9_iht8x8_64_add_sse2(const tran_low_t *input, uint8_t *dest, int stride, int tx_type);\n        #define vp9_iht8x8_64_add vp9_iht8x8_64_add_sse2\n    \n        void vp9_quantize_fp_c(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        void vp9_quantize_fp_sse2(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        \/\/void vp9_quantize_fp_ssse3(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        \/\/void vp9_quantize_fp_avx2(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        RTCD_EXTERN void (*vp9_quantize_fp)(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n    \n        void vp9_quantize_fp_32x32_c(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        \/\/void vp9_quantize_fp_32x32_ssse3(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        RTCD_EXTERN void (*vp9_quantize_fp_32x32)(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *round_ptr, const int16_t *quant_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n    \n        void vp9_scale_and_extend_frame_c(const struct yv12_buffer_config *src, struct yv12_buffer_config *dst, INTERP_FILTER filter_type, int phase_scaler);\n        void vp9_scale_and_extend_frame_ssse3(const struct yv12_buffer_config *src, struct yv12_buffer_config *dst, INTERP_FILTER filter_type, int phase_scaler);\n        RTCD_EXTERN void (*vp9_scale_and_extend_frame)(const struct yv12_buffer_config *src, struct yv12_buffer_config *dst, INTERP_FILTER filter_type, int phase_scaler);\n    \n        void vp9_temporal_filter_apply_c(const uint8_t *frame1, unsigned int stride, const uint8_t *frame2, unsigned int block_width, unsigned int block_height, int strength, int filter_weight, uint32_t *accumulator, uint16_t *count);\n        void vp9_temporal_filter_apply_sse4_1(const uint8_t *frame1, unsigned int stride, const uint8_t *frame2, unsigned int block_width, unsigned int block_height, int strength, int filter_weight, uint32_t *accumulator, uint16_t *count);\n        RTCD_EXTERN void (*vp9_temporal_filter_apply)(const uint8_t *frame1, unsigned int stride, const uint8_t *frame2, unsigned int block_width, unsigned int block_height, int strength, int filter_weight, uint32_t *accumulator, uint16_t *count);\n    \n        void vp9_rtcd(void);\n    \n        #ifdef RTCD_C\n        #include \\\"vpx_ports\/x86.h\\\"\n        static void setup_rtcd_internal(void)\n        {\n            int flags = x86_simd_caps();\n    \n            (void)flags;\n    \n            vp9_block_error = vp9_block_error_sse2;\n            if (flags & HAS_AVX2) vp9_block_error = vp9_block_error_avx2;\n            vp9_block_error_fp = vp9_block_error_fp_sse2;\n            if (flags & HAS_AVX2) vp9_block_error_fp = vp9_block_error_fp_avx2;\n            vp9_diamond_search_sad = vp9_diamond_search_sad_c;\n            if (flags & HAS_AVX) vp9_diamond_search_sad = vp9_diamond_search_sad_avx;\n            vp9_fdct8x8_quant = vp9_fdct8x8_quant_sse2;\n            if (flags & HAS_SSSE3) vp9_fdct8x8_quant = vp9_fdct8x8_quant_ssse3;\n            vp9_quantize_fp = vp9_quantize_fp_sse2;\n            \/\/if (flags & HAS_SSSE3) vp9_quantize_fp = vp9_quantize_fp_ssse3;\n            \/\/if (flags & HAS_AVX2) vp9_quantize_fp = vp9_quantize_fp_avx2;\n            vp9_quantize_fp_32x32 = vp9_quantize_fp_32x32_c;\n            \/\/if (flags & HAS_SSSE3) vp9_quantize_fp_32x32 = vp9_quantize_fp_32x32_ssse3;\n            vp9_scale_and_extend_frame = vp9_scale_and_extend_frame_c;\n            if (flags & HAS_SSSE3) vp9_scale_and_extend_frame = vp9_scale_and_extend_frame_ssse3;\n            vp9_temporal_filter_apply = vp9_temporal_filter_apply_c;\n            if (flags & HAS_SSE4_1) vp9_temporal_filter_apply = vp9_temporal_filter_apply_sse4_1;\n        }\n        #endif\n    \n        #ifdef __cplusplus\n        }  \/\/ extern \\\"C\\\"\n        #endif\n    \n        #endif\n    \")\n    \n    file_write_once(${BDIR}\/vpx_scale_rtcd.h \"\n        \/\/ This file is generated. Do not edit.\n        #ifndef VPX_SCALE_RTCD_H_\n        #define VPX_SCALE_RTCD_H_\n    \n        #ifdef RTCD_C\n        #define RTCD_EXTERN\n        #else\n        #define RTCD_EXTERN extern\n        #endif\n    \n        struct yv12_buffer_config;\n    \n        #ifdef __cplusplus\n        extern \\\"C\\\" {\n        #endif\n    \n        void vp8_horizontal_line_2_1_scale_c(const unsigned char *source, unsigned int source_width, unsigned char *dest, unsigned int dest_width);\n        #define vp8_horizontal_line_2_1_scale vp8_horizontal_line_2_1_scale_c\n    \n        void vp8_horizontal_line_5_3_scale_c(const unsigned char *source, unsigned int source_width, unsigned char *dest, unsigned int dest_width);\n        #define vp8_horizontal_line_5_3_scale vp8_horizontal_line_5_3_scale_c\n    \n        void vp8_horizontal_line_5_4_scale_c(const unsigned char *source, unsigned int source_width, unsigned char *dest, unsigned int dest_width);\n        #define vp8_horizontal_line_5_4_scale vp8_horizontal_line_5_4_scale_c\n    \n        void vp8_vertical_band_2_1_scale_c(unsigned char *source, unsigned int src_pitch, unsigned char *dest, unsigned int dest_pitch, unsigned int dest_width);\n        #define vp8_vertical_band_2_1_scale vp8_vertical_band_2_1_scale_c\n    \n        void vp8_vertical_band_2_1_scale_i_c(unsigned char *source, unsigned int src_pitch, unsigned char *dest, unsigned int dest_pitch, unsigned int dest_width);\n        #define vp8_vertical_band_2_1_scale_i vp8_vertical_band_2_1_scale_i_c\n    \n        void vp8_vertical_band_5_3_scale_c(unsigned char *source, unsigned int src_pitch, unsigned char *dest, unsigned int dest_pitch, unsigned int dest_width);\n        #define vp8_vertical_band_5_3_scale vp8_vertical_band_5_3_scale_c\n    \n        void vp8_vertical_band_5_4_scale_c(unsigned char *source, unsigned int src_pitch, unsigned char *dest, unsigned int dest_pitch, unsigned int dest_width);\n        #define vp8_vertical_band_5_4_scale vp8_vertical_band_5_4_scale_c\n    \n        void vp8_yv12_copy_frame_c(const struct yv12_buffer_config *src_ybc, struct yv12_buffer_config *dst_ybc);\n        #define vp8_yv12_copy_frame vp8_yv12_copy_frame_c\n    \n        void vp8_yv12_extend_frame_borders_c(struct yv12_buffer_config *ybf);\n        #define vp8_yv12_extend_frame_borders vp8_yv12_extend_frame_borders_c\n    \n        void vpx_extend_frame_borders_c(struct yv12_buffer_config *ybf);\n        #define vpx_extend_frame_borders vpx_extend_frame_borders_c\n    \n        void vpx_extend_frame_inner_borders_c(struct yv12_buffer_config *ybf);\n        #define vpx_extend_frame_inner_borders vpx_extend_frame_inner_borders_c\n    \n        void vpx_yv12_copy_frame_c(const struct yv12_buffer_config *src_ybc, struct yv12_buffer_config *dst_ybc);\n        #define vpx_yv12_copy_frame vpx_yv12_copy_frame_c\n    \n        void vpx_yv12_copy_y_c(const struct yv12_buffer_config *src_ybc, struct yv12_buffer_config *dst_ybc);\n        #define vpx_yv12_copy_y vpx_yv12_copy_y_c\n    \n        void vpx_scale_rtcd(void);\n    \n        #ifdef RTCD_C\n        #include \\\"vpx_ports\/x86.h\\\"\n        static void setup_rtcd_internal(void)\n        {\n            int flags = x86_simd_caps();\n    \n            (void)flags;\n    \n        }\n        #endif\n    \n        #ifdef __cplusplus\n        }  \/\/ extern \\\"C\\\"\n        #endif\n    \n        #endif\n    \")\n    \n    file_write_once(${BDIR}\/vpx_dsp_rtcd.h \"\n        \/\/ This file is generated. Do not edit.\n        #ifndef VPX_DSP_RTCD_H_\n        #define VPX_DSP_RTCD_H_\n    \n        #ifdef RTCD_C\n        #define RTCD_EXTERN\n        #else\n        #define RTCD_EXTERN extern\n        #endif\n    \n        \/*\n         * DSP\n         *\/\n    \n        #include \\\"vpx\/vpx_integer.h\\\"\n        #include \\\"vpx_dsp\/vpx_dsp_common.h\\\"\n        #include \\\"vpx_dsp\/vpx_filter.h\\\"\n    \n    \n        #ifdef __cplusplus\n        extern \\\"C\\\" {\n        #endif\n    \n        unsigned int vpx_avg_4x4_c(const uint8_t *, int p);\n        unsigned int vpx_avg_4x4_sse2(const uint8_t *, int p);\n        #define vpx_avg_4x4 vpx_avg_4x4_sse2\n    \n        unsigned int vpx_avg_8x8_c(const uint8_t *, int p);\n        unsigned int vpx_avg_8x8_sse2(const uint8_t *, int p);\n        #define vpx_avg_8x8 vpx_avg_8x8_sse2\n    \n        void vpx_comp_avg_pred_c(uint8_t *comp_pred, const uint8_t *pred, int width, int height, const uint8_t *ref, int ref_stride);\n        void vpx_comp_avg_pred_sse2(uint8_t *comp_pred, const uint8_t *pred, int width, int height, const uint8_t *ref, int ref_stride);\n        #define vpx_comp_avg_pred vpx_comp_avg_pred_sse2\n    \n        void vpx_convolve8_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_sse2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_ssse3(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        \/\/void vpx_convolve8_avx2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        RTCD_EXTERN void (*vpx_convolve8)(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n    \n        void vpx_convolve8_avg_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_avg_sse2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_avg_ssse3(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        \/\/void vpx_convolve8_avg_avx2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        RTCD_EXTERN void (*vpx_convolve8_avg)(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n    \n        void vpx_convolve8_avg_horiz_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_avg_horiz_sse2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_avg_horiz_ssse3(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        \/\/void vpx_convolve8_avg_horiz_avx2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        RTCD_EXTERN void (*vpx_convolve8_avg_horiz)(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n    \n        void vpx_convolve8_avg_vert_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_avg_vert_sse2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_avg_vert_ssse3(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        \/\/void vpx_convolve8_avg_vert_avx2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        RTCD_EXTERN void (*vpx_convolve8_avg_vert)(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n    \n        void vpx_convolve8_horiz_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_horiz_sse2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_horiz_ssse3(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        \/\/void vpx_convolve8_horiz_avx2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        RTCD_EXTERN void (*vpx_convolve8_horiz)(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n    \n        void vpx_convolve8_vert_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_vert_sse2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve8_vert_ssse3(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        \/\/void vpx_convolve8_vert_avx2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        RTCD_EXTERN void (*vpx_convolve8_vert)(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n    \n        void vpx_convolve_avg_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve_avg_sse2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        #define vpx_convolve_avg vpx_convolve_avg_sse2\n    \n        void vpx_convolve_copy_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_convolve_copy_sse2(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        #define vpx_convolve_copy vpx_convolve_copy_sse2\n    \n        void vpx_d117_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d117_predictor_16x16 vpx_d117_predictor_16x16_c\n    \n        void vpx_d117_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d117_predictor_32x32 vpx_d117_predictor_32x32_c\n    \n        void vpx_d117_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d117_predictor_4x4 vpx_d117_predictor_4x4_c\n    \n        void vpx_d117_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d117_predictor_8x8 vpx_d117_predictor_8x8_c\n    \n        void vpx_d135_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d135_predictor_16x16 vpx_d135_predictor_16x16_c\n    \n        void vpx_d135_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d135_predictor_32x32 vpx_d135_predictor_32x32_c\n    \n        void vpx_d135_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d135_predictor_4x4 vpx_d135_predictor_4x4_c\n    \n        void vpx_d135_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d135_predictor_8x8 vpx_d135_predictor_8x8_c\n    \n        void vpx_d153_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d153_predictor_16x16_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d153_predictor_16x16)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d153_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d153_predictor_32x32_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d153_predictor_32x32)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d153_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d153_predictor_4x4_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d153_predictor_4x4)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d153_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d153_predictor_8x8_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d153_predictor_8x8)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d207_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d207_predictor_16x16_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d207_predictor_16x16)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d207_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d207_predictor_32x32_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d207_predictor_32x32)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d207_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d207_predictor_4x4_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d207_predictor_4x4 vpx_d207_predictor_4x4_sse2\n    \n        void vpx_d207_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d207_predictor_8x8_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d207_predictor_8x8)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d45_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d45_predictor_16x16_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d45_predictor_16x16)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d45_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d45_predictor_32x32_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d45_predictor_32x32)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d45_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d45_predictor_4x4_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d45_predictor_4x4 vpx_d45_predictor_4x4_sse2\n    \n        void vpx_d45_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d45_predictor_8x8_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d45_predictor_8x8 vpx_d45_predictor_8x8_sse2\n    \n        void vpx_d45e_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d45e_predictor_4x4 vpx_d45e_predictor_4x4_c\n    \n        void vpx_d63_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d63_predictor_16x16_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d63_predictor_16x16)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d63_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d63_predictor_32x32_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d63_predictor_32x32)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d63_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d63_predictor_4x4_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d63_predictor_4x4)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d63_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_d63_predictor_8x8_ssse3(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        RTCD_EXTERN void (*vpx_d63_predictor_8x8)(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n    \n        void vpx_d63e_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_d63e_predictor_4x4 vpx_d63e_predictor_4x4_c\n    \n        void vpx_dc_128_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_128_predictor_16x16_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_128_predictor_16x16 vpx_dc_128_predictor_16x16_sse2\n    \n        void vpx_dc_128_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_128_predictor_32x32_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_128_predictor_32x32 vpx_dc_128_predictor_32x32_sse2\n    \n        void vpx_dc_128_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_128_predictor_4x4_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_128_predictor_4x4 vpx_dc_128_predictor_4x4_sse2\n    \n        void vpx_dc_128_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_128_predictor_8x8_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_128_predictor_8x8 vpx_dc_128_predictor_8x8_sse2\n    \n        void vpx_dc_left_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_left_predictor_16x16_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_left_predictor_16x16 vpx_dc_left_predictor_16x16_sse2\n    \n        void vpx_dc_left_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_left_predictor_32x32_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_left_predictor_32x32 vpx_dc_left_predictor_32x32_sse2\n    \n        void vpx_dc_left_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_left_predictor_4x4_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_left_predictor_4x4 vpx_dc_left_predictor_4x4_sse2\n    \n        void vpx_dc_left_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_left_predictor_8x8_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_left_predictor_8x8 vpx_dc_left_predictor_8x8_sse2\n    \n        void vpx_dc_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_predictor_16x16_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_predictor_16x16 vpx_dc_predictor_16x16_sse2\n    \n        void vpx_dc_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_predictor_32x32_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_predictor_32x32 vpx_dc_predictor_32x32_sse2\n    \n        void vpx_dc_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_predictor_4x4_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_predictor_4x4 vpx_dc_predictor_4x4_sse2\n    \n        void vpx_dc_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_predictor_8x8_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_predictor_8x8 vpx_dc_predictor_8x8_sse2\n    \n        void vpx_dc_top_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_top_predictor_16x16_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_top_predictor_16x16 vpx_dc_top_predictor_16x16_sse2\n    \n        void vpx_dc_top_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_top_predictor_32x32_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_top_predictor_32x32 vpx_dc_top_predictor_32x32_sse2\n    \n        void vpx_dc_top_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_top_predictor_4x4_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_top_predictor_4x4 vpx_dc_top_predictor_4x4_sse2\n    \n        void vpx_dc_top_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_dc_top_predictor_8x8_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_dc_top_predictor_8x8 vpx_dc_top_predictor_8x8_sse2\n    \n        void vpx_fdct16x16_c(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct16x16_sse2(const int16_t *input, tran_low_t *output, int stride);\n        #define vpx_fdct16x16 vpx_fdct16x16_sse2\n    \n        void vpx_fdct16x16_1_c(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct16x16_1_sse2(const int16_t *input, tran_low_t *output, int stride);\n        #define vpx_fdct16x16_1 vpx_fdct16x16_1_sse2\n    \n        void vpx_fdct32x32_c(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct32x32_sse2(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct32x32_avx2(const int16_t *input, tran_low_t *output, int stride);\n        RTCD_EXTERN void (*vpx_fdct32x32)(const int16_t *input, tran_low_t *output, int stride);\n    \n        void vpx_fdct32x32_1_c(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct32x32_1_sse2(const int16_t *input, tran_low_t *output, int stride);\n        #define vpx_fdct32x32_1 vpx_fdct32x32_1_sse2\n    \n        void vpx_fdct32x32_rd_c(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct32x32_rd_sse2(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct32x32_rd_avx2(const int16_t *input, tran_low_t *output, int stride);\n        RTCD_EXTERN void (*vpx_fdct32x32_rd)(const int16_t *input, tran_low_t *output, int stride);\n    \n        void vpx_fdct4x4_c(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct4x4_sse2(const int16_t *input, tran_low_t *output, int stride);\n        #define vpx_fdct4x4 vpx_fdct4x4_sse2\n    \n        void vpx_fdct4x4_1_c(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct4x4_1_sse2(const int16_t *input, tran_low_t *output, int stride);\n        #define vpx_fdct4x4_1 vpx_fdct4x4_1_sse2\n    \n        void vpx_fdct8x8_c(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct8x8_sse2(const int16_t *input, tran_low_t *output, int stride);\n        \/\/void vpx_fdct8x8_ssse3(const int16_t *input, tran_low_t *output, int stride);\n        RTCD_EXTERN void (*vpx_fdct8x8)(const int16_t *input, tran_low_t *output, int stride);\n    \n        void vpx_fdct8x8_1_c(const int16_t *input, tran_low_t *output, int stride);\n        void vpx_fdct8x8_1_sse2(const int16_t *input, tran_low_t *output, int stride);\n        #define vpx_fdct8x8_1 vpx_fdct8x8_1_sse2\n    \n        void vpx_get16x16var_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse, int *sum);\n        void vpx_get16x16var_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse, int *sum);\n        void vpx_get16x16var_avx2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse, int *sum);\n        RTCD_EXTERN void (*vpx_get16x16var)(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse, int *sum);\n    \n        unsigned int vpx_get4x4sse_cs_c(const unsigned char *src_ptr, int source_stride, const unsigned char *ref_ptr, int  ref_stride);\n        #define vpx_get4x4sse_cs vpx_get4x4sse_cs_c\n    \n        void vpx_get8x8var_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse, int *sum);\n        void vpx_get8x8var_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse, int *sum);\n        #define vpx_get8x8var vpx_get8x8var_sse2\n    \n        unsigned int vpx_get_mb_ss_c(const int16_t *);\n        unsigned int vpx_get_mb_ss_sse2(const int16_t *);\n        #define vpx_get_mb_ss vpx_get_mb_ss_sse2\n    \n        void vpx_h_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_h_predictor_16x16_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_h_predictor_16x16 vpx_h_predictor_16x16_sse2\n    \n        void vpx_h_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_h_predictor_32x32_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_h_predictor_32x32 vpx_h_predictor_32x32_sse2\n    \n        void vpx_h_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_h_predictor_4x4_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_h_predictor_4x4 vpx_h_predictor_4x4_sse2\n    \n        void vpx_h_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_h_predictor_8x8_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_h_predictor_8x8 vpx_h_predictor_8x8_sse2\n    \n        void vpx_hadamard_16x16_c(const int16_t *src_diff, ptrdiff_t src_stride, int16_t *coeff);\n        void vpx_hadamard_16x16_sse2(const int16_t *src_diff, ptrdiff_t src_stride, int16_t *coeff);\n        void vpx_hadamard_16x16_avx2(const int16_t *src_diff, ptrdiff_t src_stride, int16_t *coeff);\n        RTCD_EXTERN void (*vpx_hadamard_16x16)(const int16_t *src_diff, ptrdiff_t src_stride, int16_t *coeff);\n    \n        void vpx_hadamard_8x8_c(const int16_t *src_diff, ptrdiff_t src_stride, int16_t *coeff);\n        void vpx_hadamard_8x8_sse2(const int16_t *src_diff, ptrdiff_t src_stride, int16_t *coeff);\n        \/\/void vpx_hadamard_8x8_ssse3(const int16_t *src_diff, ptrdiff_t src_stride, int16_t *coeff);\n        RTCD_EXTERN void (*vpx_hadamard_8x8)(const int16_t *src_diff, ptrdiff_t src_stride, int16_t *coeff);\n    \n        void vpx_he_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_he_predictor_4x4 vpx_he_predictor_4x4_c\n    \n        void vpx_idct16x16_10_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct16x16_10_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct16x16_10_add vpx_idct16x16_10_add_sse2\n    \n        void vpx_idct16x16_1_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct16x16_1_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct16x16_1_add vpx_idct16x16_1_add_sse2\n    \n        void vpx_idct16x16_256_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct16x16_256_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct16x16_256_add vpx_idct16x16_256_add_sse2\n    \n        void vpx_idct16x16_38_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct16x16_38_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct16x16_38_add vpx_idct16x16_38_add_sse2\n    \n        void vpx_idct32x32_1024_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct32x32_1024_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct32x32_1024_add vpx_idct32x32_1024_add_sse2\n    \n        void vpx_idct32x32_135_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct32x32_135_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct32x32_135_add_ssse3(const tran_low_t *input, uint8_t *dest, int stride);\n        RTCD_EXTERN void (*vpx_idct32x32_135_add)(const tran_low_t *input, uint8_t *dest, int stride);\n    \n        void vpx_idct32x32_1_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct32x32_1_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct32x32_1_add vpx_idct32x32_1_add_sse2\n    \n        void vpx_idct32x32_34_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct32x32_34_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct32x32_34_add_ssse3(const tran_low_t *input, uint8_t *dest, int stride);\n        RTCD_EXTERN void (*vpx_idct32x32_34_add)(const tran_low_t *input, uint8_t *dest, int stride);\n    \n        void vpx_idct4x4_16_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct4x4_16_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct4x4_16_add vpx_idct4x4_16_add_sse2\n    \n        void vpx_idct4x4_1_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct4x4_1_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct4x4_1_add vpx_idct4x4_1_add_sse2\n    \n        void vpx_idct8x8_12_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct8x8_12_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct8x8_12_add_ssse3(const tran_low_t *input, uint8_t *dest, int stride);\n        RTCD_EXTERN void (*vpx_idct8x8_12_add)(const tran_low_t *input, uint8_t *dest, int stride);\n    \n        void vpx_idct8x8_1_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct8x8_1_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct8x8_1_add vpx_idct8x8_1_add_sse2\n    \n        void vpx_idct8x8_64_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_idct8x8_64_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_idct8x8_64_add vpx_idct8x8_64_add_sse2\n    \n        int16_t vpx_int_pro_col_c(const uint8_t *ref, const int width);\n        int16_t vpx_int_pro_col_sse2(const uint8_t *ref, const int width);\n        #define vpx_int_pro_col vpx_int_pro_col_sse2\n    \n        void vpx_int_pro_row_c(int16_t *hbuf, const uint8_t *ref, const int ref_stride, const int height);\n        void vpx_int_pro_row_sse2(int16_t *hbuf, const uint8_t *ref, const int ref_stride, const int height);\n        #define vpx_int_pro_row vpx_int_pro_row_sse2\n    \n        void vpx_iwht4x4_16_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        void vpx_iwht4x4_16_add_sse2(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_iwht4x4_16_add vpx_iwht4x4_16_add_sse2\n    \n        void vpx_iwht4x4_1_add_c(const tran_low_t *input, uint8_t *dest, int stride);\n        #define vpx_iwht4x4_1_add vpx_iwht4x4_1_add_c\n    \n        void vpx_lpf_horizontal_16_c(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_horizontal_16_sse2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_horizontal_16_avx2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        RTCD_EXTERN void (*vpx_lpf_horizontal_16)(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n    \n        void vpx_lpf_horizontal_16_dual_c(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_horizontal_16_dual_sse2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_horizontal_16_dual_avx2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        RTCD_EXTERN void (*vpx_lpf_horizontal_16_dual)(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n    \n        void vpx_lpf_horizontal_4_c(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_horizontal_4_sse2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        #define vpx_lpf_horizontal_4 vpx_lpf_horizontal_4_sse2\n    \n        void vpx_lpf_horizontal_4_dual_c(uint8_t *s, int pitch, const uint8_t *blimit0, const uint8_t *limit0, const uint8_t *thresh0, const uint8_t *blimit1, const uint8_t *limit1, const uint8_t *thresh1);\n        void vpx_lpf_horizontal_4_dual_sse2(uint8_t *s, int pitch, const uint8_t *blimit0, const uint8_t *limit0, const uint8_t *thresh0, const uint8_t *blimit1, const uint8_t *limit1, const uint8_t *thresh1);\n        #define vpx_lpf_horizontal_4_dual vpx_lpf_horizontal_4_dual_sse2\n    \n        void vpx_lpf_horizontal_8_c(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_horizontal_8_sse2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        #define vpx_lpf_horizontal_8 vpx_lpf_horizontal_8_sse2\n    \n        void vpx_lpf_horizontal_8_dual_c(uint8_t *s, int pitch, const uint8_t *blimit0, const uint8_t *limit0, const uint8_t *thresh0, const uint8_t *blimit1, const uint8_t *limit1, const uint8_t *thresh1);\n        void vpx_lpf_horizontal_8_dual_sse2(uint8_t *s, int pitch, const uint8_t *blimit0, const uint8_t *limit0, const uint8_t *thresh0, const uint8_t *blimit1, const uint8_t *limit1, const uint8_t *thresh1);\n        #define vpx_lpf_horizontal_8_dual vpx_lpf_horizontal_8_dual_sse2\n    \n        void vpx_lpf_vertical_16_c(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_vertical_16_sse2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        #define vpx_lpf_vertical_16 vpx_lpf_vertical_16_sse2\n    \n        void vpx_lpf_vertical_16_dual_c(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_vertical_16_dual_sse2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        #define vpx_lpf_vertical_16_dual vpx_lpf_vertical_16_dual_sse2\n    \n        void vpx_lpf_vertical_4_c(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_vertical_4_sse2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        #define vpx_lpf_vertical_4 vpx_lpf_vertical_4_sse2\n    \n        void vpx_lpf_vertical_4_dual_c(uint8_t *s, int pitch, const uint8_t *blimit0, const uint8_t *limit0, const uint8_t *thresh0, const uint8_t *blimit1, const uint8_t *limit1, const uint8_t *thresh1);\n        void vpx_lpf_vertical_4_dual_sse2(uint8_t *s, int pitch, const uint8_t *blimit0, const uint8_t *limit0, const uint8_t *thresh0, const uint8_t *blimit1, const uint8_t *limit1, const uint8_t *thresh1);\n        #define vpx_lpf_vertical_4_dual vpx_lpf_vertical_4_dual_sse2\n    \n        void vpx_lpf_vertical_8_c(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        void vpx_lpf_vertical_8_sse2(uint8_t *s, int pitch, const uint8_t *blimit, const uint8_t *limit, const uint8_t *thresh);\n        #define vpx_lpf_vertical_8 vpx_lpf_vertical_8_sse2\n    \n        void vpx_lpf_vertical_8_dual_c(uint8_t *s, int pitch, const uint8_t *blimit0, const uint8_t *limit0, const uint8_t *thresh0, const uint8_t *blimit1, const uint8_t *limit1, const uint8_t *thresh1);\n        void vpx_lpf_vertical_8_dual_sse2(uint8_t *s, int pitch, const uint8_t *blimit0, const uint8_t *limit0, const uint8_t *thresh0, const uint8_t *blimit1, const uint8_t *limit1, const uint8_t *thresh1);\n        #define vpx_lpf_vertical_8_dual vpx_lpf_vertical_8_dual_sse2\n    \n        void vpx_mbpost_proc_across_ip_c(unsigned char *dst, int pitch, int rows, int cols,int flimit);\n        void vpx_mbpost_proc_across_ip_sse2(unsigned char *dst, int pitch, int rows, int cols,int flimit);\n        #define vpx_mbpost_proc_across_ip vpx_mbpost_proc_across_ip_sse2\n    \n        void vpx_mbpost_proc_down_c(unsigned char *dst, int pitch, int rows, int cols,int flimit);\n        void vpx_mbpost_proc_down_sse2(unsigned char *dst, int pitch, int rows, int cols,int flimit);\n        #define vpx_mbpost_proc_down vpx_mbpost_proc_down_sse2\n    \n        void vpx_minmax_8x8_c(const uint8_t *s, int p, const uint8_t *d, int dp, int *min, int *max);\n        void vpx_minmax_8x8_sse2(const uint8_t *s, int p, const uint8_t *d, int dp, int *min, int *max);\n        #define vpx_minmax_8x8 vpx_minmax_8x8_sse2\n    \n        unsigned int vpx_mse16x16_c(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        unsigned int vpx_mse16x16_sse2(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        unsigned int vpx_mse16x16_avx2(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_mse16x16)(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n    \n        unsigned int vpx_mse16x8_c(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        unsigned int vpx_mse16x8_sse2(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        \/\/unsigned int vpx_mse16x8_avx2(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_mse16x8)(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n    \n        unsigned int vpx_mse8x16_c(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        unsigned int vpx_mse8x16_sse2(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        #define vpx_mse8x16 vpx_mse8x16_sse2\n    \n        unsigned int vpx_mse8x8_c(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        unsigned int vpx_mse8x8_sse2(const uint8_t *src_ptr, int  source_stride, const uint8_t *ref_ptr, int  recon_stride, unsigned int *sse);\n        #define vpx_mse8x8 vpx_mse8x8_sse2\n    \n        void vpx_plane_add_noise_c(uint8_t *start, const int8_t *noise, int blackclamp, int whiteclamp, int width, int height, int pitch);\n        void vpx_plane_add_noise_sse2(uint8_t *start, const int8_t *noise, int blackclamp, int whiteclamp, int width, int height, int pitch);\n        #define vpx_plane_add_noise vpx_plane_add_noise_sse2\n    \n        void vpx_post_proc_down_and_across_mb_row_c(unsigned char *src, unsigned char *dst, int src_pitch, int dst_pitch, int cols, unsigned char *flimits, int size);\n        void vpx_post_proc_down_and_across_mb_row_sse2(unsigned char *src, unsigned char *dst, int src_pitch, int dst_pitch, int cols, unsigned char *flimits, int size);\n        #define vpx_post_proc_down_and_across_mb_row vpx_post_proc_down_and_across_mb_row_sse2\n    \n        void vpx_quantize_b_c(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *zbin_ptr, const int16_t *round_ptr, const int16_t *quant_ptr, const int16_t *quant_shift_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        void vpx_quantize_b_sse2(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *zbin_ptr, const int16_t *round_ptr, const int16_t *quant_ptr, const int16_t *quant_shift_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        void vpx_quantize_b_ssse3(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *zbin_ptr, const int16_t *round_ptr, const int16_t *quant_ptr, const int16_t *quant_shift_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        void vpx_quantize_b_avx(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *zbin_ptr, const int16_t *round_ptr, const int16_t *quant_ptr, const int16_t *quant_shift_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        RTCD_EXTERN void (*vpx_quantize_b)(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *zbin_ptr, const int16_t *round_ptr, const int16_t *quant_ptr, const int16_t *quant_shift_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n    \n        void vpx_quantize_b_32x32_c(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *zbin_ptr, const int16_t *round_ptr, const int16_t *quant_ptr, const int16_t *quant_shift_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        void vpx_quantize_b_32x32_ssse3(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *zbin_ptr, const int16_t *round_ptr, const int16_t *quant_ptr, const int16_t *quant_shift_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        void vpx_quantize_b_32x32_avx(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *zbin_ptr, const int16_t *round_ptr, const int16_t *quant_ptr, const int16_t *quant_shift_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n        RTCD_EXTERN void (*vpx_quantize_b_32x32)(const tran_low_t *coeff_ptr, intptr_t n_coeffs, int skip_block, const int16_t *zbin_ptr, const int16_t *round_ptr, const int16_t *quant_ptr, const int16_t *quant_shift_ptr, tran_low_t *qcoeff_ptr, tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr, uint16_t *eob_ptr, const int16_t *scan, const int16_t *iscan);\n    \n        unsigned int vpx_sad16x16_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad16x16_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        #define vpx_sad16x16 vpx_sad16x16_sse2\n    \n        unsigned int vpx_sad16x16_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad16x16_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        #define vpx_sad16x16_avg vpx_sad16x16_avg_sse2\n    \n        void vpx_sad16x16x3_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad16x16x3_sse3(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad16x16x3_ssse3(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad16x16x3)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        void vpx_sad16x16x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad16x16x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad16x16x4d vpx_sad16x16x4d_sse2\n    \n        void vpx_sad16x16x8_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad16x16x8_sse4_1(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad16x16x8)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        unsigned int vpx_sad16x32_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad16x32_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        #define vpx_sad16x32 vpx_sad16x32_sse2\n    \n        unsigned int vpx_sad16x32_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad16x32_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        #define vpx_sad16x32_avg vpx_sad16x32_avg_sse2\n    \n        void vpx_sad16x32x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad16x32x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad16x32x4d vpx_sad16x32x4d_sse2\n    \n        unsigned int vpx_sad16x8_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad16x8_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        #define vpx_sad16x8 vpx_sad16x8_sse2\n    \n        unsigned int vpx_sad16x8_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad16x8_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        #define vpx_sad16x8_avg vpx_sad16x8_avg_sse2\n    \n        void vpx_sad16x8x3_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad16x8x3_sse3(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad16x8x3_ssse3(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad16x8x3)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        void vpx_sad16x8x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad16x8x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad16x8x4d vpx_sad16x8x4d_sse2\n    \n        void vpx_sad16x8x8_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad16x8x8_sse4_1(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad16x8x8)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        unsigned int vpx_sad32x16_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad32x16_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad32x16_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        RTCD_EXTERN unsigned int (*vpx_sad32x16)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n    \n        unsigned int vpx_sad32x16_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad32x16_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad32x16_avg_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        RTCD_EXTERN unsigned int (*vpx_sad32x16_avg)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n    \n        void vpx_sad32x16x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad32x16x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad32x16x4d vpx_sad32x16x4d_sse2\n    \n        unsigned int vpx_sad32x32_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad32x32_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad32x32_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        RTCD_EXTERN unsigned int (*vpx_sad32x32)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n    \n        unsigned int vpx_sad32x32_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad32x32_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad32x32_avg_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        RTCD_EXTERN unsigned int (*vpx_sad32x32_avg)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n    \n        void vpx_sad32x32x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad32x32x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad32x32x4d_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad32x32x4d)(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n    \n        unsigned int vpx_sad32x64_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad32x64_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad32x64_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        RTCD_EXTERN unsigned int (*vpx_sad32x64)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n    \n        unsigned int vpx_sad32x64_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad32x64_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad32x64_avg_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        RTCD_EXTERN unsigned int (*vpx_sad32x64_avg)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n    \n        void vpx_sad32x64x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad32x64x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad32x64x4d vpx_sad32x64x4d_sse2\n    \n        unsigned int vpx_sad4x4_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad4x4_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        #define vpx_sad4x4 vpx_sad4x4_sse2\n    \n        unsigned int vpx_sad4x4_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad4x4_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        #define vpx_sad4x4_avg vpx_sad4x4_avg_sse2\n    \n        void vpx_sad4x4x3_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad4x4x3_sse3(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad4x4x3)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        void vpx_sad4x4x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad4x4x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad4x4x4d vpx_sad4x4x4d_sse2\n    \n        void vpx_sad4x4x8_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad4x4x8_sse4_1(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad4x4x8)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        unsigned int vpx_sad4x8_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad4x8_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        #define vpx_sad4x8 vpx_sad4x8_sse2\n    \n        unsigned int vpx_sad4x8_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad4x8_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        #define vpx_sad4x8_avg vpx_sad4x8_avg_sse2\n    \n        void vpx_sad4x8x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad4x8x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad4x8x4d vpx_sad4x8x4d_sse2\n    \n        unsigned int vpx_sad64x32_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad64x32_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad64x32_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        RTCD_EXTERN unsigned int (*vpx_sad64x32)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n    \n        unsigned int vpx_sad64x32_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad64x32_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad64x32_avg_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        RTCD_EXTERN unsigned int (*vpx_sad64x32_avg)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n    \n        void vpx_sad64x32x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad64x32x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad64x32x4d vpx_sad64x32x4d_sse2\n    \n        unsigned int vpx_sad64x64_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad64x64_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad64x64_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        RTCD_EXTERN unsigned int (*vpx_sad64x64)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n    \n        unsigned int vpx_sad64x64_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad64x64_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad64x64_avg_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        RTCD_EXTERN unsigned int (*vpx_sad64x64_avg)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n    \n        void vpx_sad64x64x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad64x64x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad64x64x4d_avx2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad64x64x4d_avx512(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad64x64x4d)(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n    \n        unsigned int vpx_sad8x16_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad8x16_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        #define vpx_sad8x16 vpx_sad8x16_sse2\n    \n        unsigned int vpx_sad8x16_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad8x16_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        #define vpx_sad8x16_avg vpx_sad8x16_avg_sse2\n    \n        void vpx_sad8x16x3_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad8x16x3_sse3(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad8x16x3)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        void vpx_sad8x16x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad8x16x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad8x16x4d vpx_sad8x16x4d_sse2\n    \n        void vpx_sad8x16x8_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad8x16x8_sse4_1(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad8x16x8)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        unsigned int vpx_sad8x4_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad8x4_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        #define vpx_sad8x4 vpx_sad8x4_sse2\n    \n        unsigned int vpx_sad8x4_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad8x4_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        #define vpx_sad8x4_avg vpx_sad8x4_avg_sse2\n    \n        void vpx_sad8x4x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad8x4x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad8x4x4d vpx_sad8x4x4d_sse2\n    \n        unsigned int vpx_sad8x8_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        unsigned int vpx_sad8x8_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride);\n        #define vpx_sad8x8 vpx_sad8x8_sse2\n    \n        unsigned int vpx_sad8x8_avg_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        unsigned int vpx_sad8x8_avg_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, const uint8_t *second_pred);\n        #define vpx_sad8x8_avg vpx_sad8x8_avg_sse2\n    \n        void vpx_sad8x8x3_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad8x8x3_sse3(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad8x8x3)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        void vpx_sad8x8x4d_c(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        void vpx_sad8x8x4d_sse2(const uint8_t *src_ptr, int src_stride, const uint8_t * const ref_ptr[], int ref_stride, uint32_t *sad_array);\n        #define vpx_sad8x8x4d vpx_sad8x8x4d_sse2\n    \n        void vpx_sad8x8x8_c(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        void vpx_sad8x8x8_sse4_1(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n        RTCD_EXTERN void (*vpx_sad8x8x8)(const uint8_t *src_ptr, int src_stride, const uint8_t *ref_ptr, int ref_stride, uint32_t *sad_array);\n    \n        int vpx_satd_c(const int16_t *coeff, int length);\n        int vpx_satd_sse2(const int16_t *coeff, int length);\n        int vpx_satd_avx2(const int16_t *coeff, int length);\n        RTCD_EXTERN int (*vpx_satd)(const int16_t *coeff, int length);\n    \n        void vpx_scaled_2d_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        void vpx_scaled_2d_ssse3(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        RTCD_EXTERN void (*vpx_scaled_2d)(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n    \n        void vpx_scaled_avg_2d_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        #define vpx_scaled_avg_2d vpx_scaled_avg_2d_c\n    \n        void vpx_scaled_avg_horiz_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        #define vpx_scaled_avg_horiz vpx_scaled_avg_horiz_c\n    \n        void vpx_scaled_avg_vert_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        #define vpx_scaled_avg_vert vpx_scaled_avg_vert_c\n    \n        void vpx_scaled_horiz_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        #define vpx_scaled_horiz vpx_scaled_horiz_c\n    \n        void vpx_scaled_vert_c(const uint8_t *src, ptrdiff_t src_stride, uint8_t *dst, ptrdiff_t dst_stride, const InterpKernel *filter, int x0_q4, int x_step_q4, int y0_q4, int y_step_q4, int w, int h);\n        #define vpx_scaled_vert vpx_scaled_vert_c\n    \n        uint32_t vpx_sub_pixel_avg_variance16x16_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance16x16_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance16x16_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance16x16)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance16x32_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance16x32_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance16x32_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance16x32)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance16x8_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance16x8_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance16x8_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance16x8)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance32x16_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance32x16_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance32x16_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance32x16)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance32x32_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance32x32_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance32x32_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance32x32_avx2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance32x32)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance32x64_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance32x64_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance32x64_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance32x64)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance4x4_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance4x4_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance4x4_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance4x4)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance4x8_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance4x8_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance4x8_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance4x8)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance64x32_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance64x32_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance64x32_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance64x32)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance64x64_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance64x64_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance64x64_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance64x64_avx2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance64x64)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance8x16_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance8x16_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance8x16_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance8x16)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance8x4_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance8x4_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance8x4_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance8x4)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_avg_variance8x8_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance8x8_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        uint32_t vpx_sub_pixel_avg_variance8x8_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_avg_variance8x8)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse, const uint8_t *second_pred);\n    \n        uint32_t vpx_sub_pixel_variance16x16_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance16x16_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance16x16_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance16x16)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance16x32_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance16x32_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance16x32_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance16x32)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance16x8_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance16x8_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance16x8_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance16x8)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance32x16_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance32x16_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance32x16_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance32x16)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance32x32_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance32x32_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance32x32_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance32x32_avx2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance32x32)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance32x64_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance32x64_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance32x64_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance32x64)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance4x4_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance4x4_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance4x4_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance4x4)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance4x8_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance4x8_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance4x8_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance4x8)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance64x32_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance64x32_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance64x32_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance64x32)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance64x64_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance64x64_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance64x64_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance64x64_avx2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance64x64)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance8x16_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance8x16_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance8x16_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance8x16)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance8x4_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance8x4_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance8x4_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance8x4)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        uint32_t vpx_sub_pixel_variance8x8_c(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance8x8_sse2(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        uint32_t vpx_sub_pixel_variance8x8_ssse3(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n        RTCD_EXTERN uint32_t (*vpx_sub_pixel_variance8x8)(const uint8_t *src_ptr, int source_stride, int xoffset, int  yoffset, const uint8_t *ref_ptr, int ref_stride, uint32_t *sse);\n    \n        void vpx_subtract_block_c(int rows, int cols, int16_t *diff_ptr, ptrdiff_t diff_stride, const uint8_t *src_ptr, ptrdiff_t src_stride, const uint8_t *pred_ptr, ptrdiff_t pred_stride);\n        void vpx_subtract_block_sse2(int rows, int cols, int16_t *diff_ptr, ptrdiff_t diff_stride, const uint8_t *src_ptr, ptrdiff_t src_stride, const uint8_t *pred_ptr, ptrdiff_t pred_stride);\n        #define vpx_subtract_block vpx_subtract_block_sse2\n    \n        uint64_t vpx_sum_squares_2d_i16_c(const int16_t *src, int stride, int size);\n        uint64_t vpx_sum_squares_2d_i16_sse2(const int16_t *src, int stride, int size);\n        #define vpx_sum_squares_2d_i16 vpx_sum_squares_2d_i16_sse2\n    \n        void vpx_tm_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_tm_predictor_16x16_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_tm_predictor_16x16 vpx_tm_predictor_16x16_sse2\n    \n        void vpx_tm_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_tm_predictor_32x32_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_tm_predictor_32x32 vpx_tm_predictor_32x32_sse2\n    \n        void vpx_tm_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_tm_predictor_4x4_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_tm_predictor_4x4 vpx_tm_predictor_4x4_sse2\n    \n        void vpx_tm_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_tm_predictor_8x8_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_tm_predictor_8x8 vpx_tm_predictor_8x8_sse2\n    \n        void vpx_v_predictor_16x16_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_v_predictor_16x16_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_v_predictor_16x16 vpx_v_predictor_16x16_sse2\n    \n        void vpx_v_predictor_32x32_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_v_predictor_32x32_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_v_predictor_32x32 vpx_v_predictor_32x32_sse2\n    \n        void vpx_v_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_v_predictor_4x4_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_v_predictor_4x4 vpx_v_predictor_4x4_sse2\n    \n        void vpx_v_predictor_8x8_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        void vpx_v_predictor_8x8_sse2(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_v_predictor_8x8 vpx_v_predictor_8x8_sse2\n    \n        unsigned int vpx_variance16x16_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance16x16_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance16x16_avx2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_variance16x16)(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n    \n        unsigned int vpx_variance16x32_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance16x32_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        \/\/unsigned int vpx_variance16x32_avx2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_variance16x32)(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n    \n        unsigned int vpx_variance16x8_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance16x8_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        \/\/unsigned int vpx_variance16x8_avx2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_variance16x8)(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n    \n        unsigned int vpx_variance32x16_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance32x16_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance32x16_avx2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_variance32x16)(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n    \n        unsigned int vpx_variance32x32_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance32x32_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance32x32_avx2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_variance32x32)(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n    \n        unsigned int vpx_variance32x64_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance32x64_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        \/\/unsigned int vpx_variance32x64_avx2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_variance32x64)(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n    \n        unsigned int vpx_variance4x4_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance4x4_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        #define vpx_variance4x4 vpx_variance4x4_sse2\n    \n        unsigned int vpx_variance4x8_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance4x8_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        #define vpx_variance4x8 vpx_variance4x8_sse2\n    \n        unsigned int vpx_variance64x32_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance64x32_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance64x32_avx2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_variance64x32)(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n    \n        unsigned int vpx_variance64x64_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance64x64_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance64x64_avx2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        RTCD_EXTERN unsigned int (*vpx_variance64x64)(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n    \n        unsigned int vpx_variance8x16_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance8x16_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        #define vpx_variance8x16 vpx_variance8x16_sse2\n    \n        unsigned int vpx_variance8x4_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance8x4_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        #define vpx_variance8x4 vpx_variance8x4_sse2\n    \n        unsigned int vpx_variance8x8_c(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        unsigned int vpx_variance8x8_sse2(const uint8_t *src_ptr, int source_stride, const uint8_t *ref_ptr, int ref_stride, unsigned int *sse);\n        #define vpx_variance8x8 vpx_variance8x8_sse2\n    \n        void vpx_ve_predictor_4x4_c(uint8_t *dst, ptrdiff_t y_stride, const uint8_t *above, const uint8_t *left);\n        #define vpx_ve_predictor_4x4 vpx_ve_predictor_4x4_c\n    \n        int vpx_vector_var_c(const int16_t *ref, const int16_t *src, const int bwl);\n        int vpx_vector_var_sse2(const int16_t *ref, const int16_t *src, const int bwl);\n        #define vpx_vector_var vpx_vector_var_sse2\n    \n        void vpx_dsp_rtcd(void);\n    \n        #ifdef RTCD_C\n        #include \\\"vpx_ports\/x86.h\\\"\n        static void setup_rtcd_internal(void)\n        {\n            int flags = x86_simd_caps();\n    \n            (void)flags;\n    \n            vpx_convolve8 = vpx_convolve8_sse2;\n            if (flags & HAS_SSSE3) vpx_convolve8 = vpx_convolve8_ssse3;\n            \/\/if (flags & HAS_AVX2) vpx_convolve8 = vpx_convolve8_avx2;\n            vpx_convolve8_avg = vpx_convolve8_avg_sse2;\n            if (flags & HAS_SSSE3) vpx_convolve8_avg = vpx_convolve8_avg_ssse3;\n            \/\/if (flags & HAS_AVX2) vpx_convolve8_avg = vpx_convolve8_avg_avx2;\n            vpx_convolve8_avg_horiz = vpx_convolve8_avg_horiz_sse2;\n            if (flags & HAS_SSSE3) vpx_convolve8_avg_horiz = vpx_convolve8_avg_horiz_ssse3;\n            \/\/if (flags & HAS_AVX2) vpx_convolve8_avg_horiz = vpx_convolve8_avg_horiz_avx2;\n            vpx_convolve8_avg_vert = vpx_convolve8_avg_vert_sse2;\n            if (flags & HAS_SSSE3) vpx_convolve8_avg_vert = vpx_convolve8_avg_vert_ssse3;\n            \/\/if (flags & HAS_AVX2) vpx_convolve8_avg_vert = vpx_convolve8_avg_vert_avx2;\n            vpx_convolve8_horiz = vpx_convolve8_horiz_sse2;\n            if (flags & HAS_SSSE3) vpx_convolve8_horiz = vpx_convolve8_horiz_ssse3;\n            \/\/if (flags & HAS_AVX2) vpx_convolve8_horiz = vpx_convolve8_horiz_avx2;\n            vpx_convolve8_vert = vpx_convolve8_vert_sse2;\n            if (flags & HAS_SSSE3) vpx_convolve8_vert = vpx_convolve8_vert_ssse3;\n            \/\/if (flags & HAS_AVX2) vpx_convolve8_vert = vpx_convolve8_vert_avx2;\n            vpx_d153_predictor_16x16 = vpx_d153_predictor_16x16_c;\n            if (flags & HAS_SSSE3) vpx_d153_predictor_16x16 = vpx_d153_predictor_16x16_ssse3;\n            vpx_d153_predictor_32x32 = vpx_d153_predictor_32x32_c;\n            if (flags & HAS_SSSE3) vpx_d153_predictor_32x32 = vpx_d153_predictor_32x32_ssse3;\n            vpx_d153_predictor_4x4 = vpx_d153_predictor_4x4_c;\n            if (flags & HAS_SSSE3) vpx_d153_predictor_4x4 = vpx_d153_predictor_4x4_ssse3;\n            vpx_d153_predictor_8x8 = vpx_d153_predictor_8x8_c;\n            if (flags & HAS_SSSE3) vpx_d153_predictor_8x8 = vpx_d153_predictor_8x8_ssse3;\n            vpx_d207_predictor_16x16 = vpx_d207_predictor_16x16_c;\n            if (flags & HAS_SSSE3) vpx_d207_predictor_16x16 = vpx_d207_predictor_16x16_ssse3;\n            vpx_d207_predictor_32x32 = vpx_d207_predictor_32x32_c;\n            if (flags & HAS_SSSE3) vpx_d207_predictor_32x32 = vpx_d207_predictor_32x32_ssse3;\n            vpx_d207_predictor_8x8 = vpx_d207_predictor_8x8_c;\n            if (flags & HAS_SSSE3) vpx_d207_predictor_8x8 = vpx_d207_predictor_8x8_ssse3;\n            vpx_d45_predictor_16x16 = vpx_d45_predictor_16x16_c;\n            if (flags & HAS_SSSE3) vpx_d45_predictor_16x16 = vpx_d45_predictor_16x16_ssse3;\n            vpx_d45_predictor_32x32 = vpx_d45_predictor_32x32_c;\n            if (flags & HAS_SSSE3) vpx_d45_predictor_32x32 = vpx_d45_predictor_32x32_ssse3;\n            vpx_d63_predictor_16x16 = vpx_d63_predictor_16x16_c;\n            if (flags & HAS_SSSE3) vpx_d63_predictor_16x16 = vpx_d63_predictor_16x16_ssse3;\n            vpx_d63_predictor_32x32 = vpx_d63_predictor_32x32_c;\n            if (flags & HAS_SSSE3) vpx_d63_predictor_32x32 = vpx_d63_predictor_32x32_ssse3;\n            vpx_d63_predictor_4x4 = vpx_d63_predictor_4x4_c;\n            if (flags & HAS_SSSE3) vpx_d63_predictor_4x4 = vpx_d63_predictor_4x4_ssse3;\n            vpx_d63_predictor_8x8 = vpx_d63_predictor_8x8_c;\n            if (flags & HAS_SSSE3) vpx_d63_predictor_8x8 = vpx_d63_predictor_8x8_ssse3;\n            vpx_fdct32x32 = vpx_fdct32x32_sse2;\n            if (flags & HAS_AVX2) vpx_fdct32x32 = vpx_fdct32x32_avx2;\n            vpx_fdct32x32_rd = vpx_fdct32x32_rd_sse2;\n            if (flags & HAS_AVX2) vpx_fdct32x32_rd = vpx_fdct32x32_rd_avx2;\n            vpx_fdct8x8 = vpx_fdct8x8_sse2;\n            \/\/if (flags & HAS_SSSE3) vpx_fdct8x8 = vpx_fdct8x8_ssse3;\n            vpx_get16x16var = vpx_get16x16var_sse2;\n            if (flags & HAS_AVX2) vpx_get16x16var = vpx_get16x16var_avx2;\n            vpx_hadamard_16x16 = vpx_hadamard_16x16_sse2;\n            if (flags & HAS_AVX2) vpx_hadamard_16x16 = vpx_hadamard_16x16_avx2;\n            vpx_hadamard_8x8 = vpx_hadamard_8x8_sse2;\n            \/\/if (flags & HAS_SSSE3) vpx_hadamard_8x8 = vpx_hadamard_8x8_ssse3;\n            vpx_idct32x32_135_add = vpx_idct32x32_135_add_sse2;\n            if (flags & HAS_SSSE3) vpx_idct32x32_135_add = vpx_idct32x32_135_add_ssse3;\n            vpx_idct32x32_34_add = vpx_idct32x32_34_add_sse2;\n            if (flags & HAS_SSSE3) vpx_idct32x32_34_add = vpx_idct32x32_34_add_ssse3;\n            vpx_idct8x8_12_add = vpx_idct8x8_12_add_sse2;\n            if (flags & HAS_SSSE3) vpx_idct8x8_12_add = vpx_idct8x8_12_add_ssse3;\n            vpx_lpf_horizontal_16 = vpx_lpf_horizontal_16_sse2;\n            if (flags & HAS_AVX2) vpx_lpf_horizontal_16 = vpx_lpf_horizontal_16_avx2;\n            vpx_lpf_horizontal_16_dual = vpx_lpf_horizontal_16_dual_sse2;\n            if (flags & HAS_AVX2) vpx_lpf_horizontal_16_dual = vpx_lpf_horizontal_16_dual_avx2;\n            vpx_mse16x16 = vpx_mse16x16_sse2;\n            if (flags & HAS_AVX2) vpx_mse16x16 = vpx_mse16x16_avx2;\n            vpx_mse16x8 = vpx_mse16x8_sse2;\n            \/\/if (flags & HAS_AVX2) vpx_mse16x8 = vpx_mse16x8_avx2;\n            vpx_quantize_b = vpx_quantize_b_sse2;\n            if (flags & HAS_SSSE3) vpx_quantize_b = vpx_quantize_b_ssse3;\n            if (flags & HAS_AVX) vpx_quantize_b = vpx_quantize_b_avx;\n            vpx_quantize_b_32x32 = vpx_quantize_b_32x32_c;\n            if (flags & HAS_SSSE3) vpx_quantize_b_32x32 = vpx_quantize_b_32x32_ssse3;\n            if (flags & HAS_AVX) vpx_quantize_b_32x32 = vpx_quantize_b_32x32_avx;\n            vpx_sad16x16x3 = vpx_sad16x16x3_c;\n            if (flags & HAS_SSE3) vpx_sad16x16x3 = vpx_sad16x16x3_sse3;\n            if (flags & HAS_SSSE3) vpx_sad16x16x3 = vpx_sad16x16x3_ssse3;\n            vpx_sad16x16x8 = vpx_sad16x16x8_c;\n            if (flags & HAS_SSE4_1) vpx_sad16x16x8 = vpx_sad16x16x8_sse4_1;\n            vpx_sad16x8x3 = vpx_sad16x8x3_c;\n            if (flags & HAS_SSE3) vpx_sad16x8x3 = vpx_sad16x8x3_sse3;\n            if (flags & HAS_SSSE3) vpx_sad16x8x3 = vpx_sad16x8x3_ssse3;\n            vpx_sad16x8x8 = vpx_sad16x8x8_c;\n            if (flags & HAS_SSE4_1) vpx_sad16x8x8 = vpx_sad16x8x8_sse4_1;\n            vpx_sad32x16 = vpx_sad32x16_sse2;\n            if (flags & HAS_AVX2) vpx_sad32x16 = vpx_sad32x16_avx2;\n            vpx_sad32x16_avg = vpx_sad32x16_avg_sse2;\n            if (flags & HAS_AVX2) vpx_sad32x16_avg = vpx_sad32x16_avg_avx2;\n            vpx_sad32x32 = vpx_sad32x32_sse2;\n            if (flags & HAS_AVX2) vpx_sad32x32 = vpx_sad32x32_avx2;\n            vpx_sad32x32_avg = vpx_sad32x32_avg_sse2;\n            if (flags & HAS_AVX2) vpx_sad32x32_avg = vpx_sad32x32_avg_avx2;\n            vpx_sad32x32x4d = vpx_sad32x32x4d_sse2;\n            if (flags & HAS_AVX2) vpx_sad32x32x4d = vpx_sad32x32x4d_avx2;\n            vpx_sad32x64 = vpx_sad32x64_sse2;\n            if (flags & HAS_AVX2) vpx_sad32x64 = vpx_sad32x64_avx2;\n            vpx_sad32x64_avg = vpx_sad32x64_avg_sse2;\n            if (flags & HAS_AVX2) vpx_sad32x64_avg = vpx_sad32x64_avg_avx2;\n            vpx_sad4x4x3 = vpx_sad4x4x3_c;\n            if (flags & HAS_SSE3) vpx_sad4x4x3 = vpx_sad4x4x3_sse3;\n            vpx_sad4x4x8 = vpx_sad4x4x8_c;\n            if (flags & HAS_SSE4_1) vpx_sad4x4x8 = vpx_sad4x4x8_sse4_1;\n            vpx_sad64x32 = vpx_sad64x32_sse2;\n            if (flags & HAS_AVX2) vpx_sad64x32 = vpx_sad64x32_avx2;\n            vpx_sad64x32_avg = vpx_sad64x32_avg_sse2;\n            if (flags & HAS_AVX2) vpx_sad64x32_avg = vpx_sad64x32_avg_avx2;\n            vpx_sad64x64 = vpx_sad64x64_sse2;\n            if (flags & HAS_AVX2) vpx_sad64x64 = vpx_sad64x64_avx2;\n            vpx_sad64x64_avg = vpx_sad64x64_avg_sse2;\n            if (flags & HAS_AVX2) vpx_sad64x64_avg = vpx_sad64x64_avg_avx2;\n            vpx_sad64x64x4d = vpx_sad64x64x4d_sse2;\n            if (flags & HAS_AVX2) vpx_sad64x64x4d = vpx_sad64x64x4d_avx2;\n            if (flags & HAS_AVX512) vpx_sad64x64x4d = vpx_sad64x64x4d_avx512;\n            vpx_sad8x16x3 = vpx_sad8x16x3_c;\n            if (flags & HAS_SSE3) vpx_sad8x16x3 = vpx_sad8x16x3_sse3;\n            vpx_sad8x16x8 = vpx_sad8x16x8_c;\n            if (flags & HAS_SSE4_1) vpx_sad8x16x8 = vpx_sad8x16x8_sse4_1;\n            vpx_sad8x8x3 = vpx_sad8x8x3_c;\n            if (flags & HAS_SSE3) vpx_sad8x8x3 = vpx_sad8x8x3_sse3;\n            vpx_sad8x8x8 = vpx_sad8x8x8_c;\n            if (flags & HAS_SSE4_1) vpx_sad8x8x8 = vpx_sad8x8x8_sse4_1;\n            vpx_satd = vpx_satd_sse2;\n            if (flags & HAS_AVX2) vpx_satd = vpx_satd_avx2;\n            vpx_scaled_2d = vpx_scaled_2d_c;\n            if (flags & HAS_SSSE3) vpx_scaled_2d = vpx_scaled_2d_ssse3;\n            vpx_sub_pixel_avg_variance16x16 = vpx_sub_pixel_avg_variance16x16_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance16x16 = vpx_sub_pixel_avg_variance16x16_ssse3;\n            vpx_sub_pixel_avg_variance16x32 = vpx_sub_pixel_avg_variance16x32_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance16x32 = vpx_sub_pixel_avg_variance16x32_ssse3;\n            vpx_sub_pixel_avg_variance16x8 = vpx_sub_pixel_avg_variance16x8_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance16x8 = vpx_sub_pixel_avg_variance16x8_ssse3;\n            vpx_sub_pixel_avg_variance32x16 = vpx_sub_pixel_avg_variance32x16_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance32x16 = vpx_sub_pixel_avg_variance32x16_ssse3;\n            vpx_sub_pixel_avg_variance32x32 = vpx_sub_pixel_avg_variance32x32_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance32x32 = vpx_sub_pixel_avg_variance32x32_ssse3;\n            if (flags & HAS_AVX2) vpx_sub_pixel_avg_variance32x32 = vpx_sub_pixel_avg_variance32x32_avx2;\n            vpx_sub_pixel_avg_variance32x64 = vpx_sub_pixel_avg_variance32x64_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance32x64 = vpx_sub_pixel_avg_variance32x64_ssse3;\n            vpx_sub_pixel_avg_variance4x4 = vpx_sub_pixel_avg_variance4x4_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance4x4 = vpx_sub_pixel_avg_variance4x4_ssse3;\n            vpx_sub_pixel_avg_variance4x8 = vpx_sub_pixel_avg_variance4x8_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance4x8 = vpx_sub_pixel_avg_variance4x8_ssse3;\n            vpx_sub_pixel_avg_variance64x32 = vpx_sub_pixel_avg_variance64x32_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance64x32 = vpx_sub_pixel_avg_variance64x32_ssse3;\n            vpx_sub_pixel_avg_variance64x64 = vpx_sub_pixel_avg_variance64x64_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance64x64 = vpx_sub_pixel_avg_variance64x64_ssse3;\n            if (flags & HAS_AVX2) vpx_sub_pixel_avg_variance64x64 = vpx_sub_pixel_avg_variance64x64_avx2;\n            vpx_sub_pixel_avg_variance8x16 = vpx_sub_pixel_avg_variance8x16_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance8x16 = vpx_sub_pixel_avg_variance8x16_ssse3;\n            vpx_sub_pixel_avg_variance8x4 = vpx_sub_pixel_avg_variance8x4_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance8x4 = vpx_sub_pixel_avg_variance8x4_ssse3;\n            vpx_sub_pixel_avg_variance8x8 = vpx_sub_pixel_avg_variance8x8_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_avg_variance8x8 = vpx_sub_pixel_avg_variance8x8_ssse3;\n            vpx_sub_pixel_variance16x16 = vpx_sub_pixel_variance16x16_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance16x16 = vpx_sub_pixel_variance16x16_ssse3;\n            vpx_sub_pixel_variance16x32 = vpx_sub_pixel_variance16x32_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance16x32 = vpx_sub_pixel_variance16x32_ssse3;\n            vpx_sub_pixel_variance16x8 = vpx_sub_pixel_variance16x8_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance16x8 = vpx_sub_pixel_variance16x8_ssse3;\n            vpx_sub_pixel_variance32x16 = vpx_sub_pixel_variance32x16_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance32x16 = vpx_sub_pixel_variance32x16_ssse3;\n            vpx_sub_pixel_variance32x32 = vpx_sub_pixel_variance32x32_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance32x32 = vpx_sub_pixel_variance32x32_ssse3;\n            if (flags & HAS_AVX2) vpx_sub_pixel_variance32x32 = vpx_sub_pixel_variance32x32_avx2;\n            vpx_sub_pixel_variance32x64 = vpx_sub_pixel_variance32x64_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance32x64 = vpx_sub_pixel_variance32x64_ssse3;\n            vpx_sub_pixel_variance4x4 = vpx_sub_pixel_variance4x4_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance4x4 = vpx_sub_pixel_variance4x4_ssse3;\n            vpx_sub_pixel_variance4x8 = vpx_sub_pixel_variance4x8_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance4x8 = vpx_sub_pixel_variance4x8_ssse3;\n            vpx_sub_pixel_variance64x32 = vpx_sub_pixel_variance64x32_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance64x32 = vpx_sub_pixel_variance64x32_ssse3;\n            vpx_sub_pixel_variance64x64 = vpx_sub_pixel_variance64x64_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance64x64 = vpx_sub_pixel_variance64x64_ssse3;\n            if (flags & HAS_AVX2) vpx_sub_pixel_variance64x64 = vpx_sub_pixel_variance64x64_avx2;\n            vpx_sub_pixel_variance8x16 = vpx_sub_pixel_variance8x16_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance8x16 = vpx_sub_pixel_variance8x16_ssse3;\n            vpx_sub_pixel_variance8x4 = vpx_sub_pixel_variance8x4_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance8x4 = vpx_sub_pixel_variance8x4_ssse3;\n            vpx_sub_pixel_variance8x8 = vpx_sub_pixel_variance8x8_sse2;\n            if (flags & HAS_SSSE3) vpx_sub_pixel_variance8x8 = vpx_sub_pixel_variance8x8_ssse3;\n            vpx_variance16x16 = vpx_variance16x16_sse2;\n            if (flags & HAS_AVX2) vpx_variance16x16 = vpx_variance16x16_avx2;\n            vpx_variance16x32 = vpx_variance16x32_sse2;\n            \/\/if (flags & HAS_AVX2) vpx_variance16x32 = vpx_variance16x32_avx2;\n            vpx_variance16x8 = vpx_variance16x8_sse2;\n            \/\/if (flags & HAS_AVX2) vpx_variance16x8 = vpx_variance16x8_avx2;\n            vpx_variance32x16 = vpx_variance32x16_sse2;\n            if (flags & HAS_AVX2) vpx_variance32x16 = vpx_variance32x16_avx2;\n            vpx_variance32x32 = vpx_variance32x32_sse2;\n            if (flags & HAS_AVX2) vpx_variance32x32 = vpx_variance32x32_avx2;\n            vpx_variance32x64 = vpx_variance32x64_sse2;\n            \/\/if (flags & HAS_AVX2) vpx_variance32x64 = vpx_variance32x64_avx2;\n            vpx_variance64x32 = vpx_variance64x32_sse2;\n            if (flags & HAS_AVX2) vpx_variance64x32 = vpx_variance64x32_avx2;\n            vpx_variance64x64 = vpx_variance64x64_sse2;\n            if (flags & HAS_AVX2) vpx_variance64x64 = vpx_variance64x64_avx2;\n        }\n        #endif\n    \n        #ifdef __cplusplus\n        }  \/\/ extern \\\"C\\\"\n        #endif\n    \n        #endif\n    \")\n\ncheck_include_exists:\n    -   file: pthread.h\n        variable: HAVE_PTHREAD_H\n        cpp: false\n    -   file: stdint.h\n        variable: HAVE_STDINT_H\n        cpp: false\n    -   file: sys\/mman.h\n        variable: HAVE_SYS_MMAN_H\n        cpp: false\n    -   file: unistd.h\n        variable: HAVE_UNISTD_H\n        cpp: false\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/webmproject\/libvpx",
            "tag": "v{v}"
        }
    },
    "version": "1.7.0",
    "hash": "910abc60fc20ad75dd77d7e938796d7563357b89b37e49615eb0278d20a65a97",
    "created": "2018-07-12 00:27:40.492705"
}
