{
    "project": "pvt.cppan.demo.intel.opencv.dnn",
    "cppan": "source:\n    git: https:\/\/github.com\/opencv\/opencv\n    tag: \"{v}\"\n\nversion: 3.4.0\n\ntype: library\n\nrc_enabled: true\n\nfiles:\n    -   modules\/dnn\/include\/.*\n    -   modules\/dnn\/src\/.*\n\nexclude_from_build:\n    -   modules\/dnn\/src\/cuda\/.*\n    -   modules\/dnn\/src\/opencl\/.*\n    -   modules\/dnn\/src\/torch\/.*\n\ninclude_directories:\n    public:\n        -   modules\/dnn\/include\n    private:\n        -   modules\/dnn\/src\/ocl4dnn\/include\n        -   modules\/dnn\/src\n\noptions:\n    any:\n        definitions:\n            private:\n                -   HAVE_PROTOBUF\n                -   __OPENCV_BUILD\n    shared:\n        definitions:\n            private:\n                -   CVAPI_EXPORTS\n\ndependencies:\n    public:\n        pvt.cppan.demo.google.protobuf.protoc:\n            version: \"*\"\n        pvt.cppan.demo.intel.opencv.core:\n            version: \"*\"\n        pvt.cppan.demo.intel.opencv.imgproc:\n            version: \"*\"\n        pvt.cppan.demo.google.protobuf.protobuf:\n            version: \"*\"\n\npre_project: |\n    if (MSVC)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} \/wd4127\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} \/wd4251\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} \/wd4275\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} \/wd4324\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} \/wd4589\")\n    endif()\n\npost_sources: |\n    set(dir ${SDIR}\/modules\/dnn)\n    file(GLOB cl_kernels \"${dir}\/src\/opencl\/*.cl\")\n    if(cl_kernels)\n        set(OCL_NAME opencl_kernels_dnn)\n        add_custom_command(\n          OUTPUT \"${BDIR}\/${OCL_NAME}.cpp\" \"${BDIR}\/${OCL_NAME}.hpp\"\n          COMMAND\n            ${CMAKE_COMMAND}\n                \"-DMODULE_NAME=dnn\"\n                \"-DCL_DIR=${dir}\/src\/opencl\"\n                \"-DOUTPUT=${BDIR}\/${OCL_NAME}.cpp\"\n                -P \"${pvt_cppan_demo_intel_opencv_core_DIR}\/cmake\/cl2cpp.cmake\"\n          DEPENDS ${cl_kernels} \"${pvt_cppan_demo_intel_opencv_core_DIR}\/cmake\/cl2cpp.cmake\")\n        list(APPEND src \"${BDIR}\/${OCL_NAME}.cpp\" \"${BDIR}\/${OCL_NAME}.hpp\")\n    endif()\n    \n    replace_in_file_once(${SDIR}\/modules\/dnn\/src\/layers\/softmax_layer.cpp\n        \"#include \\\"modules\/dnn\/opencl_kernels_dnn.hpp\\\"\"\n        \"#include \\\"opencl_kernels_dnn.hpp\\\"\"\n        )\n    \n    replace_in_file_once(${SDIR}\/modules\/dnn\/src\/layers\/lrn_layer.cpp\n        \"#include \\\"modules\/dnn\/opencl_kernels_dnn.hpp\\\"\"\n        \"#include \\\"opencl_kernels_dnn.hpp\\\"\"\n        )\n    \n    macro(genpb f)\n        get_filename_component(n ${f} NAME_WE)\n        get_filename_component(d ${f} DIRECTORY)\n        add_custom_command(\n            OUTPUT\n                ${BDIR}\/${n}.pb.cc\n                ${BDIR}\/${n}.pb.h\n            COMMAND\n                pvt.cppan.demo.google.protobuf.protoc ${f} --cpp_out=${BDIR} -I ${d}\n        )\n        set(src ${src} ${BDIR}\/${n}.pb.cc ${BDIR}\/${n}.pb.h)\n    endmacro()\n    \n    file(GLOB_RECURSE protos \"${dir}\/src\/*.proto\")\n    foreach(f ${protos})\n        genpb(${f})\n    endforeach()\n    \n    macro(add_dispatch_file fn)\n        file_write_once(${BDIR}\/${fn}.simd_declarations.hpp \"\n            #define CV_CPU_SIMD_FILENAME \\\"${fn}.simd.hpp\\\"\n            #define CV_CPU_DISPATCH_MODE SSE2\n            #include \\\"opencv2\/core\/private\/cv_cpu_include_simd_declarations.hpp\\\"\n    \n            #define CV_CPU_DISPATCH_MODES_ALL SSE2, BASELINE\n        \")\n    endmacro()\n    add_dispatch_file(layers\/layers_common)\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/opencv\/opencv",
            "tag": "{v}"
        }
    },
    "version": "3.4.0",
    "hash": "32d0117a2a4c29e6740b117c49ed35dfb1ec2f13f17a04dc004e1e2393c0ce10",
    "created": "2018-02-28 16:18:32.066939"
}
