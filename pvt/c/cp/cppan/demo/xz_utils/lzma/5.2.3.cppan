{
    "project": "pvt.cppan.demo.xz_utils.lzma",
    "cppan": "source:\n    remote: https:\/\/tukaani.org\/xz\/xz-5.2.3.tar.gz\n\nversion: 5.2.3\n\ntype: library\n\nc:  99\n\nc_extensions: true\n\nfiles:\n    -   src\/common\/.*\\.c\n    -   src\/common\/.*\\.h\n    -   src\/liblzma\/.*\\.c\n    -   src\/liblzma\/.*\\.h\n\nexclude_from_package:\n    -   src\/liblzma\/check\/crc32_small.c\n    -   src\/liblzma\/check\/crc32_tablegen.c\n    -   src\/liblzma\/check\/crc64_small.c\n    -   src\/liblzma\/check\/crc64_tablegen.c\n    -   src\/liblzma\/lzma\/fastpos_tablegen.c\n    -   src\/liblzma\/rangecoder\/price_tablegen.c\n\ninclude_directories:\n    public:\n        -   src\/liblzma\/api\n    private:\n        -   src\/common\n        -   src\/liblzma\/simple\n        -   src\/liblzma\/delta\n        -   src\/liblzma\/check\n        -   src\/liblzma\/rangecoder\n        -   src\/liblzma\/common\n        -   src\/liblzma\/lz\n        -   src\/liblzma\/lzma\n\noptions:\n    any:\n        definitions:\n            private:\n                -   HAVE_CONFIG_H\n            unix:\n                private:\n                    -   MYTHREAD_POSIX\n            win32:\n                private:\n                    -   MYTHREAD_WIN95\n    shared:\n        definitions:\n            private:\n                -   DLL_EXPORT\n    static:\n        definitions:\n            public:\n                -   LZMA_API_STATIC\n\npost_sources: |\n    replace_in_file_once(${SDIR}\/src\/liblzma\/check\/check.h \"#ifndef LZMA_SHA256FUNC\" \"#undef LZMA_SHA256FUNC\\n#ifndef LZMA_SHA256FUNC\")\n    \n    file_write_once(${BDIR}\/config.h \"\n    #include <stdbool.h>\n    #include <stdint.h>\n    \n    #ifdef _WIN32\n    #include <windows.h>\n    #endif\n    \n    \/* Prefix for symbols exported by tuklib_*.c files *\/\n    #define TUKLIB_SYMBOL_PREFIX lzma_\n    \n    \/* How many MiB of RAM to assume if the real amount cannot be determined. *\/\n    #define ASSUME_RAM 128\n    \n    \/* Define to 1 if crc32 integrity check is enabled. *\/\n    #define HAVE_CHECK_CRC32 1\n    \n    \/* Define to 1 if crc64 integrity check is enabled. *\/\n    #define HAVE_CHECK_CRC64 1\n    \n    \/* Define to 1 if sha256 integrity check is enabled. *\/\n    #define HAVE_CHECK_SHA256 1\n    \n    #define HAVE_INTERNAL_SHA256 1\n    \n    \/* Define to 1 if arm decoder is enabled. *\/\n    #define HAVE_DECODER_ARM 1\n    \n    \/* Define to 1 if armthumb decoder is enabled. *\/\n    #define HAVE_DECODER_ARMTHUMB 1\n    \n    \/* Define to 1 if delta decoder is enabled. *\/\n    #define HAVE_DECODER_DELTA 1\n    \n    \/* Define to 1 if ia64 decoder is enabled. *\/\n    #define HAVE_DECODER_IA64 1\n    \n    \/* Define to 1 if lzma1 decoder is enabled. *\/\n    #define HAVE_DECODER_LZMA1 1\n    \n    \/* Define to 1 if lzma2 decoder is enabled. *\/\n    #define HAVE_DECODER_LZMA2 1\n    \n    \/* Define to 1 if powerpc decoder is enabled. *\/\n    #define HAVE_DECODER_POWERPC 1\n    \n    \/* Define to 1 if sparc decoder is enabled. *\/\n    #define HAVE_DECODER_SPARC 1\n    \n    \/* Define to 1 if x86 decoder is enabled. *\/\n    #define HAVE_DECODER_X86 1\n    \n    \/* Define to 1 if arm encoder is enabled. *\/\n    #define HAVE_ENCODER_ARM 1\n    \n    \/* Define to 1 if armthumb encoder is enabled. *\/\n    #define HAVE_ENCODER_ARMTHUMB 1\n    \n    \/* Define to 1 if delta encoder is enabled. *\/\n    #define HAVE_ENCODER_DELTA 1\n    \n    \/* Define to 1 if ia64 encoder is enabled. *\/\n    #define HAVE_ENCODER_IA64 1\n    \n    \/* Define to 1 if lzma1 encoder is enabled. *\/\n    #define HAVE_ENCODER_LZMA1 1\n    \n    \/* Define to 1 if lzma2 encoder is enabled. *\/\n    #define HAVE_ENCODER_LZMA2 1\n    \n    \/* Define to 1 if powerpc encoder is enabled. *\/\n    #define HAVE_ENCODER_POWERPC 1\n    \n    \/* Define to 1 if sparc encoder is enabled. *\/\n    #define HAVE_ENCODER_SPARC 1\n    \n    \/* Define to 1 if x86 encoder is enabled. *\/\n    #define HAVE_ENCODER_X86 1\n    \n    \/* Define to 1 if you have the <inttypes.h> header file. *\/\n    #define HAVE_INTTYPES_H 1\n    \n    \/* Define to 1 if you have the <limits.h> header file. *\/\n    #define HAVE_LIMITS_H 1\n    \n    \/* Define to 1 to enable bt2 match finder. *\/\n    #define HAVE_MF_BT2 1\n    \n    \/* Define to 1 to enable bt3 match finder. *\/\n    #define HAVE_MF_BT3 1\n    \n    \/* Define to 1 to enable bt4 match finder. *\/\n    #define HAVE_MF_BT4 1\n    \n    \/* Define to 1 to enable hc3 match finder. *\/\n    #define HAVE_MF_HC3 1\n    \n    \/* Define to 1 to enable hc4 match finder. *\/\n    #define HAVE_MF_HC4 1\n    \")\n\ncheck_function_exists:\n    -   CC_SHA256_Init\n    -   clock_gettime\n    -   futimens\n    -   futimes\n    -   futimesat\n    -   posix_fadvise\n    -   pthread_condattr_setclock\n    -   SHA256Init\n    -   SHA256_Init\n    -   utime\n    -   utimes\n\ncheck_include_exists:\n    -   file: CommonCrypto\/CommonDigest.h\n        variable: HAVE_COMMONCRYPTO_COMMONDIGEST_H\n        cpp: false\n    -   file: fcntl.h\n        variable: HAVE_FCNTL_H\n        cpp: false\n    -   file: immintrin.h\n        variable: HAVE_IMMINTRIN_H\n        cpp: false\n    -   file: limits.h\n        variable: HAVE_LIMITS_H\n        cpp: false\n    -   file: minix\/sha2.h\n        variable: HAVE_MINIX_SHA2_H\n        cpp: false\n    -   file: sha256.h\n        variable: HAVE_SHA256_H\n        cpp: false\n    -   file: sha2.h\n        variable: HAVE_SHA2_H\n        cpp: false\n    -   file: stdbool.h\n        variable: HAVE_STDBOOL_H\n        cpp: false\n    -   file: sys\/time.h\n        variable: HAVE_SYS_TIME_H\n        cpp: false\n\ncheck_type_size:\n    -   type: CC_SHA256_CTX\n    -   type: int32_t\n    -   type: int64_t\n    -   type: SHA256_CTX\n    -   type: SHA2_CTX\n    -   type: uint16_t\n    -   type: uint32_t\n    -   type: uint64_t\n    -   type: uint8_t\n    -   type: uintptr_t\n    -   type: _Bool\n\ncheck_decl_exists:\n    -   CLOCK_MONOTONIC\n    -   _mm_movemask_epi8\n\nchecks:\n    HAVE_STRUCT_STAT_ST_ATIMENSEC:\n        text: CHECK_STRUCT_HAS_MEMBER(\"struct stat\" st_atimensec \"sys\/stat.h\" HAVE_STRUCT_STAT_ST_ATIMENSEC)\n        invert: false\n    HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC:\n        text: CHECK_STRUCT_HAS_MEMBER(\"struct stat\" st_atimespec.tv_nsec \"sys\/stat.h\" HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC)\n        invert: false\n    HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC:\n        text: CHECK_STRUCT_HAS_MEMBER(\"struct stat\" st_atim.st__tim.tv_nsec \"sys\/stat.h\" HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC)\n        invert: false\n    HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC:\n        text: CHECK_STRUCT_HAS_MEMBER(\"struct stat\" st_atim.tv_nsec \"sys\/stat.h\" HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC)\n        invert: false\n    HAVE_STRUCT_STAT_ST_UATIME:\n        text: CHECK_STRUCT_HAS_MEMBER(\"struct stat\" st_uatime \"sys\/stat.h\" HAVE_STRUCT_STAT_ST_UATIME)\n        invert: false\n\n",
    "source": {
        "remote": {
            "url": "https:\/\/tukaani.org\/xz\/xz-5.2.3.tar.gz"
        }
    },
    "version": "5.2.3",
    "hash": "b5c3c1707b8ce9181ae3b7798da937854e62e7405dd91cf769b4e703e0fea72f",
    "created": "2017-06-20 21:31:30.719887"
}
