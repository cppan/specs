{
    "project": "pvt.cppan.client.cppan",
    "version": "v1",
    "cppan": "root_project: pvt.cppan.client\n\nprojects:\n    common:\n        type: lib\n\n        c++: 17\n\n        static_only: true\n\n        files:\n            -   src\/common\/.*\n            -   src\/printers\/.*\n            -   src\/comments\/.*\n            -   src\/bazel\/.*\n            -   src\/inserts\/.*\n            -   src\/support\/.*\n            -   src\/gen\/.*\n\n        exclude_from_package:\n            -   src\/bazel\/test\/test.cpp\n            -   src\/bazel\/.*\\.txt\n            -   src\/comments\/.*\\.txt\n\n        exclude_from_build:\n            -   src\/gen\/.*\n\n        include_directories:\n            public:\n                -   src\n                -   src\/common\n                -   src\/support\n\n        options:\n            any:\n                definitions:\n                    public:\n                        -   VERSION_MAJOR=0\n                        -   VERSION_MINOR=2\n                        -   VERSION_PATCH=5\n                        -   BUILD_NUMBER=0\n                        -   CPPAN_VERSION_STRING=${CPPAN_VERSION_STRING}\n                    win32:\n                        public:\n                            -   UNICODE\n\n        dependencies:\n            public:\n                -   pvt.cppan.demo.boost.optional: 1\n                -   pvt.cppan.demo.boost.property_tree: 1\n                -   pvt.cppan.demo.sqlite3: 3\n                -   pvt.cppan.demo.boost.stacktrace: 1\n                -   pvt.egorpugin.primitives.string: master\n                -   pvt.egorpugin.primitives.filesystem: master\n                -   pvt.egorpugin.primitives.context: master\n                -   pvt.egorpugin.primitives.date_time: master\n                -   pvt.egorpugin.primitives.executor: master\n                -   pvt.egorpugin.primitives.hash: master\n                -   pvt.egorpugin.primitives.http: master\n                -   pvt.egorpugin.primitives.lock: master\n                -   pvt.egorpugin.primitives.log: master\n                -   pvt.egorpugin.primitives.pack: master\n                -   pvt.egorpugin.primitives.command: master\n                -   pvt.egorpugin.primitives.yaml: master\n                -   pvt.egorpugin.primitives.win32helpers: master\n                -   pvt.cppan.demo.fmt: \"*\"\n                -   pvt.cppan.demo.imageworks.pystring: 1\n                -   pvt.cppan.demo.giovannidicanio.winreg: master\n                -   name: pvt.egorpugin.primitives.tools.embedder\n                    version: master\n                    ref: embedder\n\n        post_sources: |\n            set(CPPAN_VERSION_STRING ${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH})\n            \n            add_executable(stamp_generator ${SDIR}\/src\/gen\/stamp_gen.cpp)\n            set_property(TARGET stamp_generator PROPERTY FOLDER gen)\n            set(stamp ${BDIR}\/stamp.h.in)\n            # to run every time\n            # do not change to command\n            add_custom_target(gen_stamp\n                COMMAND stamp_generator > ${stamp}\n            )\n            set_property(TARGET gen_stamp PROPERTY FOLDER gen)\n            set_source_files_properties(${stamp} PROPERTIES GENERATED True)\n            set(src ${src} ${stamp})\n            \n            embed(${SDIR}\/src\/inserts\/inserts.cpp.in\n                ${SDIR}\/src\/inserts\/cppan.h\n                ${SDIR}\/src\/inserts\/build.cmake\n                ${SDIR}\/src\/inserts\/functions.cmake\n                ${SDIR}\/src\/inserts\/generate.cmake\n                ${SDIR}\/src\/inserts\/exports.cmake\n                ${SDIR}\/src\/inserts\/header.cmake\n                ${SDIR}\/src\/inserts\/version.rc.in\n                ${SDIR}\/src\/inserts\/branch.rc.in\n            )\n            \n            ########################################\n            \n            find_package(BISON 3.0)\n            find_package(FLEX)\n            \n            ########################################\n            # bazel_parser\n            ########################################\n            \n            execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${BDIR}\/src\/bazel)\n            \n            if (FLEX_FOUND AND BISON_FOUND AND 0)\n                BISON_TARGET(grammar_b\n                    \"${SDIR}\/src\/bazel\/grammar.yy\"\n                    \"${BDIR}\/src\/bazel\/grammar.cpp\"\n                )\n                FLEX_TARGET(lexer_b\n                    \"${SDIR}\/src\/bazel\/lexer.ll\"\n                    \"${BDIR}\/src\/bazel\/lexer.cpp\"\n                    COMPILE_FLAGS --header-file=${BDIR}\/src\/bazel\/lexer.h\n                )\n                ADD_FLEX_BISON_DEPENDENCY(lexer_b grammar_b)\n            \n                set(parser_src\n                    ${BISON_grammar_b_OUTPUTS}\n                    ${FLEX_lexer_b_OUTPUTS}\n                    ${BDIR}\/src\/bazel\/lexer.h\n                )\n                set_source_files_properties(${BDIR}\/src\/bazel\/lexer.h PROPERTIES GENERATED TRUE)\n            endif()\n            set(src ${src} ${parser_src})\n            \n            ########################################\n            # extract_comments\n            ########################################\n            \n            execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${BDIR}\/src\/comments)\n            \n            if (FLEX_FOUND AND BISON_FOUND AND 0)\n                BISON_TARGET(grammar_c\n                    \"${SDIR}\/src\/comments\/grammar.yy\"\n                    \"${BDIR}\/src\/comments\/grammar.cpp\"\n                )\n                FLEX_TARGET(lexer_c\n                    \"${SDIR}\/src\/comments\/lexer.ll\"\n                    \"${BDIR}\/src\/comments\/lexer.cpp\"\n                    COMPILE_FLAGS --header-file=${BDIR}\/src\/comments\/lexer.h\n                )\n                ADD_FLEX_BISON_DEPENDENCY(lexer_c grammar_c)\n            \n                set(parser_src\n                    ${BISON_grammar_c_OUTPUTS}\n                    ${FLEX_lexer_c_OUTPUTS}\n                    ${BDIR}\/src\/comments\/lexer.h\n                )\n                set_source_files_properties(${BDIR}\/src\/comments\/lexer.h PROPERTIES GENERATED TRUE)\n            endif()\n            set(src ${src} ${parser_src})\n\n        post_target: |\n            target_include_directories(${this} PRIVATE ${BDIR}\/src)\n            target_sources(${this} PUBLIC ${SDIR}\/src\/common\/cppan.natvis)\n            add_dependencies(${this} gen_stamp)\n\n    cppan:\n        c++: 17\n\n        rc_enabled: false\n\n        files:\n            -   src\/client\/.*\n\n        exclude_from_package:\n            -   src\/client\/.*\\.txt\n\n        dependencies:\n            -   common\n            -   pvt.cppan.demo.boost.program_options: 1\n            -   pvt.cppan.demo.yhirose.cpp_linenoise: master\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/cppan\/cppan",
            "branch": "v1"
        }
    },
    "hash": "36b1b8777b34ff2313ad25f9f60f5c3047501111293019bcf6b7b5cf52b0e6c6",
    "created": "2018-07-14 11:24:40.540367"
}
