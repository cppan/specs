{
    "project": "pvt.cppan.client.common",
    "version": "v1",
    "cppan": "source:\n    git: https:\/\/github.com\/cppan\/cppan\n    branch: v1\n\nversion: v1\n\ntype: library\n\nc++: 17\n\nstatic_only: true\n\nfiles:\n    -   src\/bazel\/.*\n    -   src\/comments\/.*\n    -   src\/common\/.*\n    -   src\/gen\/.*\n    -   src\/inserts\/.*\n    -   src\/printers\/.*\n    -   src\/support\/.*\n\nexclude_from_package:\n    -   src\/bazel\/.*\\.txt\n    -   src\/bazel\/test\/test.cpp\n    -   src\/comments\/.*\\.txt\n\nexclude_from_build:\n    -   src\/gen\/.*\n\ninclude_directories:\n    public:\n        -   src\/support\n        -   src\/common\n        -   src\n\noptions:\n    any:\n        definitions:\n            public:\n                -   BUILD_NUMBER=0\n                -   CPPAN_VERSION_STRING=${CPPAN_VERSION_STRING}\n                -   VERSION_MAJOR=0\n                -   VERSION_MINOR=2\n                -   VERSION_PATCH=5\n            win32:\n                public:\n                    -   UNICODE\n\ndependencies:\n    public:\n        pvt.egorpugin.primitives.yaml:\n            version: master\n        pvt.egorpugin.primitives.pack:\n            version: master\n        pvt.egorpugin.primitives.log:\n            version: master\n        pvt.egorpugin.primitives.lock:\n            version: master\n        pvt.egorpugin.primitives.executor:\n            version: master\n        pvt.egorpugin.primitives.hash:\n            version: master\n        pvt.cppan.demo.boost.property_tree:\n            version: 1\n        pvt.egorpugin.primitives.command:\n            version: master\n        pvt.egorpugin.primitives.date_time:\n            version: master\n        pvt.egorpugin.primitives.tools.embedder:\n            version: master\n            reference: embedder\n        pvt.egorpugin.primitives.string:\n            version: master\n        pvt.egorpugin.primitives.context:\n            version: master\n        pvt.cppan.demo.boost.stacktrace:\n            version: 1\n        pvt.cppan.demo.boost.optional:\n            version: 1\n        pvt.egorpugin.primitives.filesystem:\n            version: master\n        pvt.egorpugin.primitives.win32helpers:\n            version: master\n        pvt.egorpugin.primitives.http:\n            version: master\n        pvt.cppan.demo.fmt:\n            version: \"*\"\n        pvt.cppan.demo.imageworks.pystring:\n            version: 1\n        pvt.cppan.demo.sqlite3:\n            version: 3\n        pvt.cppan.demo.giovannidicanio.winreg:\n            version: master\n\npost_sources: |\n    set(CPPAN_VERSION_STRING ${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH})\n    \n    add_executable(stamp_generator ${SDIR}\/src\/gen\/stamp_gen.cpp)\n    set_property(TARGET stamp_generator PROPERTY FOLDER gen)\n    set(stamp ${BDIR}\/stamp.h.in)\n    # to run every time\n    # do not change to command\n    add_custom_target(gen_stamp\n        COMMAND stamp_generator > ${stamp}\n    )\n    set_property(TARGET gen_stamp PROPERTY FOLDER gen)\n    set_source_files_properties(${stamp} PROPERTIES GENERATED True)\n    set(src ${src} ${stamp})\n    \n    embed(${SDIR}\/src\/inserts\/inserts.cpp.in\n        ${SDIR}\/src\/inserts\/cppan.h\n        ${SDIR}\/src\/inserts\/build.cmake\n        ${SDIR}\/src\/inserts\/functions.cmake\n        ${SDIR}\/src\/inserts\/generate.cmake\n        ${SDIR}\/src\/inserts\/exports.cmake\n        ${SDIR}\/src\/inserts\/header.cmake\n        ${SDIR}\/src\/inserts\/version.rc.in\n        ${SDIR}\/src\/inserts\/branch.rc.in\n    )\n    \n    ########################################\n    \n    find_package(BISON 3.0)\n    find_package(FLEX)\n    \n    ########################################\n    # bazel_parser\n    ########################################\n    \n    execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${BDIR}\/src\/bazel)\n    \n    if (FLEX_FOUND AND BISON_FOUND AND 0)\n        BISON_TARGET(grammar_b\n            \"${SDIR}\/src\/bazel\/grammar.yy\"\n            \"${BDIR}\/src\/bazel\/grammar.cpp\"\n        )\n        FLEX_TARGET(lexer_b\n            \"${SDIR}\/src\/bazel\/lexer.ll\"\n            \"${BDIR}\/src\/bazel\/lexer.cpp\"\n            COMPILE_FLAGS --header-file=${BDIR}\/src\/bazel\/lexer.h\n        )\n        ADD_FLEX_BISON_DEPENDENCY(lexer_b grammar_b)\n    \n        set(parser_src\n            ${BISON_grammar_b_OUTPUTS}\n            ${FLEX_lexer_b_OUTPUTS}\n            ${BDIR}\/src\/bazel\/lexer.h\n        )\n        set_source_files_properties(${BDIR}\/src\/bazel\/lexer.h PROPERTIES GENERATED TRUE)\n    endif()\n    set(src ${src} ${parser_src})\n    \n    ########################################\n    # extract_comments\n    ########################################\n    \n    execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${BDIR}\/src\/comments)\n    \n    if (FLEX_FOUND AND BISON_FOUND AND 0)\n        BISON_TARGET(grammar_c\n            \"${SDIR}\/src\/comments\/grammar.yy\"\n            \"${BDIR}\/src\/comments\/grammar.cpp\"\n        )\n        FLEX_TARGET(lexer_c\n            \"${SDIR}\/src\/comments\/lexer.ll\"\n            \"${BDIR}\/src\/comments\/lexer.cpp\"\n            COMPILE_FLAGS --header-file=${BDIR}\/src\/comments\/lexer.h\n        )\n        ADD_FLEX_BISON_DEPENDENCY(lexer_c grammar_c)\n    \n        set(parser_src\n            ${BISON_grammar_c_OUTPUTS}\n            ${FLEX_lexer_c_OUTPUTS}\n            ${BDIR}\/src\/comments\/lexer.h\n        )\n        set_source_files_properties(${BDIR}\/src\/comments\/lexer.h PROPERTIES GENERATED TRUE)\n    endif()\n    set(src ${src} ${parser_src})\n\npost_target: |\n    target_include_directories(${this} PRIVATE ${BDIR}\/src)\n    target_sources(${this} PUBLIC ${SDIR}\/src\/common\/cppan.natvis)\n    add_dependencies(${this} gen_stamp gen_inserts)\n\n",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/cppan\/cppan",
            "branch": "v1"
        }
    },
    "hash": "85a8da10813c189af826aceead0aa0d292029c80fd397a1538bced3e25044429",
    "created": "2018-07-14 11:25:24.101143"
}
