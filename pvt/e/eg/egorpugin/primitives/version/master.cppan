{
    "project": "pvt.egorpugin.primitives.version",
    "version": "master",
    "source": {
        "git": {
            "url": "https:\/\/github.com\/egorpugin\/primitives",
            "branch": "master"
        }
    },
    "cppan": "source:\n    git: https:\/\/github.com\/egorpugin\/primitives\n    branch: master\n\nversion: master\n\nname: version\n\ntype: library\n\nroot_directory: src\/version\n\nc++: 17\n\ncreate_default_api: true\n\ndefault_api_start: primitives\n\noptions:\n    any:\n        definitions:\n            private:\n                -   BISON_PARSER\n        compile_options:\n            clang:\n                private:\n                    -   -Wno-assume\n                    -   -Wno-delete-non-virtual-dtor\n                    -   -Wno-potentially-evaluated-expression\n            msvc:\n                public:\n                    -   \/permissive-\n                    -   \/wd4251\n\ndependencies:\n    public:\n        pvt.cppan.demo.lexxmark.winflexbison.flex:\n            version: master\n            reference: flex\n            conditions:\n                -   WIN32\n        pvt.egorpugin.primitives.hash:\n            version: \"*\"\n        pvt.cppan.demo.imageworks.pystring:\n            version: 1\n        pvt.cppan.demo.fmt:\n            version: 4\n        pvt.cppan.demo.ragel:\n            version: 6\n        pvt.cppan.demo.lexxmark.winflexbison.bison:\n            version: master\n            reference: bison\n            conditions:\n                -   WIN32\n        pvt.egorpugin.primitives.templates:\n            version: \"*\"\n\npost_sources: |\n    macro(ragel f)\n        set(i ${SDIR}\/src\/${f}.rl)\n        set(o ${f}.rl.cpp)\n        add_custom_command(OUTPUT ${BDIR}\/${o}\n            COMMAND pvt.cppan.demo.ragel ${i} -o ${BDIR}\/${o}\n            DEPENDS ${i}\n        )\n        set(src ${src} ${BDIR}\/${o})\n    endmacro(ragel)\n    \n    ragel(version)\n    \n    #\n\npost_target: |\n    macro(flex_bison lexer parser)\n        set(bdir ${BDIR_PRIVATE}\/fb)\n    \n        if (NOT WIN32)\n            set(flex flex)\n            set(bison bison)\n        endif()\n    \n        get_filename_component(d ${lexer} DIRECTORY)\n        execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${bdir}\/${d})\n    \n        add_custom_command(OUTPUT\n                ${bdir}\/${parser}.cpp\n                ${bdir}\/${parser}.hpp\n            COMMAND ${bison} -o ${bdir}\/${parser}.cpp --defines=${bdir}\/${parser}.hpp ${SDIR}\/${parser}\n            DEPENDS ${bison} ${SDIR}\/${parser}\n            WORKING_DIRECTORY ${bdir}\/${d}\n        )\n        target_include_directories(${this} PRIVATE ${bdir}\/${d})\n    \n        get_filename_component(d ${parser} DIRECTORY)\n        execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${bdir}\/${d})\n    \n        add_custom_command(OUTPUT\n                ${bdir}\/${lexer}.cpp\n                #${bdir}\/${lexer}.h\n            #COMMAND ${flex} -o ${bdir}\/${lexer}.cpp --header-file=${lexer}.h ${SDIR}\/${lexer}\n            COMMAND ${flex} -o ${bdir}\/${lexer}.cpp ${SDIR}\/${lexer}\n            DEPENDS ${flex} ${SDIR}\/${lexer} ${bdir}\/${parser}.hpp\n            WORKING_DIRECTORY ${bdir}\n        )\n        target_include_directories(${this} PRIVATE ${bdir}\/${d})\n    \n        target_sources(${this} PRIVATE\n            ${bdir}\/${parser}.cpp\n            ${bdir}\/${parser}.hpp\n            ${bdir}\/${lexer}.cpp\n            #${bdir}\/${lexer}.h\n        )\n    endmacro()\n    \n    flex_bison(src\/range.ll src\/range.yy)\n    \n    target_sources(${this} PUBLIC ${SDIR}\/src\/version.natvis)\n\n",
    "hash": "8f47d9a5059b618a24de33a1301111b18e4666342dfb95403a32b2e38e619101",
    "created": "2018-06-01 21:08:46.264339"
}
